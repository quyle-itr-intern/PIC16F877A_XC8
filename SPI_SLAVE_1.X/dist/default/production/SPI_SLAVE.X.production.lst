

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 18:24:56 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.32
    15                           ; Generated 02/02/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0007                     _PORTCbits	set	7
   170  0013                     _SSPBUF	set	19
   171  0008                     _PORTD	set	8
   172  000C                     _PIR1bits	set	12
   173  000B                     _INTCONbits	set	11
   174  0014                     _SSPCONbits	set	20
   175  0088                     _TRISD	set	136
   176  0081                     _OPTION_REGbits	set	129
   177  008C                     _PIE1bits	set	140
   178  0094                     _SSPSTATbits	set	148
   179  0086                     _TRISBbits	set	134
   180  0085                     _TRISAbits	set	133
   181  009F                     _ADCON1	set	159
   182  0087                     _TRISCbits	set	135
   183                           
   184                           	psect	cinit
   185  000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188  000F                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   192  0010  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   193  0011                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  0011                     __end_of__initialization:
   197  0011  0183               	clrf	3
   198  0012  120A  118A  285A   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201  0073                     __pbssCOMMON:
   202  0073                     _Rvalue:
   203  0073                     	ds	1
   204  0074                     _Tvalue:
   205  0074                     	ds	1
   206                           
   207                           	psect	cstackCOMMON
   208  0070                     __pcstackCOMMON:
   209  0070                     ?_SPI_Init:
   210  0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_isr1:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ??_isr1:	
   217                           ; 1 bytes @ 0x0
   218                           
   219                           
   220                           ; 1 bytes @ 0x0
   221  0070                     	ds	3
   222  0073                     ??_SPI_Init:
   223  0073                     ??_main:	
   224                           ; 1 bytes @ 0x3
   225                           
   226                           
   227                           	psect	maintext
   228  005A                     __pmaintext:	
   229                           ; 1 bytes @ 0x3
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 62 in file "newmain.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_SPI_Init
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           
   263                           ;psect for function _main
   264  005A                     _main:
   265  005A                     l682:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   268                           
   269                           
   270                           ;newmain.c: 64:     SPI_Init();
   271  005A  120A  118A  2039  120A  118A  	fcall	_SPI_Init
   272  005F                     l684:
   273                           
   274                           ;newmain.c: 65:     TRISD = 0x00;
   275  005F  1683               	bsf	3,5	;RP0=1, select bank1
   276  0060  1303               	bcf	3,6	;RP1=0, select bank1
   277  0061  0188               	clrf	8	;volatile
   278  0062                     l686:
   279                           
   280                           ;newmain.c: 66:     PORTD = 0x00;
   281  0062  1283               	bcf	3,5	;RP0=0, select bank0
   282  0063  1303               	bcf	3,6	;RP1=0, select bank0
   283  0064  0188               	clrf	8	;volatile
   284  0065                     l40:	
   285                           ;newmain.c: 67:     while(1)
   286                           
   287  0065                     l41:	
   288                           ;newmain.c: 68:     {;newmain.c: 70:     }
   289                           
   290  0065  2865               	goto	l40
   291  0066  120A  118A  280C   	ljmp	start
   292  0069                     __end_of_main:
   293                           
   294                           	psect	text1
   295  0039                     __ptext1:	
   296 ;; *************** function _SPI_Init *****************
   297 ;; Defined at:
   298 ;;		line 30 in file "newmain.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; Hardware stack levels required when called: 1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _SPI_Init
   328  0039                     _SPI_Init:
   329  0039                     l642:	
   330                           ;incstack = 0
   331                           ; Regs used in _SPI_Init: [wreg]
   332                           
   333                           
   334                           ;newmain.c: 33:     TRISCbits.TRISC2 = 0;
   335  0039  1683               	bsf	3,5	;RP0=1, select bank1
   336  003A  1303               	bcf	3,6	;RP1=0, select bank1
   337  003B  1107               	bcf	7,2	;volatile
   338                           
   339                           ;newmain.c: 35:     TRISCbits.TRISC3 = 1;
   340  003C  1587               	bsf	7,3	;volatile
   341                           
   342                           ;newmain.c: 36:     TRISCbits.TRISC4 = 1;
   343  003D  1607               	bsf	7,4	;volatile
   344                           
   345                           ;newmain.c: 37:     TRISCbits.TRISC5 = 0;
   346  003E  1287               	bcf	7,5	;volatile
   347  003F                     l644:
   348                           
   349                           ;newmain.c: 38:     ADCON1 = 0x07;
   350  003F  3007               	movlw	7
   351  0040  009F               	movwf	31	;volatile
   352  0041                     l646:
   353                           
   354                           ;newmain.c: 39:     TRISAbits.TRISA5 = 1;
   355  0041  1685               	bsf	5,5	;volatile
   356  0042                     l648:
   357                           
   358                           ;newmain.c: 40:     TRISBbits.TRISB0 = 1;
   359  0042  1406               	bsf	6,0	;volatile
   360  0043                     l650:
   361                           
   362                           ;newmain.c: 42:     SSPSTATbits.SMP = 0;
   363  0043  1394               	bcf	20,7	;volatile
   364  0044                     l652:
   365                           
   366                           ;newmain.c: 43:     SSPSTATbits.CKE = 0;
   367  0044  1314               	bcf	20,6	;volatile
   368  0045                     l654:
   369                           
   370                           ;newmain.c: 45:     SSPCONbits.WCOL = 0;
   371  0045  1283               	bcf	3,5	;RP0=0, select bank0
   372  0046  1303               	bcf	3,6	;RP1=0, select bank0
   373  0047  1394               	bcf	20,7	;volatile
   374  0048                     l656:
   375                           
   376                           ;newmain.c: 46:     SSPCONbits.SSPOV = 0;
   377  0048  1314               	bcf	20,6	;volatile
   378  0049                     l658:
   379                           
   380                           ;newmain.c: 47:     SSPCONbits.SSPEN = 1;
   381  0049  1694               	bsf	20,5	;volatile
   382  004A                     l660:
   383                           
   384                           ;newmain.c: 48:     SSPCONbits.CKP = 0;
   385  004A  1214               	bcf	20,4	;volatile
   386  004B                     l662:
   387                           
   388                           ;newmain.c: 49:     SSPCONbits.SSPM3 = 0;
   389  004B  1194               	bcf	20,3	;volatile
   390  004C                     l664:
   391                           
   392                           ;newmain.c: 50:     SSPCONbits.SSPM2 = 1;
   393  004C  1514               	bsf	20,2	;volatile
   394  004D                     l666:
   395                           
   396                           ;newmain.c: 51:     SSPCONbits.SSPM1 = 0;
   397  004D  1094               	bcf	20,1	;volatile
   398  004E                     l668:
   399                           
   400                           ;newmain.c: 52:     SSPCONbits.SSPM0 = 0;
   401  004E  1014               	bcf	20,0	;volatile
   402  004F                     l670:
   403                           
   404                           ;newmain.c: 54:     INTCONbits.GIE = 1;
   405  004F  178B               	bsf	11,7	;volatile
   406  0050                     l672:
   407                           
   408                           ;newmain.c: 55:     INTCONbits.INTE = 1;
   409  0050  160B               	bsf	11,4	;volatile
   410  0051                     l674:
   411                           
   412                           ;newmain.c: 56:     INTCONbits.PEIE = 1;
   413  0051  170B               	bsf	11,6	;volatile
   414  0052                     l676:
   415                           
   416                           ;newmain.c: 57:     PIE1bits.SSPIE = 1;
   417  0052  1683               	bsf	3,5	;RP0=1, select bank1
   418  0053  1303               	bcf	3,6	;RP1=0, select bank1
   419  0054  158C               	bsf	12,3	;volatile
   420  0055                     l678:
   421                           
   422                           ;newmain.c: 58:     OPTION_REGbits.INTEDG = 0;
   423  0055  1301               	bcf	1,6	;volatile
   424  0056                     l680:
   425                           
   426                           ;newmain.c: 59:     PIR1bits.SSPIF = 0;
   427  0056  1283               	bcf	3,5	;RP0=0, select bank0
   428  0057  1303               	bcf	3,6	;RP1=0, select bank0
   429  0058  118C               	bcf	12,3	;volatile
   430  0059                     l35:
   431  0059  0008               	return
   432  005A                     __end_of_SPI_Init:
   433                           
   434                           	psect	text2
   435  0015                     __ptext2:	
   436 ;; *************** function _isr1 *****************
   437 ;; Defined at:
   438 ;;		line 73 in file "newmain.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          3       0       0       0       0
   455 ;;      Totals:         3       0       0       0       0
   456 ;;Total ram usage:        3 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		Interrupt level 1
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           
   466                           ;psect for function _isr1
   467  0015                     _isr1:
   468  0015                     i1l688:
   469                           
   470                           ;newmain.c: 75:     if(INTCONbits.INTF == 1)
   471  0015  1C8B               	btfss	11,1	;volatile
   472  0016  2818               	goto	u1_21
   473  0017  2819               	goto	u1_20
   474  0018                     u1_21:
   475  0018  281F               	goto	i1l696
   476  0019                     u1_20:
   477  0019                     i1l690:
   478                           
   479                           ;newmain.c: 76:     {;newmain.c: 77:         SSPBUF = Tvalue;
   480  0019  0874               	movf	_Tvalue,w
   481  001A  1283               	bcf	3,5	;RP0=0, select bank0
   482  001B  1303               	bcf	3,6	;RP1=0, select bank0
   483  001C  0093               	movwf	19	;volatile
   484  001D                     i1l692:
   485                           
   486                           ;newmain.c: 78:         INTCONbits.INTF = 0;
   487  001D  108B               	bcf	11,1	;volatile
   488  001E                     i1l694:
   489                           
   490                           ;newmain.c: 79:         PORTCbits.RC2 = 1;
   491  001E  1507               	bsf	7,2	;volatile
   492  001F                     i1l696:
   493                           
   494                           ;newmain.c: 81:     if(PIR1bits.SSPIF == 1)
   495  001F  1283               	bcf	3,5	;RP0=0, select bank0
   496  0020  1303               	bcf	3,6	;RP1=0, select bank0
   497  0021  1D8C               	btfss	12,3	;volatile
   498  0022  2824               	goto	u2_21
   499  0023  2825               	goto	u2_20
   500  0024                     u2_21:
   501  0024  2832               	goto	i1l50
   502  0025                     u2_20:
   503  0025                     i1l698:
   504                           
   505                           ;newmain.c: 82:     {;newmain.c: 83:         Rvalue = SSPBUF;
   506  0025  0813               	movf	19,w	;volatile
   507  0026  00F0               	movwf	??_isr1
   508  0027  0870               	movf	??_isr1,w
   509  0028  00F3               	movwf	_Rvalue
   510                           
   511                           ;newmain.c: 84:         PORTD = Rvalue;
   512  0029  0873               	movf	_Rvalue,w
   513  002A  0088               	movwf	8	;volatile
   514  002B                     i1l700:
   515                           
   516                           ;newmain.c: 85:         SSPCONbits.SSPOV = 0;
   517  002B  1314               	bcf	20,6	;volatile
   518  002C                     i1l702:
   519                           
   520                           ;newmain.c: 86:         SSPCONbits.WCOL = 0;
   521  002C  1394               	bcf	20,7	;volatile
   522  002D                     i1l704:
   523                           
   524                           ;newmain.c: 88:         SSPCONbits.SSPEN = 0;
   525  002D  1294               	bcf	20,5	;volatile
   526  002E                     i1l706:
   527                           
   528                           ;newmain.c: 89:         PORTCbits.RC5 = 0;
   529  002E  1287               	bcf	7,5	;volatile
   530  002F                     i1l708:
   531                           
   532                           ;newmain.c: 90:         SSPCONbits.SSPEN = 1;
   533  002F  1694               	bsf	20,5	;volatile
   534  0030                     i1l710:
   535                           
   536                           ;newmain.c: 91:         PORTCbits.RC2 = 0;
   537  0030  1107               	bcf	7,2	;volatile
   538  0031                     i1l712:
   539                           
   540                           ;newmain.c: 92:         PIR1bits.SSPIF = 0;
   541  0031  118C               	bcf	12,3	;volatile
   542  0032                     i1l50:
   543  0032  0872               	movf	??_isr1+2,w
   544  0033  008A               	movwf	10
   545  0034  0E71               	swapf	??_isr1+1,w
   546  0035  0083               	movwf	3
   547  0036  0EFE               	swapf	btemp,f
   548  0037  0E7E               	swapf	btemp,w
   549  0038  0009               	retfie
   550  0039                     __end_of_isr1:
   551  007E                     btemp	set	126	;btemp
   552  007E                     wtemp0	set	126
   553                           
   554                           	psect	intentry
   555  0004                     __pintentry:	
   556                           ;incstack = 0
   557                           ; Regs used in _isr1: [wreg]
   558                           
   559  0004                     interrupt_function:
   560  007E                     saved_w	set	btemp
   561  0004  00FE               	movwf	btemp
   562  0005  0E03               	swapf	3,w
   563  0006  00F1               	movwf	??_isr1+1
   564  0007  080A               	movf	10,w
   565  0008  00F2               	movwf	??_isr1+2
   566  0009  120A  118A  2815   	ljmp	_isr1
   567                           
   568                           	psect	config
   569                           
   570                           ;Config register CONFIG @ 0x2007
   571                           ;	Oscillator Selection bits
   572                           ;	FOSC = HS, HS oscillator
   573                           ;	Watchdog Timer Enable bit
   574                           ;	WDTE = OFF, WDT disabled
   575                           ;	Power-up Timer Enable bit
   576                           ;	PWRTE = OFF, PWRT disabled
   577                           ;	Brown-out Reset Enable bit
   578                           ;	BOREN = OFF, BOR disabled
   579                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   580                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   581                           ;	Data EEPROM Memory Code Protection bit
   582                           ;	CPD = OFF, Data EEPROM code protection off
   583                           ;	Flash Program Memory Write Enable bits
   584                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   585                           ;	In-Circuit Debugger Mode bit
   586                           ;	DEBUG = 0x1, unprogrammed default
   587                           ;	Flash Program Memory Code Protection bit
   588                           ;	CP = OFF, Code protection off
   589  2007                     	org	8199
   590  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr1 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr1                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init

 _isr1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 18:24:56 2022

            _SSPSTATbits 0094                       l40 0065                       l41 0065  
                     l35 0059                      l650 0043                      l642 0039  
                    l660 004A                      l652 0044                      l644 003F  
                    l670 004F                      l662 004B                      l654 0045  
                    l646 0041                      l680 0056                      l672 0050  
                    l664 004C                      l656 0048                      l648 0042  
                    l674 0051                      l666 004D                      l658 0049  
                    l682 005A                      l676 0052                      l668 004E  
                    l684 005F                      l678 0055                      l686 0062  
                   i1l50 0032                     u1_20 0019                     u1_21 0018  
                   u2_20 0025                     u2_21 0024                     _isr1 0015  
                   _main 005A                     btemp 007E                     start 000C  
                  ?_isr1 0070                    ?_main 0070                    i1l700 002B  
                  i1l710 0030                    i1l702 002C                    i1l712 0031  
                  i1l704 002D                    i1l706 002E                    i1l708 002F  
                  i1l690 0019                    i1l692 001D                    i1l694 001E  
                  i1l696 001F                    i1l688 0015                    i1l698 0025  
                  _PORTD 0008                    _TRISD 0088         __end_of_SPI_Init 005A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_isr1 0039             __end_of_main 0069  
                 ??_isr1 0070                   ??_main 0073                   _ADCON1 009F  
                 _SSPBUF 0013                   _Rvalue 0073                   _Tvalue 0074  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
              ?_SPI_Init 0070           _OPTION_REGbits 0081               __pmaintext 005A  
             __pintentry 0004               ??_SPI_Init 0073                  __ptext1 0039  
                __ptext2 0015     end_of_initialization 0011                _PORTCbits 0007  
              _TRISAbits 0085                _TRISBbits 0086                _TRISCbits 0087  
      __size_of_SPI_Init 0021      start_initialization 000F              __pbssCOMMON 0073  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C                 _SPI_Init 0039            __size_of_isr1 0024  
          __size_of_main 000F               _INTCONbits 000B                 intlevel1 0000  
             _SSPCONbits 0014  

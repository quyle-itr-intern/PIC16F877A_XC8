

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 06 10:56:13 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.32
    43                           ; Generated 02/02/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK0
   199  005D                     __pidataBANK0:
   200                           
   201                           ;initializer for main@F1024
   202  005D  3448               	retlw	low ((STR_1-__stringbase)| (0+32768))
   203  005E  343C               	retlw	low ((STR_2-__stringbase)| (0+32768))
   204  005F  3438               	retlw	low ((STR_3-__stringbase)| (0+32768))
   205  0060  3430               	retlw	low ((STR_4-__stringbase)| (0+32768))
   206  0061  342C               	retlw	low ((STR_5-__stringbase)| (0+32768))
   207  0062  3444               	retlw	low ((STR_6-__stringbase)| (0+32768))
   208  0063  3434               	retlw	low ((STR_7-__stringbase)| (0+32768))
   209  0064  3440               	retlw	low ((STR_8-__stringbase)| (0+32768))
   210                           
   211                           	psect	strings
   212  0003                     __pstrings:
   213  0003                     stringtab:
   214  0003                     __stringtab:
   215                           
   216                           ;	String table - string pointers are 1 byte each
   217  0003  1BFF               	btfsc	btemp+1,7
   218  0004  280D               	ljmp	stringcode
   219  0005  1383               	bcf	3,7
   220  0006  187F               	btfsc	btemp+1,0
   221  0007  1783               	bsf	3,7
   222  0008  0800               	movf	0,w
   223  0009  0A84               	incf	4,f
   224  000A  1903               	skipnz
   225  000B  0AFF               	incf	btemp+1,f
   226  000C  0008               	return
   227  000D                     stringcode:
   228  000D                     stringdir:
   229  000D  3000               	movlw	high stringdir
   230  000E  008A               	movwf	10
   231  000F  0804               	movf	4,w
   232  0010  0A84               	incf	4,f
   233  0011  0782               	addwf	2,f
   234  0012                     __stringbase:
   235  0012  3400               	retlw	0
   236  0013                     __end_of__stringtab:
   237  0013                     _dpowers:
   238  0013  3401               	retlw	1
   239  0014  3400               	retlw	0
   240  0015  340A               	retlw	10
   241  0016  3400               	retlw	0
   242  0017  3464               	retlw	100
   243  0018  3400               	retlw	0
   244  0019  34E8               	retlw	232
   245  001A  3403               	retlw	3
   246  001B  3410               	retlw	16
   247  001C  3427               	retlw	39
   248  001D                     __end_of_dpowers:
   249  0008                     _PORTDbits	set	8
   250  0006                     _PORTB	set	6
   251  0006                     _PORTBbits	set	6
   252  0088                     _TRISDbits	set	136
   253  0086                     _TRISB	set	134
   254  001D                     STR_9:
   255  001D  3425               	retlw	37	;'%'
   256  001E  3473               	retlw	115	;'s'
   257  001F  3420               	retlw	32	;' '
   258  0020  3425               	retlw	37	;'%'
   259  0021  3464               	retlw	100	;'d'
   260  0022  342D               	retlw	45	;'-'
   261  0023  3425               	retlw	37	;'%'
   262  0024  3464               	retlw	100	;'d'
   263  0025  342D               	retlw	45	;'-'
   264  0026  3432               	retlw	50	;'2'
   265  0027  3430               	retlw	48	;'0'
   266  0028  3425               	retlw	37	;'%'
   267  0029  3464               	retlw	100	;'d'
   268  002A  3400               	retlw	0
   269  002B                     STR_10:
   270  002B  3420               	retlw	32	;' '
   271  002C  3420               	retlw	32	;' '
   272  002D  3420               	retlw	32	;' '
   273  002E  3425               	retlw	37	;'%'
   274  002F  3464               	retlw	100	;'d'
   275  0030  343A               	retlw	58	;':'
   276  0031  3425               	retlw	37	;'%'
   277  0032  3464               	retlw	100	;'d'
   278  0033  343A               	retlw	58	;':'
   279  0034  3425               	retlw	37	;'%'
   280  0035  3464               	retlw	100	;'d'
   281  0036  3400               	retlw	0
   282  0037                     STR_11:
   283  0037  3428               	retlw	40	;'('
   284  0038  346E               	retlw	110	;'n'
   285  0039  3475               	retlw	117	;'u'
   286  003A  346C               	retlw	108	;'l'
   287  003B  346C               	retlw	108	;'l'
   288  003C  3429               	retlw	41	;')'
   289  003D  3400               	retlw	0
   290  003E                     STR_5:
   291  003E  3457               	retlw	87	;'W'
   292  003F  3465               	retlw	101	;'e'
   293  0040  3464               	retlw	100	;'d'
   294  0041  3400               	retlw	0
   295  0042                     STR_4:
   296  0042  3454               	retlw	84	;'T'
   297  0043  3475               	retlw	117	;'u'
   298  0044  3465               	retlw	101	;'e'
   299  0045  3400               	retlw	0
   300  0046                     STR_7:
   301  0046  3446               	retlw	70	;'F'
   302  0047  3472               	retlw	114	;'r'
   303  0048  3469               	retlw	105	;'i'
   304  0049  3400               	retlw	0
   305  004A                     STR_3:
   306  004A  344D               	retlw	77	;'M'
   307  004B  346F               	retlw	111	;'o'
   308  004C  346E               	retlw	110	;'n'
   309  004D  3400               	retlw	0
   310  004E                     STR_2:
   311  004E  3453               	retlw	83	;'S'
   312  004F  3475               	retlw	117	;'u'
   313  0050  346E               	retlw	110	;'n'
   314  0051  3400               	retlw	0
   315  0052                     STR_8:
   316  0052  3453               	retlw	83	;'S'
   317  0053  3461               	retlw	97	;'a'
   318  0054  3474               	retlw	116	;'t'
   319  0055  3400               	retlw	0
   320  0056                     STR_6:
   321  0056  3454               	retlw	84	;'T'
   322  0057  3468               	retlw	104	;'h'
   323  0058  3475               	retlw	117	;'u'
   324  0059  3400               	retlw	0
   325  005A                     STR_1:
   326  005A  342D               	retlw	45	;'-'
   327  005B  342D               	retlw	45	;'-'
   328  005C  3400               	retlw	0
   329                           
   330                           	psect	cinit
   331  07EE                     start_initialization:	
   332                           ; #config settings
   333                           
   334  07EE                     __initialization:
   335                           
   336                           ; Initialize objects allocated to BANK0
   337  07EE  1383               	bcf	3,7	;select IRP bank0
   338  07EF  3063               	movlw	low (__pdataBANK0+8)
   339  07F0  00FD               	movwf	btemp+-1
   340  07F1  3000               	movlw	high __pidataBANK0
   341  07F2  00FE               	movwf	btemp
   342  07F3  305D               	movlw	low __pidataBANK0
   343  07F4  00FF               	movwf	btemp+1
   344  07F5  305B               	movlw	low __pdataBANK0
   345  07F6  0084               	movwf	4
   346  07F7  120A  118A  207C  120A  118A  	fcall	init_ram0
   347  07FC                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350  07FC                     __end_of__initialization:
   351  07FC  0183               	clrf	3
   352  07FD  120A  118A  2DE8   	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	dataBANK0
   355  005B                     __pdataBANK0:
   356  005B                     main@F1024:
   357  005B                     	ds	8
   358                           
   359                           	psect	inittext
   360  0078                     init_fetch0:	
   361                           ;	Called with low address in FSR and high address in W
   362                           
   363  0078  087E               	movf	btemp,w
   364  0079  008A               	movwf	10
   365  007A  087F               	movf	btemp+1,w
   366  007B  0082               	movwf	2
   367  007C                     init_ram0:	
   368                           ;Called with:
   369                           ;	high address of idata address in btemp 
   370                           ;	low address of idata address in btemp+1 
   371                           ;	low address of data in FSR
   372                           ;	high address + 1 of data in btemp-1
   373                           
   374  007C  120A  118A  2078  120A  118A  	fcall	init_fetch0
   375  0081  0080               	movwf	0
   376  0082  0A84               	incf	4,f
   377  0083  0804               	movf	4,w
   378  0084  067D               	xorwf	btemp+-1,w
   379  0085  1903               	btfsc	3,2
   380  0086  3400               	retlw	0
   381  0087  0AFF               	incf	btemp+1,f
   382  0088  1903               	btfsc	3,2
   383  0089  0AFE               	incf	btemp,f
   384  008A  287C               	goto	init_ram0
   385                           
   386                           	psect	cstackCOMMON
   387  0070                     __pcstackCOMMON:
   388  0070                     ?_LCD_Cmd:
   389  0070                     ??_LCD_Cmd:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_LCD_Cmd_Init:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_LCD_Cmd_Init:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_LCD_Init:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_LCD_Char:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_LCD_Char:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_LCD_String:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_I2C_Init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_I2C_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_I2C_Start:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_I2C_Start:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_I2C_Stop:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_I2C_Stop:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_I2C_Write:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_I2C_Write:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_I2C_WaitACK:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_I2C_ACK:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ??_I2C_ACK:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_I2C_NACK:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_I2C_NACK:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_I2C_Read:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_RTC_Bcd2Bin:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_RTC_Bin2Bcd:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_RTC_CheckMinMax:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_main:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?___bmul:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?___awdiv:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?___awmod:	
   471                           ; 2 bytes @ 0x0
   472                           
   473  0070                     ?___lwdiv:	
   474                           ; 2 bytes @ 0x0
   475                           
   476  0070                     RTC_CheckMinMax@min:	
   477                           ; 2 bytes @ 0x0
   478                           
   479  0070                     ___bmul@multiplicand:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ___awdiv@divisor:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ___awmod@divisor:	
   486                           ; 2 bytes @ 0x0
   487                           
   488  0070                     ___lwdiv@divisor:	
   489                           ; 2 bytes @ 0x0
   490                           
   491                           
   492                           ; 2 bytes @ 0x0
   493  0070                     	ds	1
   494  0071                     ??_I2C_WaitACK:
   495  0071                     ??_I2C_Read:	
   496                           ; 1 bytes @ 0x1
   497                           
   498  0071                     ??___bmul:	
   499                           ; 1 bytes @ 0x1
   500                           
   501  0071                     LCD_Cmd_Init@cmd:	
   502                           ; 1 bytes @ 0x1
   503                           
   504  0071                     RTC_CheckMinMax@max:	
   505                           ; 1 bytes @ 0x1
   506                           
   507                           
   508                           ; 1 bytes @ 0x1
   509  0071                     	ds	1
   510  0072                     ??_RTC_CheckMinMax:
   511  0072                     LCD_Cmd@cmd:	
   512                           ; 1 bytes @ 0x2
   513                           
   514  0072                     LCD_Char@c:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0072                     I2C_Write@Tvalue:	
   518                           ; 1 bytes @ 0x2
   519                           
   520  0072                     I2C_WaitACK@time:	
   521                           ; 1 bytes @ 0x2
   522                           
   523  0072                     I2C_Read@ACK:	
   524                           ; 1 bytes @ 0x2
   525                           
   526  0072                     RTC_CheckMinMax@val:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0072                     ___bmul@product:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     ___awdiv@dividend:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0072                     ___awmod@dividend:	
   536                           ; 2 bytes @ 0x2
   537                           
   538  0072                     ___lwdiv@dividend:	
   539                           ; 2 bytes @ 0x2
   540                           
   541                           
   542                           ; 2 bytes @ 0x2
   543  0072                     	ds	1
   544  0073                     ??_LCD_Init:
   545  0073                     ??_LCD_String:	
   546                           ; 1 bytes @ 0x3
   547                           
   548  0073                     ?_LCD_GotoCursor:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     LCD_GotoCursor@col:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0073                     I2C_Write@i:	
   555                           ; 1 bytes @ 0x3
   556                           
   557  0073                     I2C_Read@Rvalue:	
   558                           ; 1 bytes @ 0x3
   559                           
   560  0073                     ___bmul@multiplier:	
   561                           ; 1 bytes @ 0x3
   562                           
   563                           
   564                           ; 1 bytes @ 0x3
   565  0073                     	ds	1
   566  0074                     ??_LCD_GotoCursor:
   567  0074                     ?_I2C_WriteMulti:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0074                     ??_RTC_Bcd2Bin:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0074                     ??___awdiv:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0074                     ??___awmod:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0074                     ??___lwdiv:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0074                     LCD_String@str:	
   583                           ; 1 bytes @ 0x4
   584                           
   585  0074                     I2C_Read@i:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  0074                     I2C_WriteMulti@reg:	
   589                           ; 1 bytes @ 0x4
   590                           
   591                           
   592                           ; 1 bytes @ 0x4
   593  0074                     	ds	1
   594  0075                     ?_I2C_ReadMultiPointer:
   595  0075                     LCD_GotoCursor@row:	
   596                           ; 1 bytes @ 0x5
   597                           
   598  0075                     I2C_WriteMulti@len:	
   599                           ; 1 bytes @ 0x5
   600                           
   601  0075                     I2C_ReadMultiPointer@reg:	
   602                           ; 1 bytes @ 0x5
   603                           
   604  0075                     ___awdiv@counter:	
   605                           ; 1 bytes @ 0x5
   606                           
   607  0075                     ___awmod@counter:	
   608                           ; 1 bytes @ 0x5
   609                           
   610  0075                     ___lwdiv@quotient:	
   611                           ; 1 bytes @ 0x5
   612                           
   613                           
   614                           ; 2 bytes @ 0x5
   615  0075                     	ds	1
   616  0076                     I2C_WriteMulti@buff:
   617  0076                     I2C_ReadMultiPointer@len:	
   618                           ; 1 bytes @ 0x6
   619                           
   620  0076                     ___awdiv@sign:	
   621                           ; 1 bytes @ 0x6
   622                           
   623  0076                     ___awmod@sign:	
   624                           ; 1 bytes @ 0x6
   625                           
   626  0076                     _LCD_GotoCursor$123:	
   627                           ; 1 bytes @ 0x6
   628                           
   629                           
   630                           ; 2 bytes @ 0x6
   631  0076                     	ds	1
   632  0077                     ??_I2C_WriteMulti:
   633  0077                     I2C_ReadMultiPointer@Rvalue:	
   634                           ; 1 bytes @ 0x7
   635                           
   636  0077                     RTC_Bcd2Bin@bcd:	
   637                           ; 1 bytes @ 0x7
   638                           
   639  0077                     ___lwdiv@counter:	
   640                           ; 1 bytes @ 0x7
   641                           
   642  0077                     ___awdiv@quotient:	
   643                           ; 1 bytes @ 0x7
   644                           
   645                           
   646                           ; 2 bytes @ 0x7
   647  0077                     	ds	1
   648  0078                     ??_I2C_ReadMultiPointer:
   649  0078                     ?___lwmod:	
   650                           ; 1 bytes @ 0x8
   651                           
   652  0078                     LCD_GotoCursor@cmd:	
   653                           ; 2 bytes @ 0x8
   654                           
   655  0078                     ___lwmod@divisor:	
   656                           ; 1 bytes @ 0x8
   657                           
   658                           
   659                           ; 2 bytes @ 0x8
   660  0078                     	ds	1
   661  0079                     I2C_WriteMulti@addr:
   662  0079                     RTC_Bin2Bcd@bin:	
   663                           ; 1 bytes @ 0x9
   664                           
   665                           
   666                           ; 1 bytes @ 0x9
   667  0079                     	ds	1
   668  007A                     I2C_WriteMulti@i:
   669  007A                     I2C_ReadMultiPointer@addr:	
   670                           ; 1 bytes @ 0xA
   671                           
   672  007A                     ___lwmod@dividend:	
   673                           ; 1 bytes @ 0xA
   674                           
   675                           
   676                           ; 2 bytes @ 0xA
   677  007A                     	ds	1
   678  007B                     ??_RTC_GetDateTime:
   679  007B                     ??_RTC_SetDateTime:	
   680                           ; 1 bytes @ 0xB
   681                           
   682                           
   683                           ; 1 bytes @ 0xB
   684  007B                     	ds	1
   685  007C                     ??___lwmod:
   686                           
   687                           ; 1 bytes @ 0xC
   688  007C                     	ds	1
   689  007D                     ___lwmod@counter:
   690                           
   691                           ; 1 bytes @ 0xD
   692  007D                     	ds	1
   693                           
   694                           	psect	cstackBANK0
   695  0020                     __pcstackBANK0:
   696  0020                     ??_RTC_Bin2Bcd:
   697  0020                     ?_RTC_GetDateTime:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0020                     ?_sprintf:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0020                     RTC_GetDateTime@minute:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0020                     sprintf@f:	
   707                           ; 1 bytes @ 0x0
   708                           
   709                           
   710                           ; 1 bytes @ 0x0
   711  0020                     	ds	1
   712  0021                     RTC_GetDateTime@second:
   713                           
   714                           ; 1 bytes @ 0x1
   715  0021                     	ds	1
   716  0022                     RTC_GetDateTime@day:
   717                           
   718                           ; 1 bytes @ 0x2
   719  0022                     	ds	1
   720  0023                     RTC_GetDateTime@date:
   721                           
   722                           ; 1 bytes @ 0x3
   723  0023                     	ds	1
   724  0024                     RTC_GetDateTime@month:
   725                           
   726                           ; 1 bytes @ 0x4
   727  0024                     	ds	1
   728  0025                     RTC_GetDateTime@year:
   729                           
   730                           ; 1 bytes @ 0x5
   731  0025                     	ds	1
   732  0026                     RTC_GetDateTime@data:
   733                           
   734                           ; 7 bytes @ 0x6
   735  0026                     	ds	1
   736  0027                     ?_RTC_SetDateTime:
   737  0027                     RTC_SetDateTime@minute:	
   738                           ; 1 bytes @ 0x7
   739                           
   740                           
   741                           ; 1 bytes @ 0x7
   742  0027                     	ds	1
   743  0028                     RTC_SetDateTime@second:
   744                           
   745                           ; 1 bytes @ 0x8
   746  0028                     	ds	1
   747  0029                     ??_sprintf:
   748  0029                     RTC_SetDateTime@day:	
   749                           ; 1 bytes @ 0x9
   750                           
   751                           
   752                           ; 1 bytes @ 0x9
   753  0029                     	ds	1
   754  002A                     RTC_SetDateTime@date:
   755                           
   756                           ; 1 bytes @ 0xA
   757  002A                     	ds	1
   758  002B                     RTC_SetDateTime@month:
   759                           
   760                           ; 1 bytes @ 0xB
   761  002B                     	ds	1
   762  002C                     RTC_SetDateTime@year:
   763  002C                     sprintf@flag:	
   764                           ; 1 bytes @ 0xC
   765                           
   766                           
   767                           ; 1 bytes @ 0xC
   768  002C                     	ds	1
   769  002D                     RTC_GetDateTime@hour:
   770  002D                     sprintf@prec:	
   771                           ; 1 bytes @ 0xD
   772                           
   773  002D                     RTC_SetDateTime@data:	
   774                           ; 1 bytes @ 0xD
   775                           
   776                           
   777                           ; 7 bytes @ 0xD
   778  002D                     	ds	1
   779  002E                     sprintf@ap:
   780                           
   781                           ; 1 bytes @ 0xE
   782  002E                     	ds	1
   783  002F                     sprintf@cp:
   784                           
   785                           ; 2 bytes @ 0xF
   786  002F                     	ds	2
   787  0031                     sprintf@val:
   788                           
   789                           ; 2 bytes @ 0x11
   790  0031                     	ds	2
   791  0033                     sprintf@sp:
   792                           
   793                           ; 1 bytes @ 0x13
   794  0033                     	ds	1
   795  0034                     RTC_SetDateTime@hour:
   796  0034                     sprintf@c:	
   797                           ; 1 bytes @ 0x14
   798                           
   799                           
   800                           ; 1 bytes @ 0x14
   801  0034                     	ds	1
   802  0035                     ??_main:
   803                           
   804                           ; 1 bytes @ 0x15
   805  0035                     	ds	7
   806  003C                     main@d:
   807                           
   808                           ; 8 bytes @ 0x1C
   809  003C                     	ds	8
   810  0044                     main@ds:
   811                           
   812                           ; 16 bytes @ 0x24
   813  0044                     	ds	16
   814  0054                     main@hour:
   815                           
   816                           ; 1 bytes @ 0x34
   817  0054                     	ds	1
   818  0055                     main@minute:
   819                           
   820                           ; 1 bytes @ 0x35
   821  0055                     	ds	1
   822  0056                     main@second:
   823                           
   824                           ; 1 bytes @ 0x36
   825  0056                     	ds	1
   826  0057                     main@day:
   827                           
   828                           ; 1 bytes @ 0x37
   829  0057                     	ds	1
   830  0058                     main@date:
   831                           
   832                           ; 1 bytes @ 0x38
   833  0058                     	ds	1
   834  0059                     main@month:
   835                           
   836                           ; 1 bytes @ 0x39
   837  0059                     	ds	1
   838  005A                     main@year:
   839                           
   840                           ; 1 bytes @ 0x3A
   841  005A                     	ds	1
   842                           
   843                           	psect	maintext
   844  05E8                     __pmaintext:	
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 364 in file "newmain.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  ds             16   36[BANK0 ] unsigned char [16]
   855 ;;  d               8   28[BANK0 ] PTR unsigned char [8]
   856 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
   857 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(3), 
   858 ;;  year            1   58[BANK0 ] unsigned char 
   859 ;;  month           1   57[BANK0 ] unsigned char 
   860 ;;  date            1   56[BANK0 ] unsigned char 
   861 ;;  day             1   55[BANK0 ] unsigned char 
   862 ;;  second          1   54[BANK0 ] unsigned char 
   863 ;;  minute          1   53[BANK0 ] unsigned char 
   864 ;;  hour            1   52[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : B00/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0      31       0       0       0
   876 ;;      Temps:          0       7       0       0       0
   877 ;;      Totals:         0      38       0       0       0
   878 ;;Total ram usage:       38 bytes
   879 ;; Hardware stack levels required when called: 4
   880 ;; This function calls:
   881 ;;		_I2C_Init
   882 ;;		_LCD_GotoCursor
   883 ;;		_LCD_Init
   884 ;;		_LCD_String
   885 ;;		_RTC_GetDateTime
   886 ;;		_RTC_SetDateTime
   887 ;;		_sprintf
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _main
   895  05E8                     _main:
   896  05E8                     l1894:	
   897                           ;incstack = 0
   898                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   899                           
   900                           
   901                           ;newmain.c: 366:     LCD_Init();
   902  05E8  120A  118A  22A0  120A  118A  	fcall	_LCD_Init
   903  05ED                     l1896:
   904                           
   905                           ;newmain.c: 367:     I2C_Init();
   906  05ED  120A  158A  27E8  120A  118A  	fcall	_I2C_Init
   907  05F2                     l1898:
   908                           
   909                           ;newmain.c: 368:     unsigned char hour, minute, second, day, date, month, year;;newmain
      +                          .c: 369:     char ds[16];;newmain.c: 370:     char* d[] = {"--", "Sun", "Mon", "Tue", "W
      +                          ed", "Thu", "Fri", "Sat"};
   910  05F2  303C               	movlw	main@d& (0+255)
   911  05F3  0084               	movwf	4
   912  05F4  305B               	movlw	low main@F1024
   913  05F5  1283               	bcf	3,5	;RP0=0, select bank0
   914  05F6  1303               	bcf	3,6	;RP1=0, select bank0
   915  05F7  00B5               	movwf	??_main
   916  05F8  0804               	movf	4,w
   917  05F9  00B6               	movwf	??_main+1
   918  05FA  3008               	movlw	8
   919  05FB  00B7               	movwf	??_main+2
   920  05FC                     u1500:
   921  05FC  0835               	movf	??_main,w
   922  05FD  0084               	movwf	4
   923  05FE  1383               	bcf	3,7	;select IRP bank0
   924  05FF  0800               	movf	0,w
   925  0600  00B8               	movwf	??_main+3
   926  0601  0AB5               	incf	??_main,f
   927  0602  0836               	movf	??_main+1,w
   928  0603  0084               	movwf	4
   929  0604  0838               	movf	??_main+3,w
   930  0605  0080               	movwf	0
   931  0606  0AB6               	incf	??_main+1,f
   932  0607  0BB7               	decfsz	??_main+2,f
   933  0608  2DFC               	goto	u1500
   934  0609                     l1900:
   935                           
   936                           ;newmain.c: 371:     RTC_SetDateTime(12, 23, 20, 2, 12, 2, 22);
   937  0609  3017               	movlw	23
   938  060A  00B5               	movwf	??_main
   939  060B  0835               	movf	??_main,w
   940  060C  00A7               	movwf	RTC_SetDateTime@minute
   941  060D  3014               	movlw	20
   942  060E  00B6               	movwf	??_main+1
   943  060F  0836               	movf	??_main+1,w
   944  0610  00A8               	movwf	RTC_SetDateTime@second
   945  0611  3002               	movlw	2
   946  0612  00B7               	movwf	??_main+2
   947  0613  0837               	movf	??_main+2,w
   948  0614  00A9               	movwf	RTC_SetDateTime@day
   949  0615  300C               	movlw	12
   950  0616  00B8               	movwf	??_main+3
   951  0617  0838               	movf	??_main+3,w
   952  0618  00AA               	movwf	RTC_SetDateTime@date
   953  0619  3002               	movlw	2
   954  061A  00B9               	movwf	??_main+4
   955  061B  0839               	movf	??_main+4,w
   956  061C  00AB               	movwf	RTC_SetDateTime@month
   957  061D  3016               	movlw	22
   958  061E  00BA               	movwf	??_main+5
   959  061F  083A               	movf	??_main+5,w
   960  0620  00AC               	movwf	RTC_SetDateTime@year
   961  0621  300C               	movlw	12
   962  0622  120A  118A  253F  120A  118A  	fcall	_RTC_SetDateTime
   963  0627                     l1902:
   964                           
   965                           ;newmain.c: 373:     {;newmain.c: 374:         RTC_GetDateTime(&hour,&minute,&second,&da
      +                          y,&date,&month,&year);
   966  0627  3055               	movlw	(low (main@minute| 0))& (0+255)
   967  0628  1283               	bcf	3,5	;RP0=0, select bank0
   968  0629  1303               	bcf	3,6	;RP1=0, select bank0
   969  062A  00B5               	movwf	??_main
   970  062B  0835               	movf	??_main,w
   971  062C  00A0               	movwf	RTC_GetDateTime@minute
   972  062D  3056               	movlw	(low (main@second| 0))& (0+255)
   973  062E  00B6               	movwf	??_main+1
   974  062F  0836               	movf	??_main+1,w
   975  0630  00A1               	movwf	RTC_GetDateTime@second
   976  0631  3057               	movlw	(low (main@day| 0))& (0+255)
   977  0632  00B7               	movwf	??_main+2
   978  0633  0837               	movf	??_main+2,w
   979  0634  00A2               	movwf	RTC_GetDateTime@day
   980  0635  3058               	movlw	(low (main@date| 0))& (0+255)
   981  0636  00B8               	movwf	??_main+3
   982  0637  0838               	movf	??_main+3,w
   983  0638  00A3               	movwf	RTC_GetDateTime@date
   984  0639  3059               	movlw	(low (main@month| 0))& (0+255)
   985  063A  00B9               	movwf	??_main+4
   986  063B  0839               	movf	??_main+4,w
   987  063C  00A4               	movwf	RTC_GetDateTime@month
   988  063D  305A               	movlw	(low (main@year| 0))& (0+255)
   989  063E  00BA               	movwf	??_main+5
   990  063F  083A               	movf	??_main+5,w
   991  0640  00A5               	movwf	RTC_GetDateTime@year
   992  0641  3054               	movlw	(low (main@hour| 0))& (0+255)
   993  0642  120A  118A  2449  120A  118A  	fcall	_RTC_GetDateTime
   994  0647                     l1904:
   995                           
   996                           ;newmain.c: 376:         sprintf(ds,"%s %d-%d-20%d", d[day], date, month, year);
   997  0647  300B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   998  0648  1283               	bcf	3,5	;RP0=0, select bank0
   999  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1000  064A  00B5               	movwf	??_main
  1001  064B  0835               	movf	??_main,w
  1002  064C  00A0               	movwf	sprintf@f
  1003  064D  0857               	movf	main@day,w
  1004  064E  3E3C               	addlw	(low (main@d| 0))& (0+255)
  1005  064F  0084               	movwf	4
  1006  0650  1383               	bcf	3,7	;select IRP bank0
  1007  0651  0800               	movf	0,w
  1008  0652  00A1               	movwf	low ((?_sprintf| 0+1))
  1009  0653  3000               	movlw	0
  1010  0654  1D03               	btfss	3,2
  1011  0655  3080               	movlw	128
  1012  0656  00A2               	movwf	(low ((?_sprintf| 0+1))+1)
  1013  0657  0858               	movf	main@date,w
  1014  0658  00B6               	movwf	??_main+1
  1015  0659  01B7               	clrf	??_main+2
  1016  065A  0836               	movf	??_main+1,w
  1017  065B  00A3               	movwf	?_sprintf+3
  1018  065C  0837               	movf	??_main+2,w
  1019  065D  00A4               	movwf	?_sprintf+4
  1020  065E  0859               	movf	main@month,w
  1021  065F  00B8               	movwf	??_main+3
  1022  0660  01B9               	clrf	??_main+4
  1023  0661  0838               	movf	??_main+3,w
  1024  0662  00A5               	movwf	?_sprintf+5
  1025  0663  0839               	movf	??_main+4,w
  1026  0664  00A6               	movwf	?_sprintf+6
  1027  0665  085A               	movf	main@year,w
  1028  0666  00BA               	movwf	??_main+5
  1029  0667  01BB               	clrf	??_main+6
  1030  0668  083A               	movf	??_main+5,w
  1031  0669  00A7               	movwf	?_sprintf+7
  1032  066A  083B               	movf	??_main+6,w
  1033  066B  00A8               	movwf	?_sprintf+8
  1034  066C  3044               	movlw	(low (main@ds| 0))& (0+255)
  1035  066D  120A  118A  26C2  120A  118A  	fcall	_sprintf
  1036  0672                     l1906:
  1037                           
  1038                           ;newmain.c: 377:         LCD_GotoCursor(1,1);
  1039  0672  01F3               	clrf	LCD_GotoCursor@col
  1040  0673  0AF3               	incf	LCD_GotoCursor@col,f
  1041  0674  3001               	movlw	1
  1042  0675  120A  118A  212F  120A  118A  	fcall	_LCD_GotoCursor
  1043  067A                     l1908:
  1044                           
  1045                           ;newmain.c: 378:         LCD_String(ds);
  1046  067A  3044               	movlw	(low (main@ds| 0))& (0+255)
  1047  067B  120A  118A  20A0  120A  118A  	fcall	_LCD_String
  1048  0680                     l1910:
  1049                           
  1050                           ;newmain.c: 379:         LCD_GotoCursor(2,1);
  1051  0680  01F3               	clrf	LCD_GotoCursor@col
  1052  0681  0AF3               	incf	LCD_GotoCursor@col,f
  1053  0682  3002               	movlw	2
  1054  0683  120A  118A  212F  120A  118A  	fcall	_LCD_GotoCursor
  1055  0688                     l1912:
  1056                           
  1057                           ;newmain.c: 380:         sprintf(ds,"   %d:%d:%d", hour, minute, second);
  1058  0688  3019               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1059  0689  1283               	bcf	3,5	;RP0=0, select bank0
  1060  068A  1303               	bcf	3,6	;RP1=0, select bank0
  1061  068B  00B5               	movwf	??_main
  1062  068C  0835               	movf	??_main,w
  1063  068D  00A0               	movwf	sprintf@f
  1064  068E  0854               	movf	main@hour,w
  1065  068F  00B6               	movwf	??_main+1
  1066  0690  01B7               	clrf	??_main+2
  1067  0691  0836               	movf	??_main+1,w
  1068  0692  00A1               	movwf	?_sprintf+1
  1069  0693  0837               	movf	??_main+2,w
  1070  0694  00A2               	movwf	?_sprintf+2
  1071  0695  0855               	movf	main@minute,w
  1072  0696  00B8               	movwf	??_main+3
  1073  0697  01B9               	clrf	??_main+4
  1074  0698  0838               	movf	??_main+3,w
  1075  0699  00A3               	movwf	?_sprintf+3
  1076  069A  0839               	movf	??_main+4,w
  1077  069B  00A4               	movwf	?_sprintf+4
  1078  069C  0856               	movf	main@second,w
  1079  069D  00BA               	movwf	??_main+5
  1080  069E  01BB               	clrf	??_main+6
  1081  069F  083A               	movf	??_main+5,w
  1082  06A0  00A5               	movwf	?_sprintf+5
  1083  06A1  083B               	movf	??_main+6,w
  1084  06A2  00A6               	movwf	?_sprintf+6
  1085  06A3  3044               	movlw	(low (main@ds| 0))& (0+255)
  1086  06A4  120A  118A  26C2  120A  118A  	fcall	_sprintf
  1087  06A9                     l1914:
  1088                           
  1089                           ;newmain.c: 381:         LCD_String(ds);
  1090  06A9  3044               	movlw	(low (main@ds| 0))& (0+255)
  1091  06AA  120A  118A  20A0  120A  118A  	fcall	_LCD_String
  1092  06AF                     l1916:
  1093                           
  1094                           ;newmain.c: 383:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1095  06AF  300D               	movlw	13
  1096  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1097  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1098  06B2  00B7               	movwf	??_main+2
  1099  06B3  30AF               	movlw	175
  1100  06B4  00B6               	movwf	??_main+1
  1101  06B5  30B5               	movlw	181
  1102  06B6  00B5               	movwf	??_main
  1103  06B7                     u1517:
  1104  06B7  0BB5               	decfsz	??_main,f
  1105  06B8  2EB7               	goto	u1517
  1106  06B9  0BB6               	decfsz	??_main+1,f
  1107  06BA  2EB7               	goto	u1517
  1108  06BB  0BB7               	decfsz	??_main+2,f
  1109  06BC  2EB7               	goto	u1517
  1110  06BD  2EBE               	nop2
  1111  06BE  2E27               	goto	l1902
  1112  06BF  120A  118A  2800   	ljmp	start
  1113  06C2                     __end_of_main:
  1114                           
  1115                           	psect	text1
  1116  06C2                     __ptext1:	
  1117 ;; *************** function _sprintf *****************
  1118 ;; Defined at:
  1119 ;;		line 505 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  sp              1    wreg     PTR unsigned char 
  1122 ;;		 -> main@ds(16), 
  1123 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1124 ;;		 -> STR_10(12), STR_9(14), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1127 ;;		 -> main@ds(16), 
  1128 ;;  tmpval          4    0        struct .
  1129 ;;  val             2   17[BANK0 ] unsigned int 
  1130 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
  1131 ;;		 -> STR_11(7), ?_sprintf(2), STR_8(4), STR_7(4), 
  1132 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  1133 ;;		 -> STR_2(4), STR_1(3), 
  1134 ;;  len             2    0        unsigned int 
  1135 ;;  c               1   20[BANK0 ] unsigned char 
  1136 ;;  ap              1   14[BANK0 ] PTR void [1]
  1137 ;;		 -> ?_sprintf(2), 
  1138 ;;  prec            1   13[BANK0 ] char 
  1139 ;;  flag            1   12[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  2    0[BANK0 ] int 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       9       0       0       0
  1150 ;;      Locals:         0       9       0       0       0
  1151 ;;      Temps:          0       3       0       0       0
  1152 ;;      Totals:         0      21       0       0       0
  1153 ;;Total ram usage:       21 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 1
  1156 ;; This function calls:
  1157 ;;		___lwdiv
  1158 ;;		___lwmod
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _sprintf
  1166  06C2                     _sprintf:
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1170                           ;sprintf@sp stored from wreg
  1171  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1172  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1173  06C4  00B3               	movwf	sprintf@sp
  1174  06C5                     l1770:
  1175                           
  1176                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, 
      +                          const char * f, ...);D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 506:
      +                           {;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\F
      +                          ile Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 521:  signed char prec;;D:\File Install 
      +                          MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1177  06C5  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1178  06C6  00A9               	movwf	??_sprintf
  1179  06C7  0829               	movf	??_sprintf,w
  1180  06C8  00AE               	movwf	sprintf@ap
  1181                           
  1182                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1183  06C9  2FD7               	goto	l1838
  1184  06CA                     l1772:
  1185                           
  1186                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1187  06CA  3025               	movlw	37
  1188  06CB  0634               	xorwf	sprintf@c,w
  1189  06CC  1903               	btfsc	3,2
  1190  06CD  2ECF               	goto	u1341
  1191  06CE  2ED0               	goto	u1340
  1192  06CF                     u1341:
  1193  06CF  2EDC               	goto	l1778
  1194  06D0                     u1340:
  1195  06D0                     l1774:
  1196                           
  1197                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 557:   {;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1198  06D0  0834               	movf	sprintf@c,w
  1199  06D1  00A9               	movwf	??_sprintf
  1200  06D2  0833               	movf	sprintf@sp,w
  1201  06D3  0084               	movwf	4
  1202  06D4  0829               	movf	??_sprintf,w
  1203  06D5  1383               	bcf	3,7	;select IRP bank0
  1204  06D6  0080               	movwf	0
  1205  06D7                     l1776:
  1206  06D7  3001               	movlw	1
  1207  06D8  00A9               	movwf	??_sprintf
  1208  06D9  0829               	movf	??_sprintf,w
  1209  06DA  07B3               	addwf	sprintf@sp,f
  1210                           
  1211                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 559:    continue;
  1212  06DB  2FD7               	goto	l1838
  1213  06DC                     l1778:
  1214                           
  1215                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1216  06DC  01AC               	clrf	sprintf@flag
  1217                           
  1218                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) 
      +                          {
  1219  06DD  2F1E               	goto	l1798
  1220  06DE                     l1780:
  1221                           
  1222                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 760:     cp = (*(const c
      +                          har * *)__va_arg((*(const char * **)ap), (const char *)0));
  1223  06DE  082E               	movf	sprintf@ap,w
  1224  06DF  0084               	movwf	4
  1225  06E0  1383               	bcf	3,7	;select IRP bank0
  1226  06E1  0800               	movf	0,w
  1227  06E2  00AF               	movwf	sprintf@cp
  1228  06E3  0A84               	incf	4,f
  1229  06E4  0800               	movf	0,w
  1230  06E5  0384               	decf	4,f
  1231  06E6  00B0               	movwf	sprintf@cp+1
  1232  06E7                     l1782:
  1233  06E7  3002               	movlw	2
  1234  06E8  00A9               	movwf	??_sprintf
  1235  06E9  0829               	movf	??_sprintf,w
  1236  06EA  07AE               	addwf	sprintf@ap,f
  1237  06EB                     l1784:
  1238                           
  1239                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  1240  06EB  082F               	movf	sprintf@cp,w
  1241  06EC  0430               	iorwf	sprintf@cp+1,w
  1242  06ED  1D03               	btfss	3,2
  1243  06EE  2EF0               	goto	u1351
  1244  06EF  2EF1               	goto	u1350
  1245  06F0                     u1351:
  1246  06F0  2F0F               	goto	l1794
  1247  06F1                     u1350:
  1248  06F1                     l1786:
  1249                           
  1250                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 767:     cp = "(null)";
  1251  06F1  3025               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1252  06F2  00AF               	movwf	sprintf@cp
  1253  06F3  3080               	movlw	128
  1254  06F4  00B0               	movwf	sprintf@cp+1
  1255  06F5  2F0F               	goto	l1794
  1256  06F6                     l1788:
  1257                           
  1258                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 804:     ((*sp++ = (*cp+
      +                          +)));
  1259  06F6  0830               	movf	sprintf@cp+1,w
  1260  06F7  00FF               	movwf	btemp+1
  1261  06F8  082F               	movf	sprintf@cp,w
  1262  06F9  0084               	movwf	4
  1263  06FA  120A  118A  2003  120A  118A  	fcall	stringtab
  1264  06FF  00A9               	movwf	??_sprintf
  1265  0700  0833               	movf	sprintf@sp,w
  1266  0701  0084               	movwf	4
  1267  0702  0829               	movf	??_sprintf,w
  1268  0703  1383               	bcf	3,7	;select IRP bank0
  1269  0704  0080               	movwf	0
  1270  0705                     l1790:
  1271  0705  3001               	movlw	1
  1272  0706  07AF               	addwf	sprintf@cp,f
  1273  0707  1803               	skipnc
  1274  0708  0AB0               	incf	sprintf@cp+1,f
  1275  0709  3000               	movlw	0
  1276  070A  07B0               	addwf	sprintf@cp+1,f
  1277  070B                     l1792:
  1278  070B  3001               	movlw	1
  1279  070C  00A9               	movwf	??_sprintf
  1280  070D  0829               	movf	??_sprintf,w
  1281  070E  07B3               	addwf	sprintf@sp,f
  1282  070F                     l1794:
  1283                           
  1284                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 803:    while(*cp)
  1285  070F  0830               	movf	sprintf@cp+1,w
  1286  0710  00FF               	movwf	btemp+1
  1287  0711  082F               	movf	sprintf@cp,w
  1288  0712  0084               	movwf	4
  1289  0713  120A  118A  2003  120A  118A  	fcall	stringtab
  1290  0718  3A00               	xorlw	0
  1291  0719  1D03               	skipz
  1292  071A  2F1C               	goto	u1361
  1293  071B  2F1D               	goto	u1360
  1294  071C                     u1361:
  1295  071C  2EF6               	goto	l1788
  1296  071D                     u1360:
  1297  071D  2FD7               	goto	l1838
  1298  071E                     l1798:
  1299  071E  3001               	movlw	1
  1300  071F  07A0               	addwf	sprintf@f,f
  1301  0720  30FF               	movlw	-1
  1302  0721  0720               	addwf	sprintf@f,w
  1303  0722  0084               	movwf	4
  1304  0723  120A  118A  200D  120A  118A  	fcall	stringdir
  1305  0728  00B4               	movwf	sprintf@c
  1306  0729  00A9               	movwf	??_sprintf
  1307  072A  01AA               	clrf	??_sprintf+1
  1308                           
  1309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1310                           ; Switch size 1, requested type "simple"
  1311                           ; Number of cases is 1, Range of values is 0 to 0
  1312                           ; switch strategies available:
  1313                           ; Name         Instructions Cycles
  1314                           ; simple_byte            4     3 (average)
  1315                           ; direct_byte           11     8 (fixed)
  1316                           ; jumptable            260     6 (fixed)
  1317                           ;	Chosen strategy is simple_byte
  1318  072B  082A               	movf	??_sprintf+1,w
  1319  072C  3A00               	xorlw	0	; case 0
  1320  072D  1903               	skipnz
  1321  072E  2F30               	goto	l1938
  1322  072F  2FD7               	goto	l1838
  1323  0730                     l1938:
  1324                           
  1325                           ; Switch size 1, requested type "simple"
  1326                           ; Number of cases is 4, Range of values is 0 to 115
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte           13     7 (average)
  1330                           ; jumptable            260     6 (fixed)
  1331                           ;	Chosen strategy is simple_byte
  1332  0730  0829               	movf	??_sprintf,w
  1333  0731  3A00               	xorlw	0	; case 0
  1334  0732  1903               	skipnz
  1335  0733  2FE9               	goto	l1840
  1336  0734  3A64               	xorlw	100	; case 100
  1337  0735  1903               	skipnz
  1338  0736  2F3E               	goto	l1800
  1339  0737  3A0D               	xorlw	13	; case 105
  1340  0738  1903               	skipnz
  1341  0739  2F3E               	goto	l1800
  1342  073A  3A1A               	xorlw	26	; case 115
  1343  073B  1903               	skipnz
  1344  073C  2EDE               	goto	l1780
  1345  073D  2FD7               	goto	l1838
  1346  073E                     l1800:
  1347                           
  1348                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)
      +                          __va_arg((*(int **)ap), (int)0));
  1349  073E  082E               	movf	sprintf@ap,w
  1350  073F  0084               	movwf	4
  1351  0740  1383               	bcf	3,7	;select IRP bank0
  1352  0741  0800               	movf	0,w
  1353  0742  00B1               	movwf	sprintf@val
  1354  0743  0A84               	incf	4,f
  1355  0744  0800               	movf	0,w
  1356  0745  00B2               	movwf	sprintf@val+1
  1357  0746                     l1802:
  1358  0746  3002               	movlw	2
  1359  0747  00A9               	movwf	??_sprintf
  1360  0748  0829               	movf	??_sprintf,w
  1361  0749  07AE               	addwf	sprintf@ap,f
  1362  074A                     l1804:
  1363                           
  1364                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0
      +                          ) {
  1365  074A  1FB2               	btfss	sprintf@val+1,7
  1366  074B  2F4D               	goto	u1371
  1367  074C  2F4E               	goto	u1370
  1368  074D                     u1371:
  1369  074D  2F57               	goto	l1810
  1370  074E                     u1370:
  1371  074E                     l1806:
  1372                           
  1373                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1374  074E  3003               	movlw	3
  1375  074F  00A9               	movwf	??_sprintf
  1376  0750  0829               	movf	??_sprintf,w
  1377  0751  04AC               	iorwf	sprintf@flag,f
  1378  0752                     l1808:
  1379                           
  1380                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1381  0752  09B1               	comf	sprintf@val,f
  1382  0753  09B2               	comf	sprintf@val+1,f
  1383  0754  0AB1               	incf	sprintf@val,f
  1384  0755  1903               	skipnz
  1385  0756  0AB2               	incf	sprintf@val+1,f
  1386  0757                     l1810:
  1387                           
  1388                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1292:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpower
      +                          s/sizeof dpowers[0] ; c++)
  1389  0757  01B4               	clrf	sprintf@c
  1390  0758  0AB4               	incf	sprintf@c,f
  1391  0759                     l1816:
  1392                           
  1393                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowe
      +                          rs[c])
  1394  0759  0834               	movf	sprintf@c,w
  1395  075A  00A9               	movwf	??_sprintf
  1396  075B  0729               	addwf	??_sprintf,w
  1397  075C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1398  075D  0084               	movwf	4
  1399  075E  120A  118A  200D  120A  118A  	fcall	stringdir
  1400  0763  00AA               	movwf	??_sprintf+1
  1401  0764  120A  118A  200D  120A  118A  	fcall	stringdir
  1402  0769  00AB               	movwf	??_sprintf+2
  1403  076A  082B               	movf	??_sprintf+2,w
  1404  076B  0232               	subwf	sprintf@val+1,w
  1405  076C  1D03               	skipz
  1406  076D  2F70               	goto	u1385
  1407  076E  082A               	movf	??_sprintf+1,w
  1408  076F  0231               	subwf	sprintf@val,w
  1409  0770                     u1385:
  1410  0770  1803               	skipnc
  1411  0771  2F73               	goto	u1381
  1412  0772  2F74               	goto	u1380
  1413  0773                     u1381:
  1414  0773  2F75               	goto	l1820
  1415  0774                     u1380:
  1416  0774  2F7F               	goto	l1822
  1417  0775                     l1820:
  1418  0775  3001               	movlw	1
  1419  0776  00A9               	movwf	??_sprintf
  1420  0777  0829               	movf	??_sprintf,w
  1421  0778  07B4               	addwf	sprintf@c,f
  1422  0779  3005               	movlw	5
  1423  077A  0634               	xorwf	sprintf@c,w
  1424  077B  1D03               	btfss	3,2
  1425  077C  2F7E               	goto	u1391
  1426  077D  2F7F               	goto	u1390
  1427  077E                     u1391:
  1428  077E  2F59               	goto	l1816
  1429  077F                     u1390:
  1430  077F                     l1822:
  1431                           
  1432                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1433  077F  082C               	movf	sprintf@flag,w
  1434  0780  3903               	andlw	3
  1435  0781  1903               	btfsc	3,2
  1436  0782  2F84               	goto	u1401
  1437  0783  2F85               	goto	u1400
  1438  0784                     u1401:
  1439  0784  2F90               	goto	l1828
  1440  0785                     u1400:
  1441  0785                     l1824:
  1442                           
  1443                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-'
      +                          )));
  1444  0785  302D               	movlw	45
  1445  0786  00A9               	movwf	??_sprintf
  1446  0787  0833               	movf	sprintf@sp,w
  1447  0788  0084               	movwf	4
  1448  0789  0829               	movf	??_sprintf,w
  1449  078A  1383               	bcf	3,7	;select IRP bank0
  1450  078B  0080               	movwf	0
  1451  078C                     l1826:
  1452  078C  3001               	movlw	1
  1453  078D  00A9               	movwf	??_sprintf
  1454  078E  0829               	movf	??_sprintf,w
  1455  078F  07B3               	addwf	sprintf@sp,f
  1456  0790                     l1828:
  1457                           
  1458                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1495:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1459  0790  0834               	movf	sprintf@c,w
  1460  0791  00A9               	movwf	??_sprintf
  1461  0792  0829               	movf	??_sprintf,w
  1462  0793  00AD               	movwf	sprintf@prec
  1463                           
  1464                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1465  0794  2FCE               	goto	l1836
  1466  0795                     l1830:
  1467                           
  1468                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned
      +                           char)prec]) % 10 + '0';
  1469  0795  300A               	movlw	10
  1470  0796  00F8               	movwf	___lwmod@divisor
  1471  0797  3000               	movlw	0
  1472  0798  00F9               	movwf	___lwmod@divisor+1
  1473  0799  082D               	movf	sprintf@prec,w
  1474  079A  00A9               	movwf	??_sprintf
  1475  079B  0729               	addwf	??_sprintf,w
  1476  079C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1477  079D  0084               	movwf	4
  1478  079E  120A  118A  200D  120A  118A  	fcall	stringdir
  1479  07A3  00F0               	movwf	___lwdiv@divisor
  1480  07A4  120A  118A  200D  120A  118A  	fcall	stringdir
  1481  07A9  00F1               	movwf	___lwdiv@divisor+1
  1482  07AA  0832               	movf	sprintf@val+1,w
  1483  07AB  00F3               	movwf	___lwdiv@dividend+1
  1484  07AC  0831               	movf	sprintf@val,w
  1485  07AD  00F2               	movwf	___lwdiv@dividend
  1486  07AE  120A  118A  22DF  120A  118A  	fcall	___lwdiv
  1487  07B3  0871               	movf	?___lwdiv+1,w
  1488  07B4  00FB               	movwf	___lwmod@dividend+1
  1489  07B5  0870               	movf	?___lwdiv,w
  1490  07B6  00FA               	movwf	___lwmod@dividend
  1491  07B7  120A  118A  222B  120A  118A  	fcall	___lwmod
  1492  07BC  0878               	movf	?___lwmod,w
  1493  07BD  3E30               	addlw	48
  1494  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1495  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1496  07C0  00AA               	movwf	??_sprintf+1
  1497  07C1  082A               	movf	??_sprintf+1,w
  1498  07C2  00B4               	movwf	sprintf@c
  1499  07C3                     l1832:
  1500                           
  1501                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1549:    };D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1502  07C3  0834               	movf	sprintf@c,w
  1503  07C4  00A9               	movwf	??_sprintf
  1504  07C5  0833               	movf	sprintf@sp,w
  1505  07C6  0084               	movwf	4
  1506  07C7  0829               	movf	??_sprintf,w
  1507  07C8  1383               	bcf	3,7	;select IRP bank0
  1508  07C9  0080               	movwf	0
  1509  07CA                     l1834:
  1510  07CA  3001               	movlw	1
  1511  07CB  00A9               	movwf	??_sprintf
  1512  07CC  0829               	movf	??_sprintf,w
  1513  07CD  07B3               	addwf	sprintf@sp,f
  1514  07CE                     l1836:
  1515                           
  1516                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1517  07CE  30FF               	movlw	255
  1518  07CF  00A9               	movwf	??_sprintf
  1519  07D0  0829               	movf	??_sprintf,w
  1520  07D1  07AD               	addwf	sprintf@prec,f
  1521  07D2  0A2D               	incf	sprintf@prec,w
  1522  07D3  1D03               	btfss	3,2
  1523  07D4  2FD6               	goto	u1411
  1524  07D5  2FD7               	goto	u1410
  1525  07D6                     u1411:
  1526  07D6  2F95               	goto	l1830
  1527  07D7                     u1410:
  1528  07D7                     l1838:
  1529                           
  1530                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1531  07D7  3001               	movlw	1
  1532  07D8  07A0               	addwf	sprintf@f,f
  1533  07D9  30FF               	movlw	-1
  1534  07DA  0720               	addwf	sprintf@f,w
  1535  07DB  0084               	movwf	4
  1536  07DC  120A  118A  200D  120A  118A  	fcall	stringdir
  1537  07E1  00A9               	movwf	??_sprintf
  1538  07E2  0829               	movf	??_sprintf,w
  1539  07E3  00B4               	movwf	sprintf@c
  1540  07E4  0834               	movf	sprintf@c,w
  1541  07E5  1D03               	btfss	3,2
  1542  07E6  2FE8               	goto	u1421
  1543  07E7  2FE9               	goto	u1420
  1544  07E8                     u1421:
  1545  07E8  2ECA               	goto	l1772
  1546  07E9                     u1420:
  1547  07E9                     l1840:
  1548                           
  1549                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1550  07E9  0833               	movf	sprintf@sp,w
  1551  07EA  0084               	movwf	4
  1552  07EB  1383               	bcf	3,7	;select IRP bank0
  1553  07EC  0180               	clrf	0
  1554  07ED                     l264:
  1555  07ED  0008               	return
  1556  07EE                     __end_of_sprintf:
  1557                           
  1558                           	psect	text2
  1559  022B                     __ptext2:	
  1560 ;; *************** function ___lwmod *****************
  1561 ;; Defined at:
  1562 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  divisor         2    8[COMMON] unsigned int 
  1565 ;;  dividend        2   10[COMMON] unsigned int 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  counter         1   13[COMMON] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    8[COMMON] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         4       0       0       0       0
  1578 ;;      Locals:         1       0       0       0       0
  1579 ;;      Temps:          1       0       0       0       0
  1580 ;;      Totals:         6       0       0       0       0
  1581 ;;Total ram usage:        6 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_sprintf
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function ___lwmod
  1592  022B                     ___lwmod:
  1593  022B                     l1702:	
  1594                           ;incstack = 0
  1595                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1596                           
  1597  022B  0878               	movf	___lwmod@divisor,w
  1598  022C  0479               	iorwf	___lwmod@divisor+1,w
  1599  022D  1903               	btfsc	3,2
  1600  022E  2A30               	goto	u1261
  1601  022F  2A31               	goto	u1260
  1602  0230                     u1261:
  1603  0230  2A60               	goto	l1720
  1604  0231                     u1260:
  1605  0231                     l1704:
  1606  0231  01FD               	clrf	___lwmod@counter
  1607  0232  0AFD               	incf	___lwmod@counter,f
  1608  0233  2A3F               	goto	l1710
  1609  0234                     l1706:
  1610  0234  3001               	movlw	1
  1611  0235                     u1275:
  1612  0235  1003               	clrc
  1613  0236  0DF8               	rlf	___lwmod@divisor,f
  1614  0237  0DF9               	rlf	___lwmod@divisor+1,f
  1615  0238  3EFF               	addlw	-1
  1616  0239  1D03               	skipz
  1617  023A  2A35               	goto	u1275
  1618  023B                     l1708:
  1619  023B  3001               	movlw	1
  1620  023C  00FC               	movwf	??___lwmod
  1621  023D  087C               	movf	??___lwmod,w
  1622  023E  07FD               	addwf	___lwmod@counter,f
  1623  023F                     l1710:
  1624  023F  1FF9               	btfss	___lwmod@divisor+1,7
  1625  0240  2A42               	goto	u1281
  1626  0241  2A43               	goto	u1280
  1627  0242                     u1281:
  1628  0242  2A34               	goto	l1706
  1629  0243                     u1280:
  1630  0243                     l1712:
  1631  0243  0879               	movf	___lwmod@divisor+1,w
  1632  0244  027B               	subwf	___lwmod@dividend+1,w
  1633  0245  1D03               	skipz
  1634  0246  2A49               	goto	u1295
  1635  0247  0878               	movf	___lwmod@divisor,w
  1636  0248  027A               	subwf	___lwmod@dividend,w
  1637  0249                     u1295:
  1638  0249  1C03               	skipc
  1639  024A  2A4C               	goto	u1291
  1640  024B  2A4D               	goto	u1290
  1641  024C                     u1291:
  1642  024C  2A53               	goto	l1716
  1643  024D                     u1290:
  1644  024D                     l1714:
  1645  024D  0878               	movf	___lwmod@divisor,w
  1646  024E  02FA               	subwf	___lwmod@dividend,f
  1647  024F  0879               	movf	___lwmod@divisor+1,w
  1648  0250  1C03               	skipc
  1649  0251  03FB               	decf	___lwmod@dividend+1,f
  1650  0252  02FB               	subwf	___lwmod@dividend+1,f
  1651  0253                     l1716:
  1652  0253  3001               	movlw	1
  1653  0254                     u1305:
  1654  0254  1003               	clrc
  1655  0255  0CF9               	rrf	___lwmod@divisor+1,f
  1656  0256  0CF8               	rrf	___lwmod@divisor,f
  1657  0257  3EFF               	addlw	-1
  1658  0258  1D03               	skipz
  1659  0259  2A54               	goto	u1305
  1660  025A                     l1718:
  1661  025A  3001               	movlw	1
  1662  025B  02FD               	subwf	___lwmod@counter,f
  1663  025C  1D03               	btfss	3,2
  1664  025D  2A5F               	goto	u1311
  1665  025E  2A60               	goto	u1310
  1666  025F                     u1311:
  1667  025F  2A43               	goto	l1712
  1668  0260                     u1310:
  1669  0260                     l1720:
  1670  0260  087B               	movf	___lwmod@dividend+1,w
  1671  0261  00F9               	movwf	?___lwmod+1
  1672  0262  087A               	movf	___lwmod@dividend,w
  1673  0263  00F8               	movwf	?___lwmod
  1674  0264                     l550:
  1675  0264  0008               	return
  1676  0265                     __end_of___lwmod:
  1677                           
  1678                           	psect	text3
  1679  02DF                     __ptext3:	
  1680 ;; *************** function ___lwdiv *****************
  1681 ;; Defined at:
  1682 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  divisor         2    0[COMMON] unsigned int 
  1685 ;;  dividend        2    2[COMMON] unsigned int 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  quotient        2    5[COMMON] unsigned int 
  1688 ;;  counter         1    7[COMMON] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2    0[COMMON] unsigned int 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         4       0       0       0       0
  1699 ;;      Locals:         3       0       0       0       0
  1700 ;;      Temps:          1       0       0       0       0
  1701 ;;      Totals:         8       0       0       0       0
  1702 ;;Total ram usage:        8 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_sprintf
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function ___lwdiv
  1713  02DF                     ___lwdiv:
  1714  02DF                     l1676:	
  1715                           ;incstack = 0
  1716                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1717                           
  1718  02DF  01F5               	clrf	___lwdiv@quotient
  1719  02E0  01F6               	clrf	___lwdiv@quotient+1
  1720  02E1                     l1678:
  1721  02E1  0870               	movf	___lwdiv@divisor,w
  1722  02E2  0471               	iorwf	___lwdiv@divisor+1,w
  1723  02E3  1903               	btfsc	3,2
  1724  02E4  2AE6               	goto	u1191
  1725  02E5  2AE7               	goto	u1190
  1726  02E6                     u1191:
  1727  02E6  2B1E               	goto	l1698
  1728  02E7                     u1190:
  1729  02E7                     l1680:
  1730  02E7  01F7               	clrf	___lwdiv@counter
  1731  02E8  0AF7               	incf	___lwdiv@counter,f
  1732  02E9  2AF5               	goto	l1686
  1733  02EA                     l1682:
  1734  02EA  3001               	movlw	1
  1735  02EB                     u1205:
  1736  02EB  1003               	clrc
  1737  02EC  0DF0               	rlf	___lwdiv@divisor,f
  1738  02ED  0DF1               	rlf	___lwdiv@divisor+1,f
  1739  02EE  3EFF               	addlw	-1
  1740  02EF  1D03               	skipz
  1741  02F0  2AEB               	goto	u1205
  1742  02F1                     l1684:
  1743  02F1  3001               	movlw	1
  1744  02F2  00F4               	movwf	??___lwdiv
  1745  02F3  0874               	movf	??___lwdiv,w
  1746  02F4  07F7               	addwf	___lwdiv@counter,f
  1747  02F5                     l1686:
  1748  02F5  1FF1               	btfss	___lwdiv@divisor+1,7
  1749  02F6  2AF8               	goto	u1211
  1750  02F7  2AF9               	goto	u1210
  1751  02F8                     u1211:
  1752  02F8  2AEA               	goto	l1682
  1753  02F9                     u1210:
  1754  02F9                     l1688:
  1755  02F9  3001               	movlw	1
  1756  02FA                     u1225:
  1757  02FA  1003               	clrc
  1758  02FB  0DF5               	rlf	___lwdiv@quotient,f
  1759  02FC  0DF6               	rlf	___lwdiv@quotient+1,f
  1760  02FD  3EFF               	addlw	-1
  1761  02FE  1D03               	skipz
  1762  02FF  2AFA               	goto	u1225
  1763  0300  0871               	movf	___lwdiv@divisor+1,w
  1764  0301  0273               	subwf	___lwdiv@dividend+1,w
  1765  0302  1D03               	skipz
  1766  0303  2B06               	goto	u1235
  1767  0304  0870               	movf	___lwdiv@divisor,w
  1768  0305  0272               	subwf	___lwdiv@dividend,w
  1769  0306                     u1235:
  1770  0306  1C03               	skipc
  1771  0307  2B09               	goto	u1231
  1772  0308  2B0A               	goto	u1230
  1773  0309                     u1231:
  1774  0309  2B11               	goto	l1694
  1775  030A                     u1230:
  1776  030A                     l1690:
  1777  030A  0870               	movf	___lwdiv@divisor,w
  1778  030B  02F2               	subwf	___lwdiv@dividend,f
  1779  030C  0871               	movf	___lwdiv@divisor+1,w
  1780  030D  1C03               	skipc
  1781  030E  03F3               	decf	___lwdiv@dividend+1,f
  1782  030F  02F3               	subwf	___lwdiv@dividend+1,f
  1783  0310                     l1692:
  1784  0310  1475               	bsf	___lwdiv@quotient,0
  1785  0311                     l1694:
  1786  0311  3001               	movlw	1
  1787  0312                     u1245:
  1788  0312  1003               	clrc
  1789  0313  0CF1               	rrf	___lwdiv@divisor+1,f
  1790  0314  0CF0               	rrf	___lwdiv@divisor,f
  1791  0315  3EFF               	addlw	-1
  1792  0316  1D03               	skipz
  1793  0317  2B12               	goto	u1245
  1794  0318                     l1696:
  1795  0318  3001               	movlw	1
  1796  0319  02F7               	subwf	___lwdiv@counter,f
  1797  031A  1D03               	btfss	3,2
  1798  031B  2B1D               	goto	u1251
  1799  031C  2B1E               	goto	u1250
  1800  031D                     u1251:
  1801  031D  2AF9               	goto	l1688
  1802  031E                     u1250:
  1803  031E                     l1698:
  1804  031E  0876               	movf	___lwdiv@quotient+1,w
  1805  031F  00F1               	movwf	?___lwdiv+1
  1806  0320  0875               	movf	___lwdiv@quotient,w
  1807  0321  00F0               	movwf	?___lwdiv
  1808  0322                     l540:
  1809  0322  0008               	return
  1810  0323                     __end_of___lwdiv:
  1811                           
  1812                           	psect	text4
  1813  053F                     __ptext4:	
  1814 ;; *************** function _RTC_SetDateTime *****************
  1815 ;; Defined at:
  1816 ;;		line 349 in file "newmain.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  hour            1    wreg     unsigned char 
  1819 ;;  minute          1    7[BANK0 ] unsigned char 
  1820 ;;  second          1    8[BANK0 ] unsigned char 
  1821 ;;  day             1    9[BANK0 ] unsigned char 
  1822 ;;  date            1   10[BANK0 ] unsigned char 
  1823 ;;  month           1   11[BANK0 ] unsigned char 
  1824 ;;  year            1   12[BANK0 ] unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  hour            1   20[BANK0 ] unsigned char 
  1827 ;;  data            7   13[BANK0 ] unsigned char [7]
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       6       0       0       0
  1838 ;;      Locals:         0       8       0       0       0
  1839 ;;      Temps:          2       0       0       0       0
  1840 ;;      Totals:         2      14       0       0       0
  1841 ;;Total ram usage:       16 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 3
  1844 ;; This function calls:
  1845 ;;		_I2C_WriteMulti
  1846 ;;		_RTC_Bin2Bcd
  1847 ;;		_RTC_CheckMinMax
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _RTC_SetDateTime
  1855  053F                     _RTC_SetDateTime:
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1859                           ;RTC_SetDateTime@hour stored from wreg
  1860  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0541  00B4               	movwf	RTC_SetDateTime@hour
  1863  0542                     l1766:
  1864                           
  1865                           ;newmain.c: 349: void RTC_SetDateTime(unsigned char hour, unsigned char minute, unsigned
      +                           char second, unsigned char day, unsigned char date, unsigned char month, unsigned char 
      +                          year);newmain.c: 350: {;newmain.c: 351:     unsigned char data[7];;newmain.c: 353:     d
      +                          ata[0] = RTC_Bin2Bcd(RTC_CheckMinMax(second, 0, 59));
  1866  0542  01F0               	clrf	RTC_CheckMinMax@min
  1867  0543  303B               	movlw	59
  1868  0544  00FB               	movwf	??_RTC_SetDateTime
  1869  0545  087B               	movf	??_RTC_SetDateTime,w
  1870  0546  00F1               	movwf	RTC_CheckMinMax@max
  1871  0547  0828               	movf	RTC_SetDateTime@second,w
  1872  0548  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1873  054D  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1874  0552  00FC               	movwf	??_RTC_SetDateTime+1
  1875  0553  087C               	movf	??_RTC_SetDateTime+1,w
  1876  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0556  00AD               	movwf	RTC_SetDateTime@data
  1879                           
  1880                           ;newmain.c: 354:  data[1] = RTC_Bin2Bcd(RTC_CheckMinMax(minute, 0, 59));
  1881  0557  01F0               	clrf	RTC_CheckMinMax@min
  1882  0558  303B               	movlw	59
  1883  0559  00FB               	movwf	??_RTC_SetDateTime
  1884  055A  087B               	movf	??_RTC_SetDateTime,w
  1885  055B  00F1               	movwf	RTC_CheckMinMax@max
  1886  055C  0827               	movf	RTC_SetDateTime@minute,w
  1887  055D  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1888  0562  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1889  0567  00FC               	movwf	??_RTC_SetDateTime+1
  1890  0568  087C               	movf	??_RTC_SetDateTime+1,w
  1891  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1892  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1893  056B  00AE               	movwf	RTC_SetDateTime@data+1
  1894                           
  1895                           ;newmain.c: 355:  data[2] = RTC_Bin2Bcd(RTC_CheckMinMax(hour, 0, 23));
  1896  056C  01F0               	clrf	RTC_CheckMinMax@min
  1897  056D  3017               	movlw	23
  1898  056E  00FB               	movwf	??_RTC_SetDateTime
  1899  056F  087B               	movf	??_RTC_SetDateTime,w
  1900  0570  00F1               	movwf	RTC_CheckMinMax@max
  1901  0571  0834               	movf	RTC_SetDateTime@hour,w
  1902  0572  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1903  0577  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1904  057C  00FC               	movwf	??_RTC_SetDateTime+1
  1905  057D  087C               	movf	??_RTC_SetDateTime+1,w
  1906  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1907  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0580  00AF               	movwf	RTC_SetDateTime@data+2
  1909                           
  1910                           ;newmain.c: 356:  data[3] = RTC_Bin2Bcd(RTC_CheckMinMax(day, 1, 7));
  1911  0581  01F0               	clrf	RTC_CheckMinMax@min
  1912  0582  0AF0               	incf	RTC_CheckMinMax@min,f
  1913  0583  3007               	movlw	7
  1914  0584  00FB               	movwf	??_RTC_SetDateTime
  1915  0585  087B               	movf	??_RTC_SetDateTime,w
  1916  0586  00F1               	movwf	RTC_CheckMinMax@max
  1917  0587  0829               	movf	RTC_SetDateTime@day,w
  1918  0588  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1919  058D  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1920  0592  00FC               	movwf	??_RTC_SetDateTime+1
  1921  0593  087C               	movf	??_RTC_SetDateTime+1,w
  1922  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0596  00B0               	movwf	RTC_SetDateTime@data+3
  1925                           
  1926                           ;newmain.c: 357:  data[4] = RTC_Bin2Bcd(RTC_CheckMinMax(date, 1, 31));
  1927  0597  01F0               	clrf	RTC_CheckMinMax@min
  1928  0598  0AF0               	incf	RTC_CheckMinMax@min,f
  1929  0599  301F               	movlw	31
  1930  059A  00FB               	movwf	??_RTC_SetDateTime
  1931  059B  087B               	movf	??_RTC_SetDateTime,w
  1932  059C  00F1               	movwf	RTC_CheckMinMax@max
  1933  059D  082A               	movf	RTC_SetDateTime@date,w
  1934  059E  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1935  05A3  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1936  05A8  00FC               	movwf	??_RTC_SetDateTime+1
  1937  05A9  087C               	movf	??_RTC_SetDateTime+1,w
  1938  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1939  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1940  05AC  00B1               	movwf	RTC_SetDateTime@data+4
  1941                           
  1942                           ;newmain.c: 358:  data[5] = RTC_Bin2Bcd(RTC_CheckMinMax(month, 1, 12));
  1943  05AD  01F0               	clrf	RTC_CheckMinMax@min
  1944  05AE  0AF0               	incf	RTC_CheckMinMax@min,f
  1945  05AF  300C               	movlw	12
  1946  05B0  00FB               	movwf	??_RTC_SetDateTime
  1947  05B1  087B               	movf	??_RTC_SetDateTime,w
  1948  05B2  00F1               	movwf	RTC_CheckMinMax@max
  1949  05B3  082B               	movf	RTC_SetDateTime@month,w
  1950  05B4  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1951  05B9  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1952  05BE  00FC               	movwf	??_RTC_SetDateTime+1
  1953  05BF  087C               	movf	??_RTC_SetDateTime+1,w
  1954  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1955  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1956  05C2  00B2               	movwf	RTC_SetDateTime@data+5
  1957                           
  1958                           ;newmain.c: 359:  data[6] = RTC_Bin2Bcd(RTC_CheckMinMax(year, 0, 99));
  1959  05C3  01F0               	clrf	RTC_CheckMinMax@min
  1960  05C4  3063               	movlw	99
  1961  05C5  00FB               	movwf	??_RTC_SetDateTime
  1962  05C6  087B               	movf	??_RTC_SetDateTime,w
  1963  05C7  00F1               	movwf	RTC_CheckMinMax@max
  1964  05C8  082C               	movf	RTC_SetDateTime@year,w
  1965  05C9  120A  118A  2065  120A  118A  	fcall	_RTC_CheckMinMax
  1966  05CE  120A  118A  21F4  120A  118A  	fcall	_RTC_Bin2Bcd
  1967  05D3  00FC               	movwf	??_RTC_SetDateTime+1
  1968  05D4  087C               	movf	??_RTC_SetDateTime+1,w
  1969  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1970  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1971  05D7  00B3               	movwf	RTC_SetDateTime@data+6
  1972  05D8                     l1768:
  1973                           
  1974                           ;newmain.c: 361:     I2C_WriteMulti(0xD0, 0x00, 7, data);
  1975  05D8  01F4               	clrf	I2C_WriteMulti@reg
  1976  05D9  3007               	movlw	7
  1977  05DA  00FB               	movwf	??_RTC_SetDateTime
  1978  05DB  087B               	movf	??_RTC_SetDateTime,w
  1979  05DC  00F5               	movwf	I2C_WriteMulti@len
  1980  05DD  302D               	movlw	(low (RTC_SetDateTime@data| 0))& (0+255)
  1981  05DE  00FC               	movwf	??_RTC_SetDateTime+1
  1982  05DF  087C               	movf	??_RTC_SetDateTime+1,w
  1983  05E0  00F6               	movwf	I2C_WriteMulti@buff
  1984  05E1  30D0               	movlw	208
  1985  05E2  120A  118A  237C  120A  118A  	fcall	_I2C_WriteMulti
  1986  05E7                     l139:
  1987  05E7  0008               	return
  1988  05E8                     __end_of_RTC_SetDateTime:
  1989                           
  1990                           	psect	text5
  1991  0065                     __ptext5:	
  1992 ;; *************** function _RTC_CheckMinMax *****************
  1993 ;; Defined at:
  1994 ;;		line 325 in file "newmain.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  val             1    wreg     unsigned char 
  1997 ;;  min             1    0[COMMON] unsigned char 
  1998 ;;  max             1    1[COMMON] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  val             1    2[COMMON] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         2       0       0       0       0
  2011 ;;      Locals:         1       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0
  2013 ;;      Totals:         3       0       0       0       0
  2014 ;;Total ram usage:        3 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_RTC_SetDateTime
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _RTC_CheckMinMax
  2025  0065                     _RTC_CheckMinMax:
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _RTC_CheckMinMax: [wreg]
  2029                           ;RTC_CheckMinMax@val stored from wreg
  2030  0065  00F2               	movwf	RTC_CheckMinMax@val
  2031  0066                     l1658:
  2032                           
  2033                           ;newmain.c: 325: unsigned char RTC_CheckMinMax(unsigned char val, unsigned char min, uns
      +                          igned char max);newmain.c: 326: {;newmain.c: 327:  if (val < min) {
  2034  0066  0870               	movf	RTC_CheckMinMax@min,w
  2035  0067  0272               	subwf	RTC_CheckMinMax@val,w
  2036  0068  1803               	skipnc
  2037  0069  286B               	goto	u1171
  2038  006A  286C               	goto	u1170
  2039  006B                     u1171:
  2040  006B  286E               	goto	l1666
  2041  006C                     u1170:
  2042  006C                     l1660:
  2043                           
  2044                           ;newmain.c: 328:   return min;
  2045  006C  0870               	movf	RTC_CheckMinMax@min,w
  2046  006D  2877               	goto	l131
  2047  006E                     l1666:
  2048  006E  0872               	movf	RTC_CheckMinMax@val,w
  2049  006F  0271               	subwf	RTC_CheckMinMax@max,w
  2050  0070  1803               	skipnc
  2051  0071  2873               	goto	u1181
  2052  0072  2874               	goto	u1180
  2053  0073                     u1181:
  2054  0073  2876               	goto	l1672
  2055  0074                     u1180:
  2056  0074                     l1668:
  2057                           
  2058                           ;newmain.c: 330:   return max;
  2059  0074  0871               	movf	RTC_CheckMinMax@max,w
  2060  0075  2877               	goto	l131
  2061  0076                     l1672:
  2062                           
  2063                           ;newmain.c: 332:  return val;
  2064  0076  0872               	movf	RTC_CheckMinMax@val,w
  2065  0077                     l131:
  2066  0077  0008               	return
  2067  0078                     __end_of_RTC_CheckMinMax:
  2068                           
  2069                           	psect	text6
  2070  01F4                     __ptext6:	
  2071 ;; *************** function _RTC_Bin2Bcd *****************
  2072 ;; Defined at:
  2073 ;;		line 320 in file "newmain.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  bin             1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  bin             1    9[COMMON] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      unsigned char 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         1       0       0       0       0
  2089 ;;      Temps:          0       7       0       0       0
  2090 ;;      Totals:         1       7       0       0       0
  2091 ;;Total ram usage:        8 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 1
  2094 ;; This function calls:
  2095 ;;		___awdiv
  2096 ;;		___awmod
  2097 ;; This function is called by:
  2098 ;;		_RTC_SetDateTime
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _RTC_Bin2Bcd
  2104  01F4                     _RTC_Bin2Bcd:
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in _RTC_Bin2Bcd: [wreg+status,2+status,0+pclath+cstack]
  2108                           ;RTC_Bin2Bcd@bin stored from wreg
  2109  01F4  00F9               	movwf	RTC_Bin2Bcd@bin
  2110  01F5                     l1654:
  2111                           
  2112                           ;newmain.c: 320: unsigned char RTC_Bin2Bcd(unsigned char bin);newmain.c: 321: {;newmain.
      +                          c: 322:  return (bin/10)<<4|(bin%10);
  2113  01F5  300A               	movlw	10
  2114  01F6  00F0               	movwf	___awmod@divisor
  2115  01F7  3000               	movlw	0
  2116  01F8  00F1               	movwf	___awmod@divisor+1
  2117  01F9  0879               	movf	RTC_Bin2Bcd@bin,w
  2118  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2119  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2120  01FC  00A0               	movwf	??_RTC_Bin2Bcd
  2121  01FD  01A1               	clrf	??_RTC_Bin2Bcd+1
  2122  01FE  0820               	movf	??_RTC_Bin2Bcd,w
  2123  01FF  00F2               	movwf	___awmod@dividend
  2124  0200  0821               	movf	??_RTC_Bin2Bcd+1,w
  2125  0201  00F3               	movwf	___awmod@dividend+1
  2126  0202  120A  118A  2323  120A  118A  	fcall	___awmod
  2127  0207  0870               	movf	?___awmod,w
  2128  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2130  020A  00A2               	movwf	??_RTC_Bin2Bcd+2
  2131  020B  0871               	movf	?___awmod+1,w
  2132  020C  00A3               	movwf	??_RTC_Bin2Bcd+3
  2133  020D  300A               	movlw	10
  2134  020E  00F0               	movwf	___awdiv@divisor
  2135  020F  3000               	movlw	0
  2136  0210  00F1               	movwf	___awdiv@divisor+1
  2137  0211  0879               	movf	RTC_Bin2Bcd@bin,w
  2138  0212  00A4               	movwf	??_RTC_Bin2Bcd+4
  2139  0213  01A5               	clrf	??_RTC_Bin2Bcd+5
  2140  0214  0824               	movf	??_RTC_Bin2Bcd+4,w
  2141  0215  00F2               	movwf	___awdiv@dividend
  2142  0216  0825               	movf	??_RTC_Bin2Bcd+5,w
  2143  0217  00F3               	movwf	___awdiv@dividend+1
  2144  0218  120A  118A  23E2  120A  118A  	fcall	___awdiv
  2145  021D  0870               	movf	?___awdiv,w
  2146  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2147  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0220  00A6               	movwf	??_RTC_Bin2Bcd+6
  2149  0221  3003               	movlw	3
  2150  0222                     u1165:
  2151  0222  1003               	clrc
  2152  0223  0DA6               	rlf	??_RTC_Bin2Bcd+6,f
  2153  0224  3EFF               	addlw	-1
  2154  0225  1D03               	skipz
  2155  0226  2A22               	goto	u1165
  2156  0227  1003               	clrc
  2157  0228  0D26               	rlf	??_RTC_Bin2Bcd+6,w
  2158  0229  0422               	iorwf	??_RTC_Bin2Bcd+2,w
  2159  022A                     l127:
  2160  022A  0008               	return
  2161  022B                     __end_of_RTC_Bin2Bcd:
  2162                           
  2163                           	psect	text7
  2164  0323                     __ptext7:	
  2165 ;; *************** function ___awmod *****************
  2166 ;; Defined at:
  2167 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awmod.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  divisor         2    0[COMMON] int 
  2170 ;;  dividend        2    2[COMMON] int 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  sign            1    6[COMMON] unsigned char 
  2173 ;;  counter         1    5[COMMON] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  2    0[COMMON] int 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         4       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0
  2185 ;;      Temps:          1       0       0       0       0
  2186 ;;      Totals:         7       0       0       0       0
  2187 ;;Total ram usage:        7 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_RTC_Bin2Bcd
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function ___awmod
  2198  0323                     ___awmod:
  2199  0323                     l1520:	
  2200                           ;incstack = 0
  2201                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2202                           
  2203  0323  01F6               	clrf	___awmod@sign
  2204  0324                     l1522:
  2205  0324  1FF3               	btfss	___awmod@dividend+1,7
  2206  0325  2B27               	goto	u951
  2207  0326  2B28               	goto	u950
  2208  0327                     u951:
  2209  0327  2B2F               	goto	l1528
  2210  0328                     u950:
  2211  0328                     l1524:
  2212  0328  09F2               	comf	___awmod@dividend,f
  2213  0329  09F3               	comf	___awmod@dividend+1,f
  2214  032A  0AF2               	incf	___awmod@dividend,f
  2215  032B  1903               	skipnz
  2216  032C  0AF3               	incf	___awmod@dividend+1,f
  2217  032D                     l1526:
  2218  032D  01F6               	clrf	___awmod@sign
  2219  032E  0AF6               	incf	___awmod@sign,f
  2220  032F                     l1528:
  2221  032F  1FF1               	btfss	___awmod@divisor+1,7
  2222  0330  2B32               	goto	u961
  2223  0331  2B33               	goto	u960
  2224  0332                     u961:
  2225  0332  2B38               	goto	l1532
  2226  0333                     u960:
  2227  0333                     l1530:
  2228  0333  09F0               	comf	___awmod@divisor,f
  2229  0334  09F1               	comf	___awmod@divisor+1,f
  2230  0335  0AF0               	incf	___awmod@divisor,f
  2231  0336  1903               	skipnz
  2232  0337  0AF1               	incf	___awmod@divisor+1,f
  2233  0338                     l1532:
  2234  0338  0870               	movf	___awmod@divisor,w
  2235  0339  0471               	iorwf	___awmod@divisor+1,w
  2236  033A  1903               	btfsc	3,2
  2237  033B  2B3D               	goto	u971
  2238  033C  2B3E               	goto	u970
  2239  033D                     u971:
  2240  033D  2B6D               	goto	l1550
  2241  033E                     u970:
  2242  033E                     l1534:
  2243  033E  01F5               	clrf	___awmod@counter
  2244  033F  0AF5               	incf	___awmod@counter,f
  2245  0340  2B4C               	goto	l1540
  2246  0341                     l1536:
  2247  0341  3001               	movlw	1
  2248  0342                     u985:
  2249  0342  1003               	clrc
  2250  0343  0DF0               	rlf	___awmod@divisor,f
  2251  0344  0DF1               	rlf	___awmod@divisor+1,f
  2252  0345  3EFF               	addlw	-1
  2253  0346  1D03               	skipz
  2254  0347  2B42               	goto	u985
  2255  0348                     l1538:
  2256  0348  3001               	movlw	1
  2257  0349  00F4               	movwf	??___awmod
  2258  034A  0874               	movf	??___awmod,w
  2259  034B  07F5               	addwf	___awmod@counter,f
  2260  034C                     l1540:
  2261  034C  1FF1               	btfss	___awmod@divisor+1,7
  2262  034D  2B4F               	goto	u991
  2263  034E  2B50               	goto	u990
  2264  034F                     u991:
  2265  034F  2B41               	goto	l1536
  2266  0350                     u990:
  2267  0350                     l1542:
  2268  0350  0871               	movf	___awmod@divisor+1,w
  2269  0351  0273               	subwf	___awmod@dividend+1,w
  2270  0352  1D03               	skipz
  2271  0353  2B56               	goto	u1005
  2272  0354  0870               	movf	___awmod@divisor,w
  2273  0355  0272               	subwf	___awmod@dividend,w
  2274  0356                     u1005:
  2275  0356  1C03               	skipc
  2276  0357  2B59               	goto	u1001
  2277  0358  2B5A               	goto	u1000
  2278  0359                     u1001:
  2279  0359  2B60               	goto	l1546
  2280  035A                     u1000:
  2281  035A                     l1544:
  2282  035A  0870               	movf	___awmod@divisor,w
  2283  035B  02F2               	subwf	___awmod@dividend,f
  2284  035C  0871               	movf	___awmod@divisor+1,w
  2285  035D  1C03               	skipc
  2286  035E  03F3               	decf	___awmod@dividend+1,f
  2287  035F  02F3               	subwf	___awmod@dividend+1,f
  2288  0360                     l1546:
  2289  0360  3001               	movlw	1
  2290  0361                     u1015:
  2291  0361  1003               	clrc
  2292  0362  0CF1               	rrf	___awmod@divisor+1,f
  2293  0363  0CF0               	rrf	___awmod@divisor,f
  2294  0364  3EFF               	addlw	-1
  2295  0365  1D03               	skipz
  2296  0366  2B61               	goto	u1015
  2297  0367                     l1548:
  2298  0367  3001               	movlw	1
  2299  0368  02F5               	subwf	___awmod@counter,f
  2300  0369  1D03               	btfss	3,2
  2301  036A  2B6C               	goto	u1021
  2302  036B  2B6D               	goto	u1020
  2303  036C                     u1021:
  2304  036C  2B50               	goto	l1542
  2305  036D                     u1020:
  2306  036D                     l1550:
  2307  036D  0876               	movf	___awmod@sign,w
  2308  036E  1903               	btfsc	3,2
  2309  036F  2B71               	goto	u1031
  2310  0370  2B72               	goto	u1030
  2311  0371                     u1031:
  2312  0371  2B77               	goto	l1554
  2313  0372                     u1030:
  2314  0372                     l1552:
  2315  0372  09F2               	comf	___awmod@dividend,f
  2316  0373  09F3               	comf	___awmod@dividend+1,f
  2317  0374  0AF2               	incf	___awmod@dividend,f
  2318  0375  1903               	skipnz
  2319  0376  0AF3               	incf	___awmod@dividend+1,f
  2320  0377                     l1554:
  2321  0377  0873               	movf	___awmod@dividend+1,w
  2322  0378  00F1               	movwf	?___awmod+1
  2323  0379  0872               	movf	___awmod@dividend,w
  2324  037A  00F0               	movwf	?___awmod
  2325  037B                     l434:
  2326  037B  0008               	return
  2327  037C                     __end_of___awmod:
  2328                           
  2329                           	psect	text8
  2330  03E2                     __ptext8:	
  2331 ;; *************** function ___awdiv *****************
  2332 ;; Defined at:
  2333 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  divisor         2    0[COMMON] int 
  2336 ;;  dividend        2    2[COMMON] int 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  quotient        2    7[COMMON] int 
  2339 ;;  sign            1    6[COMMON] unsigned char 
  2340 ;;  counter         1    5[COMMON] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  2    0[COMMON] int 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         4       0       0       0       0
  2351 ;;      Locals:         4       0       0       0       0
  2352 ;;      Temps:          1       0       0       0       0
  2353 ;;      Totals:         9       0       0       0       0
  2354 ;;Total ram usage:        9 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_RTC_Bin2Bcd
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function ___awdiv
  2365  03E2                     ___awdiv:
  2366  03E2                     l1476:	
  2367                           ;incstack = 0
  2368                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2369                           
  2370  03E2  01F6               	clrf	___awdiv@sign
  2371  03E3                     l1478:
  2372  03E3  1FF1               	btfss	___awdiv@divisor+1,7
  2373  03E4  2BE6               	goto	u851
  2374  03E5  2BE7               	goto	u850
  2375  03E6                     u851:
  2376  03E6  2BEE               	goto	l1484
  2377  03E7                     u850:
  2378  03E7                     l1480:
  2379  03E7  09F0               	comf	___awdiv@divisor,f
  2380  03E8  09F1               	comf	___awdiv@divisor+1,f
  2381  03E9  0AF0               	incf	___awdiv@divisor,f
  2382  03EA  1903               	skipnz
  2383  03EB  0AF1               	incf	___awdiv@divisor+1,f
  2384  03EC                     l1482:
  2385  03EC  01F6               	clrf	___awdiv@sign
  2386  03ED  0AF6               	incf	___awdiv@sign,f
  2387  03EE                     l1484:
  2388  03EE  1FF3               	btfss	___awdiv@dividend+1,7
  2389  03EF  2BF1               	goto	u861
  2390  03F0  2BF2               	goto	u860
  2391  03F1                     u861:
  2392  03F1  2BFB               	goto	l1490
  2393  03F2                     u860:
  2394  03F2                     l1486:
  2395  03F2  09F2               	comf	___awdiv@dividend,f
  2396  03F3  09F3               	comf	___awdiv@dividend+1,f
  2397  03F4  0AF2               	incf	___awdiv@dividend,f
  2398  03F5  1903               	skipnz
  2399  03F6  0AF3               	incf	___awdiv@dividend+1,f
  2400  03F7                     l1488:
  2401  03F7  3001               	movlw	1
  2402  03F8  00F4               	movwf	??___awdiv
  2403  03F9  0874               	movf	??___awdiv,w
  2404  03FA  06F6               	xorwf	___awdiv@sign,f
  2405  03FB                     l1490:
  2406  03FB  01F7               	clrf	___awdiv@quotient
  2407  03FC  01F8               	clrf	___awdiv@quotient+1
  2408  03FD                     l1492:
  2409  03FD  0870               	movf	___awdiv@divisor,w
  2410  03FE  0471               	iorwf	___awdiv@divisor+1,w
  2411  03FF  1903               	btfsc	3,2
  2412  0400  2C02               	goto	u871
  2413  0401  2C03               	goto	u870
  2414  0402                     u871:
  2415  0402  2C3A               	goto	l1512
  2416  0403                     u870:
  2417  0403                     l1494:
  2418  0403  01F5               	clrf	___awdiv@counter
  2419  0404  0AF5               	incf	___awdiv@counter,f
  2420  0405  2C11               	goto	l1500
  2421  0406                     l1496:
  2422  0406  3001               	movlw	1
  2423  0407                     u885:
  2424  0407  1003               	clrc
  2425  0408  0DF0               	rlf	___awdiv@divisor,f
  2426  0409  0DF1               	rlf	___awdiv@divisor+1,f
  2427  040A  3EFF               	addlw	-1
  2428  040B  1D03               	skipz
  2429  040C  2C07               	goto	u885
  2430  040D                     l1498:
  2431  040D  3001               	movlw	1
  2432  040E  00F4               	movwf	??___awdiv
  2433  040F  0874               	movf	??___awdiv,w
  2434  0410  07F5               	addwf	___awdiv@counter,f
  2435  0411                     l1500:
  2436  0411  1FF1               	btfss	___awdiv@divisor+1,7
  2437  0412  2C14               	goto	u891
  2438  0413  2C15               	goto	u890
  2439  0414                     u891:
  2440  0414  2C06               	goto	l1496
  2441  0415                     u890:
  2442  0415                     l1502:
  2443  0415  3001               	movlw	1
  2444  0416                     u905:
  2445  0416  1003               	clrc
  2446  0417  0DF7               	rlf	___awdiv@quotient,f
  2447  0418  0DF8               	rlf	___awdiv@quotient+1,f
  2448  0419  3EFF               	addlw	-1
  2449  041A  1D03               	skipz
  2450  041B  2C16               	goto	u905
  2451  041C  0871               	movf	___awdiv@divisor+1,w
  2452  041D  0273               	subwf	___awdiv@dividend+1,w
  2453  041E  1D03               	skipz
  2454  041F  2C22               	goto	u915
  2455  0420  0870               	movf	___awdiv@divisor,w
  2456  0421  0272               	subwf	___awdiv@dividend,w
  2457  0422                     u915:
  2458  0422  1C03               	skipc
  2459  0423  2C25               	goto	u911
  2460  0424  2C26               	goto	u910
  2461  0425                     u911:
  2462  0425  2C2D               	goto	l1508
  2463  0426                     u910:
  2464  0426                     l1504:
  2465  0426  0870               	movf	___awdiv@divisor,w
  2466  0427  02F2               	subwf	___awdiv@dividend,f
  2467  0428  0871               	movf	___awdiv@divisor+1,w
  2468  0429  1C03               	skipc
  2469  042A  03F3               	decf	___awdiv@dividend+1,f
  2470  042B  02F3               	subwf	___awdiv@dividend+1,f
  2471  042C                     l1506:
  2472  042C  1477               	bsf	___awdiv@quotient,0
  2473  042D                     l1508:
  2474  042D  3001               	movlw	1
  2475  042E                     u925:
  2476  042E  1003               	clrc
  2477  042F  0CF1               	rrf	___awdiv@divisor+1,f
  2478  0430  0CF0               	rrf	___awdiv@divisor,f
  2479  0431  3EFF               	addlw	-1
  2480  0432  1D03               	skipz
  2481  0433  2C2E               	goto	u925
  2482  0434                     l1510:
  2483  0434  3001               	movlw	1
  2484  0435  02F5               	subwf	___awdiv@counter,f
  2485  0436  1D03               	btfss	3,2
  2486  0437  2C39               	goto	u931
  2487  0438  2C3A               	goto	u930
  2488  0439                     u931:
  2489  0439  2C15               	goto	l1502
  2490  043A                     u930:
  2491  043A                     l1512:
  2492  043A  0876               	movf	___awdiv@sign,w
  2493  043B  1903               	btfsc	3,2
  2494  043C  2C3E               	goto	u941
  2495  043D  2C3F               	goto	u940
  2496  043E                     u941:
  2497  043E  2C44               	goto	l1516
  2498  043F                     u940:
  2499  043F                     l1514:
  2500  043F  09F7               	comf	___awdiv@quotient,f
  2501  0440  09F8               	comf	___awdiv@quotient+1,f
  2502  0441  0AF7               	incf	___awdiv@quotient,f
  2503  0442  1903               	skipnz
  2504  0443  0AF8               	incf	___awdiv@quotient+1,f
  2505  0444                     l1516:
  2506  0444  0878               	movf	___awdiv@quotient+1,w
  2507  0445  00F1               	movwf	?___awdiv+1
  2508  0446  0877               	movf	___awdiv@quotient,w
  2509  0447  00F0               	movwf	?___awdiv
  2510  0448                     l421:
  2511  0448  0008               	return
  2512  0449                     __end_of___awdiv:
  2513                           
  2514                           	psect	text9
  2515  037C                     __ptext9:	
  2516 ;; *************** function _I2C_WriteMulti *****************
  2517 ;; Defined at:
  2518 ;;		line 246 in file "newmain.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  addr            1    wreg     unsigned char 
  2521 ;;  reg             1    4[COMMON] unsigned char 
  2522 ;;  len             1    5[COMMON] unsigned char 
  2523 ;;  buff            1    6[COMMON] PTR unsigned char 
  2524 ;;		 -> RTC_SetDateTime@data(7), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  addr            1    9[COMMON] unsigned char 
  2527 ;;  i               1   10[COMMON] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         3       0       0       0       0
  2538 ;;      Locals:         2       0       0       0       0
  2539 ;;      Temps:          2       0       0       0       0
  2540 ;;      Totals:         7       0       0       0       0
  2541 ;;Total ram usage:        7 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 2
  2544 ;; This function calls:
  2545 ;;		_I2C_Start
  2546 ;;		_I2C_Stop
  2547 ;;		_I2C_WaitACK
  2548 ;;		_I2C_Write
  2549 ;; This function is called by:
  2550 ;;		_RTC_SetDateTime
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _I2C_WriteMulti
  2556  037C                     _I2C_WriteMulti:
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _I2C_WriteMulti: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2560                           ;I2C_WriteMulti@addr stored from wreg
  2561  037C  00F9               	movwf	I2C_WriteMulti@addr
  2562  037D                     l1604:
  2563                           
  2564                           ;newmain.c: 246: void I2C_WriteMulti(unsigned char addr, unsigned char reg, unsigned cha
      +                          r len, unsigned char buff[]);newmain.c: 247: {;newmain.c: 248:     unsigned char i;;newm
      +                          ain.c: 249:     I2C_Start();
  2565  037D  120A  118A  20E7  120A  118A  	fcall	_I2C_Start
  2566                           
  2567                           ;newmain.c: 251:     I2C_Write(addr|0);
  2568  0382  0879               	movf	I2C_WriteMulti@addr,w
  2569  0383  120A  118A  21C5  120A  118A  	fcall	_I2C_Write
  2570                           
  2571                           ;newmain.c: 252:     if(I2C_WaitACK()) I2C_Stop();
  2572  0388  120A  118A  216B  120A  118A  	fcall	_I2C_WaitACK
  2573  038D  3A00               	xorlw	0
  2574  038E  1903               	skipnz
  2575  038F  2B91               	goto	u1071
  2576  0390  2B92               	goto	u1070
  2577  0391                     u1071:
  2578  0391  2B97               	goto	l93
  2579  0392                     u1070:
  2580  0392                     l1606:
  2581  0392  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  2582  0397                     l93:
  2583                           
  2584                           ;newmain.c: 254:     I2C_Write(reg);
  2585  0397  0874               	movf	I2C_WriteMulti@reg,w
  2586  0398  120A  118A  21C5  120A  118A  	fcall	_I2C_Write
  2587                           
  2588                           ;newmain.c: 255:     if(I2C_WaitACK()) I2C_Stop();
  2589  039D  120A  118A  216B  120A  118A  	fcall	_I2C_WaitACK
  2590  03A2  3A00               	xorlw	0
  2591  03A3  1903               	skipnz
  2592  03A4  2BA6               	goto	u1081
  2593  03A5  2BA7               	goto	u1080
  2594  03A6                     u1081:
  2595  03A6  2BAC               	goto	l1610
  2596  03A7                     u1080:
  2597  03A7                     l1608:
  2598  03A7  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  2599  03AC                     l1610:
  2600                           
  2601                           ;newmain.c: 257:     for(i = 0; i < len; i++)
  2602  03AC  01FA               	clrf	I2C_WriteMulti@i
  2603  03AD  2BCD               	goto	l1620
  2604  03AE                     l1612:
  2605                           
  2606                           ;newmain.c: 258:     {;newmain.c: 259:         I2C_Write(buff[i]);
  2607  03AE  087A               	movf	I2C_WriteMulti@i,w
  2608  03AF  0776               	addwf	I2C_WriteMulti@buff,w
  2609  03B0  00F7               	movwf	??_I2C_WriteMulti
  2610  03B1  0877               	movf	??_I2C_WriteMulti,w
  2611  03B2  0084               	movwf	4
  2612  03B3  1383               	bcf	3,7	;select IRP bank0
  2613  03B4  0800               	movf	0,w
  2614  03B5  120A  118A  21C5  120A  118A  	fcall	_I2C_Write
  2615  03BA                     l1614:
  2616                           
  2617                           ;newmain.c: 260:         if(I2C_WaitACK()) I2C_Stop();
  2618  03BA  120A  118A  216B  120A  118A  	fcall	_I2C_WaitACK
  2619  03BF  3A00               	xorlw	0
  2620  03C0  1903               	skipnz
  2621  03C1  2BC3               	goto	u1091
  2622  03C2  2BC4               	goto	u1090
  2623  03C3                     u1091:
  2624  03C3  2BC9               	goto	l1618
  2625  03C4                     u1090:
  2626  03C4                     l1616:
  2627  03C4  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  2628  03C9                     l1618:
  2629                           
  2630                           ;newmain.c: 261:     }
  2631  03C9  3001               	movlw	1
  2632  03CA  00F7               	movwf	??_I2C_WriteMulti
  2633  03CB  0877               	movf	??_I2C_WriteMulti,w
  2634  03CC  07FA               	addwf	I2C_WriteMulti@i,f
  2635  03CD                     l1620:
  2636  03CD  0875               	movf	I2C_WriteMulti@len,w
  2637  03CE  027A               	subwf	I2C_WriteMulti@i,w
  2638  03CF  1C03               	skipc
  2639  03D0  2BD2               	goto	u1101
  2640  03D1  2BD3               	goto	u1100
  2641  03D2                     u1101:
  2642  03D2  2BAE               	goto	l1612
  2643  03D3                     u1100:
  2644  03D3                     l1622:
  2645                           
  2646                           ;newmain.c: 263:     I2C_Stop();
  2647  03D3  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  2648  03D8                     l1624:
  2649                           
  2650                           ;newmain.c: 264:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2651  03D8  300D               	movlw	13
  2652  03D9  00F8               	movwf	??_I2C_WriteMulti+1
  2653  03DA  30FB               	movlw	251
  2654  03DB  00F7               	movwf	??_I2C_WriteMulti
  2655  03DC                     u1527:
  2656  03DC  0BF7               	decfsz	??_I2C_WriteMulti,f
  2657  03DD  2BDC               	goto	u1527
  2658  03DE  0BF8               	decfsz	??_I2C_WriteMulti+1,f
  2659  03DF  2BDC               	goto	u1527
  2660  03E0  2BE1               	nop2
  2661  03E1                     l99:
  2662  03E1  0008               	return
  2663  03E2                     __end_of_I2C_WriteMulti:
  2664                           
  2665                           	psect	text10
  2666  0449                     __ptext10:	
  2667 ;; *************** function _RTC_GetDateTime *****************
  2668 ;; Defined at:
  2669 ;;		line 335 in file "newmain.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  hour            1    wreg     PTR unsigned char 
  2672 ;;		 -> main@hour(1), 
  2673 ;;  minute          1    0[BANK0 ] PTR unsigned char 
  2674 ;;		 -> main@minute(1), 
  2675 ;;  second          1    1[BANK0 ] PTR unsigned char 
  2676 ;;		 -> main@second(1), 
  2677 ;;  day             1    2[BANK0 ] PTR unsigned char 
  2678 ;;		 -> main@day(1), 
  2679 ;;  date            1    3[BANK0 ] PTR unsigned char 
  2680 ;;		 -> main@date(1), 
  2681 ;;  month           1    4[BANK0 ] PTR unsigned char 
  2682 ;;		 -> main@month(1), 
  2683 ;;  year            1    5[BANK0 ] PTR unsigned char 
  2684 ;;		 -> main@year(1), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  hour            1   13[BANK0 ] PTR unsigned char 
  2687 ;;		 -> main@hour(1), 
  2688 ;;  data            7    6[BANK0 ] unsigned char [7]
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       6       0       0       0
  2699 ;;      Locals:         0       8       0       0       0
  2700 ;;      Temps:          2       0       0       0       0
  2701 ;;      Totals:         2      14       0       0       0
  2702 ;;Total ram usage:       16 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 3
  2705 ;; This function calls:
  2706 ;;		_I2C_ReadMultiPointer
  2707 ;;		_RTC_Bcd2Bin
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _RTC_GetDateTime
  2715  0449                     _RTC_GetDateTime:
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2719                           ;RTC_GetDateTime@hour stored from wreg
  2720  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2721  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2722  044B  00AD               	movwf	RTC_GetDateTime@hour
  2723  044C                     l1764:
  2724                           
  2725                           ;newmain.c: 335: void RTC_GetDateTime(unsigned char* hour, unsigned char* minute, unsign
      +                          ed char* second, unsigned char* day, unsigned char* date, unsigned char* month, unsigned
      +                           char* year);newmain.c: 336: {;newmain.c: 337:     unsigned char data[7];;newmain.c: 338
      +                          :     I2C_ReadMultiPointer(0xD0, 0x00, 7, data);
  2726  044C  01F5               	clrf	I2C_ReadMultiPointer@reg
  2727  044D  3007               	movlw	7
  2728  044E  00FB               	movwf	??_RTC_GetDateTime
  2729  044F  087B               	movf	??_RTC_GetDateTime,w
  2730  0450  00F6               	movwf	I2C_ReadMultiPointer@len
  2731  0451  3026               	movlw	(low (RTC_GetDateTime@data| 0))& (0+255)
  2732  0452  00FC               	movwf	??_RTC_GetDateTime+1
  2733  0453  087C               	movf	??_RTC_GetDateTime+1,w
  2734  0454  00F7               	movwf	I2C_ReadMultiPointer@Rvalue
  2735  0455  30D0               	movlw	208
  2736  0456  120A  118A  24C0  120A  118A  	fcall	_I2C_ReadMultiPointer
  2737                           
  2738                           ;newmain.c: 340:     *second = RTC_Bcd2Bin(data[0]);
  2739  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2740  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2741  045D  0826               	movf	RTC_GetDateTime@data,w
  2742  045E  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2743  0463  00FB               	movwf	??_RTC_GetDateTime
  2744  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2745  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2746  0466  0821               	movf	RTC_GetDateTime@second,w
  2747  0467  0084               	movwf	4
  2748  0468  087B               	movf	??_RTC_GetDateTime,w
  2749  0469  1383               	bcf	3,7	;select IRP bank0
  2750  046A  0080               	movwf	0
  2751                           
  2752                           ;newmain.c: 341:  *minute = RTC_Bcd2Bin(data[1]);
  2753  046B  0827               	movf	RTC_GetDateTime@data+1,w
  2754  046C  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2755  0471  00FB               	movwf	??_RTC_GetDateTime
  2756  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0474  0820               	movf	RTC_GetDateTime@minute,w
  2759  0475  0084               	movwf	4
  2760  0476  087B               	movf	??_RTC_GetDateTime,w
  2761  0477  1383               	bcf	3,7	;select IRP bank0
  2762  0478  0080               	movwf	0
  2763                           
  2764                           ;newmain.c: 342:  *hour = RTC_Bcd2Bin(data[2]);
  2765  0479  0828               	movf	RTC_GetDateTime@data+2,w
  2766  047A  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2767  047F  00FB               	movwf	??_RTC_GetDateTime
  2768  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0482  082D               	movf	RTC_GetDateTime@hour,w
  2771  0483  0084               	movwf	4
  2772  0484  087B               	movf	??_RTC_GetDateTime,w
  2773  0485  1383               	bcf	3,7	;select IRP bank0
  2774  0486  0080               	movwf	0
  2775                           
  2776                           ;newmain.c: 343:  *day = RTC_Bcd2Bin(data[3]);
  2777  0487  0829               	movf	RTC_GetDateTime@data+3,w
  2778  0488  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2779  048D  00FB               	movwf	??_RTC_GetDateTime
  2780  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2781  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0490  0822               	movf	RTC_GetDateTime@day,w
  2783  0491  0084               	movwf	4
  2784  0492  087B               	movf	??_RTC_GetDateTime,w
  2785  0493  1383               	bcf	3,7	;select IRP bank0
  2786  0494  0080               	movwf	0
  2787                           
  2788                           ;newmain.c: 344:  *date = RTC_Bcd2Bin(data[4]);
  2789  0495  082A               	movf	RTC_GetDateTime@data+4,w
  2790  0496  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2791  049B  00FB               	movwf	??_RTC_GetDateTime
  2792  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2793  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2794  049E  0823               	movf	RTC_GetDateTime@date,w
  2795  049F  0084               	movwf	4
  2796  04A0  087B               	movf	??_RTC_GetDateTime,w
  2797  04A1  1383               	bcf	3,7	;select IRP bank0
  2798  04A2  0080               	movwf	0
  2799                           
  2800                           ;newmain.c: 345:  *month = RTC_Bcd2Bin(data[5]);
  2801  04A3  082B               	movf	RTC_GetDateTime@data+5,w
  2802  04A4  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2803  04A9  00FB               	movwf	??_RTC_GetDateTime
  2804  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2805  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2806  04AC  0824               	movf	RTC_GetDateTime@month,w
  2807  04AD  0084               	movwf	4
  2808  04AE  087B               	movf	??_RTC_GetDateTime,w
  2809  04AF  1383               	bcf	3,7	;select IRP bank0
  2810  04B0  0080               	movwf	0
  2811                           
  2812                           ;newmain.c: 346:  *year = RTC_Bcd2Bin(data[6]);
  2813  04B1  082C               	movf	RTC_GetDateTime@data+6,w
  2814  04B2  120A  118A  2117  120A  118A  	fcall	_RTC_Bcd2Bin
  2815  04B7  00FB               	movwf	??_RTC_GetDateTime
  2816  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2817  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2818  04BA  0825               	movf	RTC_GetDateTime@year,w
  2819  04BB  0084               	movwf	4
  2820  04BC  087B               	movf	??_RTC_GetDateTime,w
  2821  04BD  1383               	bcf	3,7	;select IRP bank0
  2822  04BE  0080               	movwf	0
  2823  04BF                     l136:
  2824  04BF  0008               	return
  2825  04C0                     __end_of_RTC_GetDateTime:
  2826                           
  2827                           	psect	text11
  2828  0117                     __ptext11:	
  2829 ;; *************** function _RTC_Bcd2Bin *****************
  2830 ;; Defined at:
  2831 ;;		line 315 in file "newmain.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  bcd             1    wreg     unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  bcd             1    7[COMMON] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      unsigned char 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         0       0       0       0       0
  2846 ;;      Locals:         1       0       0       0       0
  2847 ;;      Temps:          3       0       0       0       0
  2848 ;;      Totals:         4       0       0       0       0
  2849 ;;Total ram usage:        4 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 1
  2852 ;; This function calls:
  2853 ;;		___bmul
  2854 ;; This function is called by:
  2855 ;;		_RTC_GetDateTime
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _RTC_Bcd2Bin
  2861  0117                     _RTC_Bcd2Bin:
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _RTC_Bcd2Bin: [wreg+status,2+status,0+pclath+cstack]
  2865                           ;RTC_Bcd2Bin@bcd stored from wreg
  2866  0117  00F7               	movwf	RTC_Bcd2Bin@bcd
  2867  0118                     l1650:
  2868                           
  2869                           ;newmain.c: 315: unsigned char RTC_Bcd2Bin(unsigned char bcd);newmain.c: 316: {;newmain.
      +                          c: 317:  return 10*(bcd >> 4)+(bcd&0x0F);
  2870  0118  300F               	movlw	15
  2871  0119  0577               	andwf	RTC_Bcd2Bin@bcd,w
  2872  011A  00F4               	movwf	??_RTC_Bcd2Bin
  2873  011B  300A               	movlw	10
  2874  011C  00F5               	movwf	??_RTC_Bcd2Bin+1
  2875  011D  0875               	movf	??_RTC_Bcd2Bin+1,w
  2876  011E  00F0               	movwf	___bmul@multiplicand
  2877  011F  0877               	movf	RTC_Bcd2Bin@bcd,w
  2878  0120  00F6               	movwf	??_RTC_Bcd2Bin+2
  2879  0121  3004               	movlw	4
  2880  0122                     u1155:
  2881  0122  1003               	clrc
  2882  0123  0CF6               	rrf	??_RTC_Bcd2Bin+2,f
  2883  0124  3EFF               	addlw	-1
  2884  0125  1D03               	skipz
  2885  0126  2922               	goto	u1155
  2886  0127  0876               	movf	??_RTC_Bcd2Bin+2,w
  2887  0128  120A  118A  208B  120A  118A  	fcall	___bmul
  2888  012D  0774               	addwf	??_RTC_Bcd2Bin,w
  2889  012E                     l124:
  2890  012E  0008               	return
  2891  012F                     __end_of_RTC_Bcd2Bin:
  2892                           
  2893                           	psect	text12
  2894  008B                     __ptext12:	
  2895 ;; *************** function ___bmul *****************
  2896 ;; Defined at:
  2897 ;;		line 4 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\Umul8.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  multiplier      1    wreg     unsigned char 
  2900 ;;  multiplicand    1    0[COMMON] unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  multiplier      1    3[COMMON] unsigned char 
  2903 ;;  product         1    2[COMMON] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      unsigned char 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         1       0       0       0       0
  2914 ;;      Locals:         2       0       0       0       0
  2915 ;;      Temps:          1       0       0       0       0
  2916 ;;      Totals:         4       0       0       0       0
  2917 ;;Total ram usage:        4 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_RTC_Bcd2Bin
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function ___bmul
  2928  008B                     ___bmul:
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2932                           ;___bmul@multiplier stored from wreg
  2933  008B  00F3               	movwf	___bmul@multiplier
  2934  008C                     l1462:
  2935  008C  01F2               	clrf	___bmul@product
  2936  008D                     l1464:
  2937  008D  1C73               	btfss	___bmul@multiplier,0
  2938  008E  2890               	goto	u831
  2939  008F  2891               	goto	u830
  2940  0090                     u831:
  2941  0090  2895               	goto	l1468
  2942  0091                     u830:
  2943  0091                     l1466:
  2944  0091  0870               	movf	___bmul@multiplicand,w
  2945  0092  00F1               	movwf	??___bmul
  2946  0093  0871               	movf	??___bmul,w
  2947  0094  07F2               	addwf	___bmul@product,f
  2948  0095                     l1468:
  2949  0095  1003               	clrc
  2950  0096  0DF0               	rlf	___bmul@multiplicand,f
  2951  0097                     l1470:
  2952  0097  1003               	clrc
  2953  0098  0CF3               	rrf	___bmul@multiplier,f
  2954  0099  0873               	movf	___bmul@multiplier,w
  2955  009A  1D03               	btfss	3,2
  2956  009B  289D               	goto	u841
  2957  009C  289E               	goto	u840
  2958  009D                     u841:
  2959  009D  288D               	goto	l1464
  2960  009E                     u840:
  2961  009E                     l1472:
  2962  009E  0872               	movf	___bmul@product,w
  2963  009F                     l294:
  2964  009F  0008               	return
  2965  00A0                     __end_of___bmul:
  2966                           
  2967                           	psect	text13
  2968  04C0                     __ptext13:	
  2969 ;; *************** function _I2C_ReadMultiPointer *****************
  2970 ;; Defined at:
  2971 ;;		line 290 in file "newmain.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  addr            1    wreg     unsigned char 
  2974 ;;  reg             1    5[COMMON] unsigned char 
  2975 ;;  len             1    6[COMMON] unsigned char 
  2976 ;;  Rvalue          1    7[COMMON] PTR unsigned char 
  2977 ;;		 -> RTC_GetDateTime@data(7), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  addr            1   10[COMMON] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         3       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0
  2991 ;;      Temps:          2       0       0       0       0
  2992 ;;      Totals:         6       0       0       0       0
  2993 ;;Total ram usage:        6 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 2
  2996 ;; This function calls:
  2997 ;;		_I2C_Read
  2998 ;;		_I2C_Start
  2999 ;;		_I2C_Stop
  3000 ;;		_I2C_WaitACK
  3001 ;;		_I2C_Write
  3002 ;; This function is called by:
  3003 ;;		_RTC_GetDateTime
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function _I2C_ReadMultiPointer
  3009  04C0                     _I2C_ReadMultiPointer:
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _I2C_ReadMultiPointer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3013                           ;I2C_ReadMultiPointer@addr stored from wreg
  3014  04C0  00FA               	movwf	I2C_ReadMultiPointer@addr
  3015  04C1                     l1626:
  3016                           
  3017                           ;newmain.c: 290: void I2C_ReadMultiPointer(unsigned char addr, unsigned char reg, unsign
      +                          ed char len, unsigned char* Rvalue);newmain.c: 291: {;newmain.c: 292:     I2C_Start();
  3018  04C1  120A  118A  20E7  120A  118A  	fcall	_I2C_Start
  3019                           
  3020                           ;newmain.c: 293:     I2C_Write(addr);
  3021  04C6  087A               	movf	I2C_ReadMultiPointer@addr,w
  3022  04C7  120A  118A  21C5  120A  118A  	fcall	_I2C_Write
  3023                           
  3024                           ;newmain.c: 294:     if(I2C_WaitACK()) I2C_Stop();
  3025  04CC  120A  118A  216B  120A  118A  	fcall	_I2C_WaitACK
  3026  04D1  3A00               	xorlw	0
  3027  04D2  1903               	skipnz
  3028  04D3  2CD5               	goto	u1111
  3029  04D4  2CD6               	goto	u1110
  3030  04D5                     u1111:
  3031  04D5  2CDB               	goto	l113
  3032  04D6                     u1110:
  3033  04D6                     l1628:
  3034  04D6  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  3035  04DB                     l113:
  3036                           
  3037                           ;newmain.c: 295:     I2C_Write(reg);
  3038  04DB  0875               	movf	I2C_ReadMultiPointer@reg,w
  3039  04DC  120A  118A  21C5  120A  118A  	fcall	_I2C_Write
  3040                           
  3041                           ;newmain.c: 296:     if(I2C_WaitACK()) I2C_Stop();
  3042  04E1  120A  118A  216B  120A  118A  	fcall	_I2C_WaitACK
  3043  04E6  3A00               	xorlw	0
  3044  04E7  1903               	skipnz
  3045  04E8  2CEA               	goto	u1121
  3046  04E9  2CEB               	goto	u1120
  3047  04EA                     u1121:
  3048  04EA  2CF0               	goto	l114
  3049  04EB                     u1120:
  3050  04EB                     l1630:
  3051  04EB  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  3052  04F0                     l114:
  3053                           
  3054                           ;newmain.c: 298:     I2C_Start();
  3055  04F0  120A  118A  20E7  120A  118A  	fcall	_I2C_Start
  3056                           
  3057                           ;newmain.c: 299:     I2C_Write(addr|1);
  3058  04F5  087A               	movf	I2C_ReadMultiPointer@addr,w
  3059  04F6  3801               	iorlw	1
  3060  04F7  120A  118A  21C5  120A  118A  	fcall	_I2C_Write
  3061                           
  3062                           ;newmain.c: 300:     if(I2C_WaitACK()) I2C_Stop();
  3063  04FC  120A  118A  216B  120A  118A  	fcall	_I2C_WaitACK
  3064  0501  3A00               	xorlw	0
  3065  0502  1903               	skipnz
  3066  0503  2D05               	goto	u1131
  3067  0504  2D06               	goto	u1130
  3068  0505                     u1131:
  3069  0505  2D0B               	goto	l1634
  3070  0506                     u1130:
  3071  0506                     l1632:
  3072  0506  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  3073  050B                     l1634:
  3074                           
  3075                           ;newmain.c: 303:     {;newmain.c: 304:         if(len == 1) {*Rvalue = I2C_Read(1); brea
      +                          k;}
  3076  050B  0376               	decf	I2C_ReadMultiPointer@len,w
  3077  050C  1D03               	btfss	3,2
  3078  050D  2D0F               	goto	u1141
  3079  050E  2D10               	goto	u1140
  3080  050F                     u1141:
  3081  050F  2D1D               	goto	l1640
  3082  0510                     u1140:
  3083  0510                     l1636:
  3084  0510  3001               	movlw	1
  3085  0511  120A  118A  2265  120A  118A  	fcall	_I2C_Read
  3086  0516  00F8               	movwf	??_I2C_ReadMultiPointer
  3087  0517  0877               	movf	I2C_ReadMultiPointer@Rvalue,w
  3088  0518  0084               	movwf	4
  3089  0519  0878               	movf	??_I2C_ReadMultiPointer,w
  3090  051A  1383               	bcf	3,7	;select IRP bank0
  3091  051B  0080               	movwf	0
  3092  051C  2D30               	goto	l1646
  3093  051D                     l1640:
  3094  051D  3000               	movlw	0
  3095  051E  120A  118A  2265  120A  118A  	fcall	_I2C_Read
  3096  0523  00F8               	movwf	??_I2C_ReadMultiPointer
  3097  0524  0877               	movf	I2C_ReadMultiPointer@Rvalue,w
  3098  0525  0084               	movwf	4
  3099  0526  0878               	movf	??_I2C_ReadMultiPointer,w
  3100  0527  1383               	bcf	3,7	;select IRP bank0
  3101  0528  0080               	movwf	0
  3102  0529                     l1642:
  3103                           
  3104                           ;newmain.c: 306:         Rvalue++;
  3105  0529  3001               	movlw	1
  3106  052A  00F8               	movwf	??_I2C_ReadMultiPointer
  3107  052B  0878               	movf	??_I2C_ReadMultiPointer,w
  3108  052C  07F7               	addwf	I2C_ReadMultiPointer@Rvalue,f
  3109  052D                     l1644:
  3110                           
  3111                           ;newmain.c: 307:         len--;
  3112  052D  3001               	movlw	1
  3113  052E  02F6               	subwf	I2C_ReadMultiPointer@len,f
  3114  052F  2D0B               	goto	l1634
  3115  0530                     l1646:
  3116                           
  3117                           ;newmain.c: 309:     I2C_Stop();
  3118  0530  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  3119  0535                     l1648:
  3120                           
  3121                           ;newmain.c: 310:     _delay((unsigned long)((2)*(20000000/4000.0)));
  3122  0535  300D               	movlw	13
  3123  0536  00F9               	movwf	??_I2C_ReadMultiPointer+1
  3124  0537  30FB               	movlw	251
  3125  0538  00F8               	movwf	??_I2C_ReadMultiPointer
  3126  0539                     u1537:
  3127  0539  0BF8               	decfsz	??_I2C_ReadMultiPointer,f
  3128  053A  2D39               	goto	u1537
  3129  053B  0BF9               	decfsz	??_I2C_ReadMultiPointer+1,f
  3130  053C  2D39               	goto	u1537
  3131  053D  2D3E               	nop2
  3132  053E                     l121:
  3133  053E  0008               	return
  3134  053F                     __end_of_I2C_ReadMultiPointer:
  3135                           
  3136                           	psect	text14
  3137  01C5                     __ptext14:	
  3138 ;; *************** function _I2C_Write *****************
  3139 ;; Defined at:
  3140 ;;		line 174 in file "newmain.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  Tvalue          1    wreg     unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  Tvalue          1    2[COMMON] unsigned char 
  3145 ;;  i               1    3[COMMON] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3155 ;;      Params:         0       0       0       0       0
  3156 ;;      Locals:         2       0       0       0       0
  3157 ;;      Temps:          2       0       0       0       0
  3158 ;;      Totals:         4       0       0       0       0
  3159 ;;Total ram usage:        4 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_I2C_WriteMulti
  3165 ;;		_I2C_ReadMultiPointer
  3166 ;;		_I2C_ReadMulti
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function _I2C_Write
  3172  01C5                     _I2C_Write:
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _I2C_Write: [wreg+status,2+status,0]
  3176                           ;I2C_Write@Tvalue stored from wreg
  3177  01C5  00F2               	movwf	I2C_Write@Tvalue
  3178  01C6                     l1388:
  3179                           
  3180                           ;newmain.c: 174: void I2C_Write(unsigned char Tvalue);newmain.c: 175: {;newmain.c: 176: 
      +                              unsigned char i;;newmain.c: 177:     TRISDbits.TRISD1 = 0;
  3181  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  3182  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  3183  01C8  1088               	bcf	8,1	;volatile
  3184                           
  3185                           ;newmain.c: 178:     PORTDbits.RD0 = 0;
  3186  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3187  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3188  01CB  1008               	bcf	8,0	;volatile
  3189  01CC                     l1390:
  3190                           
  3191                           ;newmain.c: 179:     for(i=0;i<8;i++){
  3192  01CC  01F3               	clrf	I2C_Write@i
  3193  01CD                     l1396:
  3194                           
  3195                           ;newmain.c: 180:   PORTDbits.RD1 = (Tvalue&0x80) >> 7;
  3196  01CD  0872               	movf	I2C_Write@Tvalue,w
  3197  01CE  00F0               	movwf	??_I2C_Write
  3198  01CF  3007               	movlw	7
  3199  01D0                     u765:
  3200  01D0  1003               	clrc
  3201  01D1  0CF0               	rrf	??_I2C_Write,f
  3202  01D2  3EFF               	addlw	-1
  3203  01D3  1D03               	skipz
  3204  01D4  29D0               	goto	u765
  3205  01D5  0870               	movf	??_I2C_Write,w
  3206  01D6  3901               	andlw	1
  3207  01D7  00F1               	movwf	??_I2C_Write+1
  3208  01D8  0DF1               	rlf	??_I2C_Write+1,f
  3209  01D9  0808               	movf	8,w	;volatile
  3210  01DA  0671               	xorwf	??_I2C_Write+1,w
  3211  01DB  39FD               	andlw	-3
  3212  01DC  0671               	xorwf	??_I2C_Write+1,w
  3213  01DD  0088               	movwf	8	;volatile
  3214  01DE                     l1398:
  3215                           
  3216                           ;newmain.c: 181:   Tvalue <<= 1;
  3217  01DE  1003               	clrc
  3218  01DF  0DF2               	rlf	I2C_Write@Tvalue,f
  3219  01E0                     l1400:
  3220                           
  3221                           ;newmain.c: 182:   PORTDbits.RD0 = 1;
  3222  01E0  1408               	bsf	8,0	;volatile
  3223  01E1                     l1402:
  3224                           
  3225                           ;newmain.c: 183:   _delay((unsigned long)((4)*(20000000/4000000.0)));
  3226  01E1  3006               	movlw	6
  3227  01E2  00F0               	movwf	??_I2C_Write
  3228  01E3                     u1547:
  3229  01E3  0BF0               	decfsz	??_I2C_Write,f
  3230  01E4  29E3               	goto	u1547
  3231  01E5  0000               	nop
  3232  01E6                     l1404:
  3233                           
  3234                           ;newmain.c: 184:   PORTDbits.RD0 = 0;
  3235  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  3236  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  3237  01E8  1008               	bcf	8,0	;volatile
  3238                           
  3239                           ;newmain.c: 185:  }
  3240  01E9  3001               	movlw	1
  3241  01EA  00F0               	movwf	??_I2C_Write
  3242  01EB  0870               	movf	??_I2C_Write,w
  3243  01EC  07F3               	addwf	I2C_Write@i,f
  3244  01ED                     l1406:
  3245  01ED  3008               	movlw	8
  3246  01EE  0273               	subwf	I2C_Write@i,w
  3247  01EF  1C03               	skipc
  3248  01F0  29F2               	goto	u771
  3249  01F1  29F3               	goto	u770
  3250  01F2                     u771:
  3251  01F2  29CD               	goto	l1396
  3252  01F3                     u770:
  3253  01F3                     l69:
  3254  01F3  0008               	return
  3255  01F4                     __end_of_I2C_Write:
  3256                           
  3257                           	psect	text15
  3258  016B                     __ptext15:	
  3259 ;; *************** function _I2C_WaitACK *****************
  3260 ;; Defined at:
  3261 ;;		line 187 in file "newmain.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  time            1    2[COMMON] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         1       0       0       0       0
  3277 ;;      Temps:          1       0       0       0       0
  3278 ;;      Totals:         2       0       0       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 1
  3282 ;; This function calls:
  3283 ;;		_I2C_Stop
  3284 ;; This function is called by:
  3285 ;;		_I2C_WriteMulti
  3286 ;;		_I2C_ReadMultiPointer
  3287 ;;		_I2C_ReadMulti
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _I2C_WaitACK
  3293  016B                     _I2C_WaitACK:
  3294  016B                     l1408:	
  3295                           ;incstack = 0
  3296                           ; Regs used in _I2C_WaitACK: [wreg+status,2+status,0+pclath+cstack]
  3297                           
  3298                           
  3299                           ;newmain.c: 189:     unsigned char time = 0;
  3300  016B  01F2               	clrf	I2C_WaitACK@time
  3301  016C                     l1410:
  3302                           
  3303                           ;newmain.c: 190:     TRISDbits.TRISD1 = 1;
  3304  016C  1683               	bsf	3,5	;RP0=1, select bank1
  3305  016D  1303               	bcf	3,6	;RP1=0, select bank1
  3306  016E  1488               	bsf	8,1	;volatile
  3307  016F                     l1412:
  3308                           
  3309                           ;newmain.c: 191:     PORTDbits.RD1 = 1;
  3310  016F  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0170  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0171  1488               	bsf	8,1	;volatile
  3313  0172                     l1414:
  3314                           
  3315                           ;newmain.c: 192:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3316  0172  2973               	nop2	;2 cycle nop
  3317  0173  2974               	nop2	;2 cycle nop
  3318  0174  0000               	nop
  3319  0175                     l1416:
  3320                           
  3321                           ;newmain.c: 193:  PORTDbits.RD0 = 1;
  3322  0175  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0176  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0177  1408               	bsf	8,0	;volatile
  3325  0178                     l1418:
  3326                           
  3327                           ;newmain.c: 194:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3328  0178  2979               	nop2	;2 cycle nop
  3329  0179  297A               	nop2	;2 cycle nop
  3330  017A  0000               	nop
  3331                           
  3332                           ;newmain.c: 195:  while(PORTDbits.RD1){
  3333  017B  298D               	goto	l72
  3334  017C                     l1420:
  3335                           
  3336                           ;newmain.c: 196:   time++;
  3337  017C  3001               	movlw	1
  3338  017D  00F1               	movwf	??_I2C_WaitACK
  3339  017E  0871               	movf	??_I2C_WaitACK,w
  3340  017F  07F2               	addwf	I2C_WaitACK@time,f
  3341  0180                     l1422:
  3342                           
  3343                           ;newmain.c: 197:   if(time>250) {I2C_Stop(); return 1;}
  3344  0180  30FB               	movlw	251
  3345  0181  0272               	subwf	I2C_WaitACK@time,w
  3346  0182  1C03               	skipc
  3347  0183  2985               	goto	u781
  3348  0184  2986               	goto	u780
  3349  0185                     u781:
  3350  0185  298D               	goto	l72
  3351  0186                     u780:
  3352  0186                     l1424:
  3353  0186  120A  118A  20FF  120A  118A  	fcall	_I2C_Stop
  3354  018B                     l1426:
  3355  018B  3001               	movlw	1
  3356  018C  2995               	goto	l75
  3357  018D                     l72:	
  3358                           ;newmain.c: 198:  }
  3359                           
  3360                           
  3361                           ;newmain.c: 195:  while(PORTDbits.RD1){
  3362  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3363  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3364  018F  1888               	btfsc	8,1	;volatile
  3365  0190  2992               	goto	u791
  3366  0191  2993               	goto	u790
  3367  0192                     u791:
  3368  0192  297C               	goto	l1420
  3369  0193                     u790:
  3370  0193                     l76:
  3371                           
  3372                           ;newmain.c: 199:  PORTDbits.RD0 = 0;
  3373  0193  1008               	bcf	8,0	;volatile
  3374  0194                     l1430:
  3375                           
  3376                           ;newmain.c: 200:  return 0;
  3377  0194  3000               	movlw	0
  3378  0195                     l75:
  3379  0195  0008               	return
  3380  0196                     __end_of_I2C_WaitACK:
  3381                           
  3382                           	psect	text16
  3383  00FF                     __ptext16:	
  3384 ;; *************** function _I2C_Stop *****************
  3385 ;; Defined at:
  3386 ;;		line 164 in file "newmain.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0
  3402 ;;      Temps:          1       0       0       0       0
  3403 ;;      Totals:         1       0       0       0       0
  3404 ;;Total ram usage:        1 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_I2C_WaitACK
  3410 ;;		_I2C_WriteMulti
  3411 ;;		_I2C_ReadMultiPointer
  3412 ;;		_I2C_ReadMulti
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _I2C_Stop
  3418  00FF                     _I2C_Stop:
  3419  00FF                     l1356:	
  3420                           ;incstack = 0
  3421                           ; Regs used in _I2C_Stop: [wreg]
  3422                           
  3423                           
  3424                           ;newmain.c: 166:     TRISDbits.TRISD1 = 0;
  3425  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  3426  0100  1303               	bcf	3,6	;RP1=0, select bank1
  3427  0101  1088               	bcf	8,1	;volatile
  3428                           
  3429                           ;newmain.c: 167:     PORTDbits.RD1 = 0;
  3430  0102  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0103  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0104  1088               	bcf	8,1	;volatile
  3433                           
  3434                           ;newmain.c: 168:     PORTDbits.RD0 = 0;
  3435  0105  1008               	bcf	8,0	;volatile
  3436  0106                     l1358:
  3437                           
  3438                           ;newmain.c: 169:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3439  0106  3006               	movlw	6
  3440  0107  00F0               	movwf	??_I2C_Stop
  3441  0108                     u1557:
  3442  0108  0BF0               	decfsz	??_I2C_Stop,f
  3443  0109  2908               	goto	u1557
  3444  010A  0000               	nop
  3445  010B                     l1360:
  3446                           
  3447                           ;newmain.c: 170:     PORTDbits.RD0 = 1;
  3448  010B  1283               	bcf	3,5	;RP0=0, select bank0
  3449  010C  1303               	bcf	3,6	;RP1=0, select bank0
  3450  010D  1408               	bsf	8,0	;volatile
  3451                           
  3452                           ;newmain.c: 171:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3453  010E  3006               	movlw	6
  3454  010F  00F0               	movwf	??_I2C_Stop
  3455  0110                     u1567:
  3456  0110  0BF0               	decfsz	??_I2C_Stop,f
  3457  0111  2910               	goto	u1567
  3458  0112  0000               	nop
  3459  0113                     l1362:
  3460                           
  3461                           ;newmain.c: 172:     PORTDbits.RD1 = 1;
  3462  0113  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0114  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0115  1488               	bsf	8,1	;volatile
  3465  0116                     l64:
  3466  0116  0008               	return
  3467  0117                     __end_of_I2C_Stop:
  3468                           
  3469                           	psect	text17
  3470  00E7                     __ptext17:	
  3471 ;; *************** function _I2C_Start *****************
  3472 ;; Defined at:
  3473 ;;		line 154 in file "newmain.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0
  3489 ;;      Temps:          1       0       0       0       0
  3490 ;;      Totals:         1       0       0       0       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_I2C_WriteMulti
  3497 ;;		_I2C_ReadMultiPointer
  3498 ;;		_I2C_ReadMulti
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           
  3503                           ;psect for function _I2C_Start
  3504  00E7                     _I2C_Start:
  3505  00E7                     l1380:	
  3506                           ;incstack = 0
  3507                           ; Regs used in _I2C_Start: [wreg]
  3508                           
  3509                           
  3510                           ;newmain.c: 156:     TRISDbits.TRISD1 = 0;
  3511  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  3512  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  3513  00E9  1088               	bcf	8,1	;volatile
  3514                           
  3515                           ;newmain.c: 157:     PORTDbits.RD1 = 1;
  3516  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  3517  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  3518  00EC  1488               	bsf	8,1	;volatile
  3519                           
  3520                           ;newmain.c: 158:     PORTDbits.RD0 = 1;
  3521  00ED  1408               	bsf	8,0	;volatile
  3522  00EE                     l1382:
  3523                           
  3524                           ;newmain.c: 159:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3525  00EE  3006               	movlw	6
  3526  00EF  00F0               	movwf	??_I2C_Start
  3527  00F0                     u1577:
  3528  00F0  0BF0               	decfsz	??_I2C_Start,f
  3529  00F1  28F0               	goto	u1577
  3530  00F2  0000               	nop
  3531  00F3                     l1384:
  3532                           
  3533                           ;newmain.c: 160:     PORTDbits.RD1 = 0;
  3534  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3535  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  3536  00F5  1088               	bcf	8,1	;volatile
  3537                           
  3538                           ;newmain.c: 161:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  3539  00F6  3006               	movlw	6
  3540  00F7  00F0               	movwf	??_I2C_Start
  3541  00F8                     u1587:
  3542  00F8  0BF0               	decfsz	??_I2C_Start,f
  3543  00F9  28F8               	goto	u1587
  3544  00FA  0000               	nop
  3545  00FB                     l1386:
  3546                           
  3547                           ;newmain.c: 162:     PORTDbits.RD0 = 0;
  3548  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  3549  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  3550  00FD  1008               	bcf	8,0	;volatile
  3551  00FE                     l61:
  3552  00FE  0008               	return
  3553  00FF                     __end_of_I2C_Start:
  3554                           
  3555                           	psect	text18
  3556  0265                     __ptext18:	
  3557 ;; *************** function _I2C_Read *****************
  3558 ;; Defined at:
  3559 ;;		line 222 in file "newmain.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  ACK             1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  ACK             1    2[COMMON] unsigned char 
  3564 ;;  i               1    4[COMMON] unsigned char 
  3565 ;;  Rvalue          1    3[COMMON] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      unsigned char 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       0       0       0       0
  3576 ;;      Locals:         3       0       0       0       0
  3577 ;;      Temps:          1       0       0       0       0
  3578 ;;      Totals:         4       0       0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 1
  3582 ;; This function calls:
  3583 ;;		_I2C_ACK
  3584 ;;		_I2C_NACK
  3585 ;; This function is called by:
  3586 ;;		_I2C_ReadMultiPointer
  3587 ;;		_I2C_ReadMulti
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _I2C_Read
  3593  0265                     _I2C_Read:
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3597                           ;I2C_Read@ACK stored from wreg
  3598  0265  00F2               	movwf	I2C_Read@ACK
  3599  0266                     l1434:
  3600  0266  01F3               	clrf	I2C_Read@Rvalue
  3601  0267                     l1436:
  3602                           
  3603                           ;newmain.c: 225:  TRISDbits.TRISD1 = 1;
  3604  0267  1683               	bsf	3,5	;RP0=1, select bank1
  3605  0268  1303               	bcf	3,6	;RP1=0, select bank1
  3606  0269  1488               	bsf	8,1	;volatile
  3607                           
  3608                           ;newmain.c: 226:  for(i=0;i<8;i++)
  3609  026A  01F4               	clrf	I2C_Read@i
  3610  026B                     l85:
  3611                           
  3612                           ;newmain.c: 227:     {;newmain.c: 228:   PORTDbits.RD0=0;
  3613  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3614  026C  1008               	bcf	8,0	;volatile
  3615  026D                     l1442:
  3616                           
  3617                           ;newmain.c: 229:   _delay((unsigned long)((2)*(20000000/4000000.0)));
  3618  026D  3003               	movlw	3
  3619  026E  00F1               	movwf	??_I2C_Read
  3620  026F                     u1597:
  3621  026F  0BF1               	decfsz	??_I2C_Read,f
  3622  0270  2A6F               	goto	u1597
  3623  0271                     l1444:
  3624                           
  3625                           ;newmain.c: 230:   PORTDbits.RD0=1;
  3626  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0273  1408               	bsf	8,0	;volatile
  3629                           
  3630                           ;newmain.c: 231:   _delay((unsigned long)((2)*(20000000/4000000.0)));
  3631  0274  3003               	movlw	3
  3632  0275  00F1               	movwf	??_I2C_Read
  3633  0276                     u1607:
  3634  0276  0BF1               	decfsz	??_I2C_Read,f
  3635  0277  2A76               	goto	u1607
  3636                           
  3637                           ;newmain.c: 232:   Rvalue<<=1;
  3638  0278  1003               	clrc
  3639  0279  0DF3               	rlf	I2C_Read@Rvalue,f
  3640  027A                     l1446:
  3641                           
  3642                           ;newmain.c: 233:   if(PORTDbits.RD1) Rvalue++;
  3643  027A  1283               	bcf	3,5	;RP0=0, select bank0
  3644  027B  1303               	bcf	3,6	;RP1=0, select bank0
  3645  027C  1C88               	btfss	8,1	;volatile
  3646  027D  2A7F               	goto	u801
  3647  027E  2A80               	goto	u800
  3648  027F                     u801:
  3649  027F  2A84               	goto	l87
  3650  0280                     u800:
  3651  0280                     l1448:
  3652  0280  3001               	movlw	1
  3653  0281  00F1               	movwf	??_I2C_Read
  3654  0282  0871               	movf	??_I2C_Read,w
  3655  0283  07F3               	addwf	I2C_Read@Rvalue,f
  3656  0284                     l87:
  3657                           
  3658                           ;newmain.c: 234:  }
  3659  0284  3001               	movlw	1
  3660  0285  00F1               	movwf	??_I2C_Read
  3661  0286  0871               	movf	??_I2C_Read,w
  3662  0287  07F4               	addwf	I2C_Read@i,f
  3663  0288                     l1450:
  3664  0288  3008               	movlw	8
  3665  0289  0274               	subwf	I2C_Read@i,w
  3666  028A  1C03               	skipc
  3667  028B  2A8D               	goto	u811
  3668  028C  2A8E               	goto	u810
  3669  028D                     u811:
  3670  028D  2A6B               	goto	l85
  3671  028E                     u810:
  3672  028E                     l1452:
  3673                           
  3674                           ;newmain.c: 235:  if(!ACK)
  3675  028E  0872               	movf	I2C_Read@ACK,w
  3676  028F  1D03               	btfss	3,2
  3677  0290  2A92               	goto	u821
  3678  0291  2A93               	goto	u820
  3679  0292                     u821:
  3680  0292  2A99               	goto	l1456
  3681  0293                     u820:
  3682  0293                     l1454:
  3683                           
  3684                           ;newmain.c: 236:     {;newmain.c: 237:   I2C_ACK();
  3685  0293  120A  118A  20B7  120A  118A  	fcall	_I2C_ACK
  3686                           
  3687                           ;newmain.c: 238:  }
  3688  0298  2A9E               	goto	l1458
  3689  0299                     l1456:
  3690                           
  3691                           ;newmain.c: 240:     {;newmain.c: 241:   I2C_NACK();
  3692  0299  120A  118A  20CF  120A  118A  	fcall	_I2C_NACK
  3693  029E                     l1458:
  3694                           
  3695                           ;newmain.c: 243:     return Rvalue;
  3696  029E  0873               	movf	I2C_Read@Rvalue,w
  3697  029F                     l90:
  3698  029F  0008               	return
  3699  02A0                     __end_of_I2C_Read:
  3700                           
  3701                           	psect	text19
  3702  00CF                     __ptext19:	
  3703 ;; *************** function _I2C_NACK *****************
  3704 ;; Defined at:
  3705 ;;		line 212 in file "newmain.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          1       0       0       0       0
  3722 ;;      Totals:         1       0       0       0       0
  3723 ;;Total ram usage:        1 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_I2C_Read
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _I2C_NACK
  3734  00CF                     _I2C_NACK:
  3735  00CF                     l1372:	
  3736                           ;incstack = 0
  3737                           ; Regs used in _I2C_NACK: [wreg]
  3738                           
  3739                           
  3740                           ;newmain.c: 214:     PORTDbits.RD0 = 0;
  3741  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  3742  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  3743  00D1  1008               	bcf	8,0	;volatile
  3744                           
  3745                           ;newmain.c: 215:     TRISDbits.TRISD1 = 0;
  3746  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  3747  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  3748  00D4  1088               	bcf	8,1	;volatile
  3749                           
  3750                           ;newmain.c: 216:  PORTDbits.RD1 = 1;
  3751  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  3752  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  3753  00D7  1488               	bsf	8,1	;volatile
  3754  00D8                     l1374:
  3755                           
  3756                           ;newmain.c: 217:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  3757  00D8  3003               	movlw	3
  3758  00D9  00F0               	movwf	??_I2C_NACK
  3759  00DA                     u1617:
  3760  00DA  0BF0               	decfsz	??_I2C_NACK,f
  3761  00DB  28DA               	goto	u1617
  3762  00DC                     l1376:
  3763                           
  3764                           ;newmain.c: 218:  PORTDbits.RD0 = 1;
  3765  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  3766  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  3767  00DE  1408               	bsf	8,0	;volatile
  3768                           
  3769                           ;newmain.c: 219:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  3770  00DF  3003               	movlw	3
  3771  00E0  00F0               	movwf	??_I2C_NACK
  3772  00E1                     u1627:
  3773  00E1  0BF0               	decfsz	??_I2C_NACK,f
  3774  00E2  28E1               	goto	u1627
  3775  00E3                     l1378:
  3776                           
  3777                           ;newmain.c: 220:  PORTDbits.RD0 = 0;
  3778  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  3779  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  3780  00E5  1008               	bcf	8,0	;volatile
  3781  00E6                     l82:
  3782  00E6  0008               	return
  3783  00E7                     __end_of_I2C_NACK:
  3784                           
  3785                           	psect	text20
  3786  00B7                     __ptext20:	
  3787 ;; *************** function _I2C_ACK *****************
  3788 ;; Defined at:
  3789 ;;		line 202 in file "newmain.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3803 ;;      Params:         0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0
  3805 ;;      Temps:          1       0       0       0       0
  3806 ;;      Totals:         1       0       0       0       0
  3807 ;;Total ram usage:        1 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_I2C_Read
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _I2C_ACK
  3818  00B7                     _I2C_ACK:
  3819  00B7                     l1364:	
  3820                           ;incstack = 0
  3821                           ; Regs used in _I2C_ACK: [wreg]
  3822                           
  3823                           
  3824                           ;newmain.c: 204:     PORTDbits.RD0 = 0;
  3825  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  3826  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  3827  00B9  1008               	bcf	8,0	;volatile
  3828                           
  3829                           ;newmain.c: 205:     TRISDbits.TRISD1 = 0;
  3830  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3831  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  3832  00BC  1088               	bcf	8,1	;volatile
  3833                           
  3834                           ;newmain.c: 206:  PORTDbits.RD1 = 0;
  3835  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  3836  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  3837  00BF  1088               	bcf	8,1	;volatile
  3838  00C0                     l1366:
  3839                           
  3840                           ;newmain.c: 207:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  3841  00C0  3003               	movlw	3
  3842  00C1  00F0               	movwf	??_I2C_ACK
  3843  00C2                     u1637:
  3844  00C2  0BF0               	decfsz	??_I2C_ACK,f
  3845  00C3  28C2               	goto	u1637
  3846  00C4                     l1368:
  3847                           
  3848                           ;newmain.c: 208:  PORTDbits.RD0 = 1;
  3849  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3850  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3851  00C6  1408               	bsf	8,0	;volatile
  3852                           
  3853                           ;newmain.c: 209:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  3854  00C7  3003               	movlw	3
  3855  00C8  00F0               	movwf	??_I2C_ACK
  3856  00C9                     u1647:
  3857  00C9  0BF0               	decfsz	??_I2C_ACK,f
  3858  00CA  28C9               	goto	u1647
  3859  00CB                     l1370:
  3860                           
  3861                           ;newmain.c: 210:  PORTDbits.RD0 = 0;
  3862  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  3863  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  3864  00CD  1008               	bcf	8,0	;volatile
  3865  00CE                     l79:
  3866  00CE  0008               	return
  3867  00CF                     __end_of_I2C_ACK:
  3868                           
  3869                           	psect	text21
  3870  00A0                     __ptext21:	
  3871 ;; *************** function _LCD_String *****************
  3872 ;; Defined at:
  3873 ;;		line 118 in file "newmain.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  str             1    wreg     PTR unsigned char 
  3876 ;;		 -> main@ds(16), 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  str             1    4[COMMON] PTR unsigned char 
  3879 ;;		 -> main@ds(16), 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         0       0       0       0       0
  3890 ;;      Locals:         1       0       0       0       0
  3891 ;;      Temps:          1       0       0       0       0
  3892 ;;      Totals:         2       0       0       0       0
  3893 ;;Total ram usage:        2 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 1
  3896 ;; This function calls:
  3897 ;;		_LCD_Char
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;;		_LCD_GotoCursor_String
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _LCD_String
  3906  00A0                     _LCD_String:
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3910                           ;LCD_String@str stored from wreg
  3911  00A0  00F4               	movwf	LCD_String@str
  3912  00A1                     l1744:
  3913                           
  3914                           ;newmain.c: 118: void LCD_String(char *str);newmain.c: 119: {;newmain.c: 120:  while(*st
      +                          r)
  3915  00A1  28AE               	goto	l1750
  3916  00A2                     l1746:
  3917                           
  3918                           ;newmain.c: 121:  {;newmain.c: 122:   LCD_Char(*str++);
  3919  00A2  0874               	movf	LCD_String@str,w
  3920  00A3  0084               	movwf	4
  3921  00A4  0800               	movf	0,w
  3922  00A5  120A  118A  214B  120A  118A  	fcall	_LCD_Char
  3923  00AA                     l1748:
  3924  00AA  3001               	movlw	1
  3925  00AB  00F3               	movwf	??_LCD_String
  3926  00AC  0873               	movf	??_LCD_String,w
  3927  00AD  07F4               	addwf	LCD_String@str,f
  3928  00AE                     l1750:
  3929                           
  3930                           ;newmain.c: 120:  while(*str)
  3931  00AE  0874               	movf	LCD_String@str,w
  3932  00AF  0084               	movwf	4
  3933  00B0  1383               	bcf	3,7	;select IRP bank0
  3934  00B1  0800               	movf	0,w
  3935  00B2  1D03               	btfss	3,2
  3936  00B3  28B5               	goto	u1321
  3937  00B4  28B6               	goto	u1320
  3938  00B5                     u1321:
  3939  00B5  28A2               	goto	l1746
  3940  00B6                     u1320:
  3941  00B6                     l34:
  3942  00B6  0008               	return
  3943  00B7                     __end_of_LCD_String:
  3944                           
  3945                           	psect	text22
  3946  014B                     __ptext22:	
  3947 ;; *************** function _LCD_Char *****************
  3948 ;; Defined at:
  3949 ;;		line 107 in file "newmain.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  c               1    wreg     unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  c               1    2[COMMON] unsigned char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         1       0       0       0       0
  3965 ;;      Temps:          2       0       0       0       0
  3966 ;;      Totals:         3       0       0       0       0
  3967 ;;Total ram usage:        3 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_LCD_String
  3973 ;;		_LCD_GotoCursor_Char
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _LCD_Char
  3979  014B                     _LCD_Char:
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3983                           ;LCD_Char@c stored from wreg
  3984  014B  00F2               	movwf	LCD_Char@c
  3985  014C                     l1588:
  3986                           
  3987                           ;newmain.c: 107: void LCD_Char(unsigned char c);newmain.c: 108: {;newmain.c: 109:  PORTB
      +                          bits.RB0 = 1;
  3988  014C  1283               	bcf	3,5	;RP0=0, select bank0
  3989  014D  1303               	bcf	3,6	;RP1=0, select bank0
  3990  014E  1406               	bsf	6,0	;volatile
  3991  014F                     l1590:
  3992                           
  3993                           ;newmain.c: 110:  PORTB = c | 0x01;
  3994  014F  0872               	movf	LCD_Char@c,w
  3995  0150  3801               	iorlw	1
  3996  0151  0086               	movwf	6	;volatile
  3997  0152                     l1592:
  3998                           
  3999                           ;newmain.c: 111:  PORTBbits.RB1 = 1;
  4000  0152  1486               	bsf	6,1	;volatile
  4001  0153                     l1594:
  4002                           
  4003                           ;newmain.c: 112:  PORTBbits.RB1 = 0;
  4004  0153  1086               	bcf	6,1	;volatile
  4005  0154                     l1596:
  4006                           
  4007                           ;newmain.c: 113:     PORTB = (c << 4) | 0x01;
  4008  0154  0872               	movf	LCD_Char@c,w
  4009  0155  00F0               	movwf	??_LCD_Char
  4010  0156  3003               	movlw	3
  4011  0157                     u1065:
  4012  0157  1003               	clrc
  4013  0158  0DF0               	rlf	??_LCD_Char,f
  4014  0159  3EFF               	addlw	-1
  4015  015A  1D03               	skipz
  4016  015B  2957               	goto	u1065
  4017  015C  1003               	clrc
  4018  015D  0D70               	rlf	??_LCD_Char,w
  4019  015E  3801               	iorlw	1
  4020  015F  0086               	movwf	6	;volatile
  4021  0160                     l1598:
  4022                           
  4023                           ;newmain.c: 114:  PORTBbits.RB1 = 1;
  4024  0160  1486               	bsf	6,1	;volatile
  4025  0161                     l1600:
  4026                           
  4027                           ;newmain.c: 115:  PORTBbits.RB1 = 0;
  4028  0161  1086               	bcf	6,1	;volatile
  4029  0162                     l1602:
  4030                           
  4031                           ;newmain.c: 116:  _delay((unsigned long)((1)*(20000000/4000.0)));
  4032  0162  3007               	movlw	7
  4033  0163  00F1               	movwf	??_LCD_Char+1
  4034  0164  307D               	movlw	125
  4035  0165  00F0               	movwf	??_LCD_Char
  4036  0166                     u1657:
  4037  0166  0BF0               	decfsz	??_LCD_Char,f
  4038  0167  2966               	goto	u1657
  4039  0168  0BF1               	decfsz	??_LCD_Char+1,f
  4040  0169  2966               	goto	u1657
  4041  016A                     l28:
  4042  016A  0008               	return
  4043  016B                     __end_of_LCD_Char:
  4044                           
  4045                           	psect	text23
  4046  02A0                     __ptext23:	
  4047 ;; *************** function _LCD_Init *****************
  4048 ;; Defined at:
  4049 ;;		line 72 in file "newmain.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0
  4065 ;;      Temps:          2       0       0       0       0
  4066 ;;      Totals:         2       0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 1
  4070 ;; This function calls:
  4071 ;;		_LCD_Cmd
  4072 ;;		_LCD_Cmd_Init
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _LCD_Init
  4080  02A0                     _LCD_Init:
  4081  02A0                     l1724:	
  4082                           ;incstack = 0
  4083                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4084                           
  4085                           
  4086                           ;newmain.c: 74:     TRISB = 0;
  4087  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  4088  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  4089  02A2  0186               	clrf	6	;volatile
  4090  02A3                     l1726:
  4091                           
  4092                           ;newmain.c: 77:  LCD_Cmd_Init(0x30);
  4093  02A3  3030               	movlw	48
  4094  02A4  120A  158A  27F1  120A  118A  	fcall	_LCD_Cmd_Init
  4095  02A9                     l1728:
  4096                           
  4097                           ;newmain.c: 78:  _delay((unsigned long)((5)*(20000000/4000.0)));
  4098  02A9  3021               	movlw	33
  4099  02AA  00F4               	movwf	??_LCD_Init+1
  4100  02AB  3076               	movlw	118
  4101  02AC  00F3               	movwf	??_LCD_Init
  4102  02AD                     u1667:
  4103  02AD  0BF3               	decfsz	??_LCD_Init,f
  4104  02AE  2AAD               	goto	u1667
  4105  02AF  0BF4               	decfsz	??_LCD_Init+1,f
  4106  02B0  2AAD               	goto	u1667
  4107  02B1  0000               	nop
  4108  02B2                     l1730:
  4109                           
  4110                           ;newmain.c: 79:  LCD_Cmd_Init(0x30);
  4111  02B2  3030               	movlw	48
  4112  02B3  120A  158A  27F1  120A  118A  	fcall	_LCD_Cmd_Init
  4113  02B8                     l1732:
  4114                           
  4115                           ;newmain.c: 80:  _delay((unsigned long)((1)*(20000000/4000.0)));
  4116  02B8  3007               	movlw	7
  4117  02B9  00F4               	movwf	??_LCD_Init+1
  4118  02BA  307D               	movlw	125
  4119  02BB  00F3               	movwf	??_LCD_Init
  4120  02BC                     u1677:
  4121  02BC  0BF3               	decfsz	??_LCD_Init,f
  4122  02BD  2ABC               	goto	u1677
  4123  02BE  0BF4               	decfsz	??_LCD_Init+1,f
  4124  02BF  2ABC               	goto	u1677
  4125  02C0                     l1734:
  4126                           
  4127                           ;newmain.c: 81:  LCD_Cmd_Init(0x30);
  4128  02C0  3030               	movlw	48
  4129  02C1  120A  158A  27F1  120A  118A  	fcall	_LCD_Cmd_Init
  4130  02C6                     l1736:
  4131                           
  4132                           ;newmain.c: 85:     LCD_Cmd_Init(0x28);
  4133  02C6  3028               	movlw	40
  4134  02C7  120A  158A  27F1  120A  118A  	fcall	_LCD_Cmd_Init
  4135  02CC                     l1738:
  4136                           
  4137                           ;newmain.c: 88:  LCD_Cmd(0x28);
  4138  02CC  3028               	movlw	40
  4139  02CD  120A  118A  2196  120A  118A  	fcall	_LCD_Cmd
  4140  02D2                     l1740:
  4141                           
  4142                           ;newmain.c: 99:  LCD_Cmd(0x01);
  4143  02D2  3001               	movlw	1
  4144  02D3  120A  118A  2196  120A  118A  	fcall	_LCD_Cmd
  4145  02D8                     l1742:
  4146                           
  4147                           ;newmain.c: 105:     LCD_Cmd(0x0C);
  4148  02D8  300C               	movlw	12
  4149  02D9  120A  118A  2196  120A  118A  	fcall	_LCD_Cmd
  4150  02DE                     l25:
  4151  02DE  0008               	return
  4152  02DF                     __end_of_LCD_Init:
  4153                           
  4154                           	psect	text24
  4155  0FF1                     __ptext24:	
  4156 ;; *************** function _LCD_Cmd_Init *****************
  4157 ;; Defined at:
  4158 ;;		line 64 in file "newmain.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  cmd             1    wreg     unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  cmd             1    1[COMMON] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         0       0       0       0       0
  4173 ;;      Locals:         1       0       0       0       0
  4174 ;;      Temps:          1       0       0       0       0
  4175 ;;      Totals:         2       0       0       0       0
  4176 ;;Total ram usage:        2 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_LCD_Init
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function _LCD_Cmd_Init
  4187  0FF1                     _LCD_Cmd_Init:
  4188                           
  4189                           ;incstack = 0
  4190                           ; Regs used in _LCD_Cmd_Init: [wreg+status,2]
  4191                           ;LCD_Cmd_Init@cmd stored from wreg
  4192  0FF1  00F1               	movwf	LCD_Cmd_Init@cmd
  4193  0FF2                     l1578:
  4194                           
  4195                           ;newmain.c: 64: void LCD_Cmd_Init(unsigned char cmd);newmain.c: 65: {;newmain.c: 66:  PO
      +                          RTBbits.RB0 = 0;
  4196  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  4198  0FF4  1006               	bcf	6,0	;volatile
  4199  0FF5                     l1580:
  4200                           
  4201                           ;newmain.c: 67:  PORTB = cmd & 0xF0 ;
  4202  0FF5  0871               	movf	LCD_Cmd_Init@cmd,w
  4203  0FF6  39F0               	andlw	240
  4204  0FF7  0086               	movwf	6	;volatile
  4205  0FF8                     l1582:
  4206                           
  4207                           ;newmain.c: 68:  PORTBbits.RB1 = 1;
  4208  0FF8  1486               	bsf	6,1	;volatile
  4209  0FF9                     l1584:
  4210                           
  4211                           ;newmain.c: 69:  PORTBbits.RB1 = 0;
  4212  0FF9  1086               	bcf	6,1	;volatile
  4213  0FFA                     l1586:
  4214                           
  4215                           ;newmain.c: 70:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  4216  0FFA  3042               	movlw	66
  4217  0FFB  00F0               	movwf	??_LCD_Cmd_Init
  4218  0FFC                     u1687:
  4219  0FFC  0BF0               	decfsz	??_LCD_Cmd_Init,f
  4220  0FFD  2FFC               	goto	u1687
  4221  0FFE  0000               	nop
  4222  0FFF                     l22:
  4223  0FFF  0008               	return
  4224  1000                     __end_of_LCD_Cmd_Init:
  4225                           
  4226                           	psect	text25
  4227  012F                     __ptext25:	
  4228 ;; *************** function _LCD_GotoCursor *****************
  4229 ;; Defined at:
  4230 ;;		line 125 in file "newmain.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  row             1    wreg     unsigned char 
  4233 ;;  col             1    3[COMMON] unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  row             1    5[COMMON] unsigned char 
  4236 ;;  cmd             1    8[COMMON] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, pclath, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         1       0       0       0       0
  4247 ;;      Locals:         4       0       0       0       0
  4248 ;;      Temps:          1       0       0       0       0
  4249 ;;      Totals:         6       0       0       0       0
  4250 ;;Total ram usage:        6 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 1
  4253 ;; This function calls:
  4254 ;;		_LCD_Cmd
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _LCD_GotoCursor
  4262  012F                     _LCD_GotoCursor:
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _LCD_GotoCursor: [wreg+status,2+status,0+pclath+cstack]
  4266                           ;LCD_GotoCursor@row stored from wreg
  4267  012F  00F5               	movwf	LCD_GotoCursor@row
  4268  0130                     l1752:
  4269                           
  4270                           ;newmain.c: 125: void LCD_GotoCursor(unsigned char row, unsigned char col);newmain.c: 12
      +                          6: {;newmain.c: 127:  unsigned char cmd;;newmain.c: 128:  cmd = (row==1?0x80:0xC0) + col
      +                           - 1;
  4271  0130  0375               	decf	LCD_GotoCursor@row,w
  4272  0131  1903               	btfsc	3,2
  4273  0132  2934               	goto	u1331
  4274  0133  2935               	goto	u1330
  4275  0134                     u1331:
  4276  0134  293A               	goto	l1756
  4277  0135                     u1330:
  4278  0135                     l1754:
  4279  0135  30C0               	movlw	192
  4280  0136  00F6               	movwf	_LCD_GotoCursor$123
  4281  0137  3000               	movlw	0
  4282  0138  00F7               	movwf	_LCD_GotoCursor$123+1
  4283  0139  293E               	goto	l1758
  4284  013A                     l1756:
  4285  013A  3080               	movlw	128
  4286  013B  00F6               	movwf	_LCD_GotoCursor$123
  4287  013C  3000               	movlw	0
  4288  013D  00F7               	movwf	_LCD_GotoCursor$123+1
  4289  013E                     l1758:
  4290  013E  0873               	movf	LCD_GotoCursor@col,w
  4291  013F  0776               	addwf	_LCD_GotoCursor$123,w
  4292  0140  3EFF               	addlw	255
  4293  0141  00F4               	movwf	??_LCD_GotoCursor
  4294  0142  0874               	movf	??_LCD_GotoCursor,w
  4295  0143  00F8               	movwf	LCD_GotoCursor@cmd
  4296  0144                     l1760:
  4297                           
  4298                           ;newmain.c: 129:  LCD_Cmd(cmd);
  4299  0144  0878               	movf	LCD_GotoCursor@cmd,w
  4300  0145  120A  118A  2196  120A  118A  	fcall	_LCD_Cmd
  4301  014A                     l41:
  4302  014A  0008               	return
  4303  014B                     __end_of_LCD_GotoCursor:
  4304                           
  4305                           	psect	text26
  4306  0196                     __ptext26:	
  4307 ;; *************** function _LCD_Cmd *****************
  4308 ;; Defined at:
  4309 ;;		line 46 in file "newmain.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  cmd             1    wreg     unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  cmd             1    2[COMMON] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0
  4324 ;;      Locals:         1       0       0       0       0
  4325 ;;      Temps:          2       0       0       0       0
  4326 ;;      Totals:         3       0       0       0       0
  4327 ;;Total ram usage:        3 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_LCD_Init
  4333 ;;		_LCD_GotoCursor
  4334 ;;		_LCD_GotoCursor_Char
  4335 ;;		_LCD_GotoCursor_String
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _LCD_Cmd
  4341  0196                     _LCD_Cmd:
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
  4345                           ;LCD_Cmd@cmd stored from wreg
  4346  0196  00F2               	movwf	LCD_Cmd@cmd
  4347  0197                     l1558:
  4348                           
  4349                           ;newmain.c: 46: void LCD_Cmd(unsigned char cmd);newmain.c: 47: {;newmain.c: 48:  PORTBbi
      +                          ts.RB0 = 0;
  4350  0197  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0198  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0199  1006               	bcf	6,0	;volatile
  4353  019A                     l1560:
  4354                           
  4355                           ;newmain.c: 49:  PORTB = cmd & 0xF0;
  4356  019A  0872               	movf	LCD_Cmd@cmd,w
  4357  019B  39F0               	andlw	240
  4358  019C  0086               	movwf	6	;volatile
  4359  019D                     l1562:
  4360                           
  4361                           ;newmain.c: 50:  PORTBbits.RB1 = 1;
  4362  019D  1486               	bsf	6,1	;volatile
  4363  019E                     l1564:
  4364                           
  4365                           ;newmain.c: 51:  PORTBbits.RB1 = 0;
  4366  019E  1086               	bcf	6,1	;volatile
  4367  019F                     l1566:
  4368                           
  4369                           ;newmain.c: 52:     PORTB = cmd << 4;
  4370  019F  0872               	movf	LCD_Cmd@cmd,w
  4371  01A0  00F0               	movwf	??_LCD_Cmd
  4372  01A1  3003               	movlw	3
  4373  01A2                     u1045:
  4374  01A2  1003               	clrc
  4375  01A3  0DF0               	rlf	??_LCD_Cmd,f
  4376  01A4  3EFF               	addlw	-1
  4377  01A5  1D03               	skipz
  4378  01A6  29A2               	goto	u1045
  4379  01A7  1003               	clrc
  4380  01A8  0D70               	rlf	??_LCD_Cmd,w
  4381  01A9  0086               	movwf	6	;volatile
  4382  01AA                     l1568:
  4383                           
  4384                           ;newmain.c: 53:  PORTBbits.RB1 = 1;
  4385  01AA  1486               	bsf	6,1	;volatile
  4386  01AB                     l1570:
  4387                           
  4388                           ;newmain.c: 54:  PORTBbits.RB1 = 0;
  4389  01AB  1086               	bcf	6,1	;volatile
  4390  01AC                     l1572:
  4391                           
  4392                           ;newmain.c: 55:  if( cmd <= 0x02)
  4393  01AC  3003               	movlw	3
  4394  01AD  0272               	subwf	LCD_Cmd@cmd,w
  4395  01AE  1803               	skipnc
  4396  01AF  29B1               	goto	u1051
  4397  01B0  29B2               	goto	u1050
  4398  01B1                     u1051:
  4399  01B1  29BC               	goto	l1576
  4400  01B2                     u1050:
  4401  01B2                     l1574:
  4402                           
  4403                           ;newmain.c: 56:  {;newmain.c: 57:   _delay((unsigned long)((2)*(20000000/4000.0)));
  4404  01B2  300D               	movlw	13
  4405  01B3  00F1               	movwf	??_LCD_Cmd+1
  4406  01B4  30FB               	movlw	251
  4407  01B5  00F0               	movwf	??_LCD_Cmd
  4408  01B6                     u1697:
  4409  01B6  0BF0               	decfsz	??_LCD_Cmd,f
  4410  01B7  29B6               	goto	u1697
  4411  01B8  0BF1               	decfsz	??_LCD_Cmd+1,f
  4412  01B9  29B6               	goto	u1697
  4413  01BA  29BB               	nop2
  4414                           
  4415                           ;newmain.c: 58:  }
  4416  01BB  29C4               	goto	l19
  4417  01BC                     l1576:
  4418                           
  4419                           ;newmain.c: 60:  {;newmain.c: 61:   _delay((unsigned long)((1)*(20000000/4000.0)));
  4420  01BC  3007               	movlw	7
  4421  01BD  00F1               	movwf	??_LCD_Cmd+1
  4422  01BE  307D               	movlw	125
  4423  01BF  00F0               	movwf	??_LCD_Cmd
  4424  01C0                     u1707:
  4425  01C0  0BF0               	decfsz	??_LCD_Cmd,f
  4426  01C1  29C0               	goto	u1707
  4427  01C2  0BF1               	decfsz	??_LCD_Cmd+1,f
  4428  01C3  29C0               	goto	u1707
  4429  01C4                     l19:
  4430  01C4  0008               	return
  4431  01C5                     __end_of_LCD_Cmd:
  4432                           
  4433                           	psect	text27
  4434  0FE8                     __ptext27:	
  4435 ;; *************** function _I2C_Init *****************
  4436 ;; Defined at:
  4437 ;;		line 147 in file "newmain.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		None
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _I2C_Init
  4466  0FE8                     _I2C_Init:
  4467  0FE8                     l1762:	
  4468                           ;incstack = 0
  4469                           ; Regs used in _I2C_Init: []
  4470                           
  4471                           
  4472                           ;newmain.c: 149:     TRISDbits.TRISD0 = 0;
  4473  0FE8  1683               	bsf	3,5	;RP0=1, select bank1
  4474  0FE9  1303               	bcf	3,6	;RP1=0, select bank1
  4475  0FEA  1008               	bcf	8,0	;volatile
  4476                           
  4477                           ;newmain.c: 150:     TRISDbits.TRISD1 = 0;
  4478  0FEB  1088               	bcf	8,1	;volatile
  4479                           
  4480                           ;newmain.c: 151:     PORTDbits.RD1 = 1;
  4481  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0FEE  1488               	bsf	8,1	;volatile
  4484                           
  4485                           ;newmain.c: 152:     PORTDbits.RD0 = 1;
  4486  0FEF  1408               	bsf	8,0	;volatile
  4487  0FF0                     l58:
  4488  0FF0  0008               	return
  4489  0FF1                     __end_of_I2C_Init:
  4490  007E                     btemp	set	126	;btemp
  4491  007E                     wtemp0	set	126
  4492                           
  4493                           	psect	config
  4494                           
  4495                           ;Config register CONFIG @ 0x2007
  4496                           ;	Oscillator Selection bits
  4497                           ;	FOSC = HS, HS oscillator
  4498                           ;	Watchdog Timer Enable bit
  4499                           ;	WDTE = OFF, WDT disabled
  4500                           ;	Power-up Timer Enable bit
  4501                           ;	PWRTE = OFF, PWRT disabled
  4502                           ;	Brown-out Reset Enable bit
  4503                           ;	BOREN = OFF, BOR disabled
  4504                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4505                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4506                           ;	Data EEPROM Memory Code Protection bit
  4507                           ;	CPD = OFF, Data EEPROM code protection off
  4508                           ;	Flash Program Memory Write Enable bits
  4509                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4510                           ;	In-Circuit Debugger Mode bit
  4511                           ;	DEBUG = 0x1, unprogrammed default
  4512                           ;	Flash Program Memory Code Protection bit
  4513                           ;	CP = OFF, Code protection off
  4514  2007                     	org	8199
  4515  2007  3F3A               	dw	16186

Data Sizes:
    Strings     64
    Constant    10
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_10(CODE[12]), STR_9(CODE[14]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), ?_sprintf(BANK0[2]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@ds(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    main@d	PTR unsigned char [8] size(1) Largest target is 4
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[3]), 

    main@F1024	PTR unsigned char [8] size(1) Largest target is 4
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[3]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> main@year(BANK0[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> main@month(BANK0[1]), 

    RTC_GetDateTime@date	PTR unsigned char  size(1) Largest target is 1
		 -> main@date(BANK0[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> main@day(BANK0[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> main@hour(BANK0[1]), 

    RTC_GetDateTime@minute	PTR unsigned char  size(1) Largest target is 1
		 -> main@minute(BANK0[1]), 

    RTC_GetDateTime@second	PTR unsigned char  size(1) Largest target is 1
		 -> main@second(BANK0[1]), 

    I2C_ReadMultiPointer@Rvalue	PTR unsigned char  size(1) Largest target is 7
		 -> RTC_GetDateTime@data(BANK0[7]), 

    I2C_WriteMulti@buff	PTR unsigned char  size(1) Largest target is 7
		 -> RTC_SetDateTime@data(BANK0[7]), 

    LCD_String@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@ds(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RTC_SetDateTime->_I2C_WriteMulti
    _RTC_Bin2Bcd->___awdiv
    _I2C_WriteMulti->_I2C_Write
    _RTC_GetDateTime->_I2C_ReadMultiPointer
    _RTC_Bcd2Bin->___bmul
    _I2C_ReadMultiPointer->_I2C_Read
    _I2C_WaitACK->_I2C_Stop
    _I2C_Read->_I2C_ACK
    _I2C_Read->_I2C_NACK
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Cmd
    _LCD_GotoCursor->_LCD_Cmd

Critical Paths under _main in BANK0

    _main->_RTC_SetDateTime
    _main->_sprintf
    _RTC_SetDateTime->_RTC_Bin2Bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    7451
                                             21 BANK0     38    38      0
                           _I2C_Init
                     _LCD_GotoCursor
                           _LCD_Init
                         _LCD_String
                    _RTC_GetDateTime
                    _RTC_SetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    18      9    1435
                                              0 BANK0     21    12      9
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                     16    10      6    3395
                                             11 COMMON     2     2      0
                                              7 BANK0     14     8      6
                     _I2C_WriteMulti
                        _RTC_Bin2Bcd
                    _RTC_CheckMinMax
 ---------------------------------------------------------------------------------
 (2) _RTC_CheckMinMax                                      3     1      2    1218
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _RTC_Bin2Bcd                                          8     8      0     944
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteMulti                                       7     4      3     455
                                              4 COMMON     7     4      3
                          _I2C_Start
                           _I2C_Stop
                        _I2C_WaitACK
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                     16    10      6    1590
                                             11 COMMON     2     2      0
                                              0 BANK0     14     8      6
               _I2C_ReadMultiPointer
                        _RTC_Bcd2Bin
 ---------------------------------------------------------------------------------
 (2) _RTC_Bcd2Bin                                          4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadMultiPointer                                 6     3      3     549
                                              5 COMMON     6     3      3
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                        _I2C_WaitACK
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            4     4      0      69
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (3) _I2C_WaitACK                                          2     2      0      24
                                              1 COMMON     2     2      0
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             4     4      0      94
                                              1 COMMON     4     4      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (4) _I2C_NACK                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2C_ACK                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     2      0     188
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      88
                                              3 COMMON     2     2      0
                            _LCD_Cmd
                       _LCD_Cmd_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd_Init                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_GotoCursor                                       6     5      1     309
                                              3 COMMON     6     5      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      66
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_GotoCursor
     _LCD_Cmd
   _LCD_Init
     _LCD_Cmd
     _LCD_Cmd_Init
   _LCD_String
     _LCD_Char
   _RTC_GetDateTime
     _I2C_ReadMultiPointer
       _I2C_Read
         _I2C_ACK
         _I2C_NACK
       _I2C_Start
       _I2C_Stop
       _I2C_WaitACK
         _I2C_Stop
       _I2C_Write
     _RTC_Bcd2Bin
       ___bmul
   _RTC_SetDateTime
     _I2C_WriteMulti
       _I2C_Start
       _I2C_Stop
       _I2C_WaitACK
       _I2C_Write
     _RTC_Bin2Bcd
       ___awdiv
       ___awmod
     _RTC_CheckMinMax
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 06 10:56:13 2022

                            pc 0002                  ?_LCD_Cmd_Init 0070                 ___bmul@product 0072  
           __size_of_I2C_Start 0018             __size_of_I2C_Write 002F                             l22 0FFF  
                           l41 014A                             l25 02DE                             l34 00B6  
                           l19 01C4                             l28 016A                             l61 00FE  
                           l64 0116                             l72 018D                             l58 0FF0  
                           l82 00E6                             l90 029F                             l75 0195  
                           l76 0193                             l85 026B                             l69 01F3  
                           l93 0397                             l79 00CE                             l87 0284  
                           l99 03E1                   ___awdiv@sign 0076                             fsr 0004  
                  ?_LCD_String 0070                            l121 053E                            l113 04DB  
                          l114 04F0                            l131 0077                            l124 012E  
                          l127 022A                            l136 04BF                            l139 05E7  
                          l421 0448                            l264 07ED                            l434 037B  
                          l540 0322                            l294 009F                            l550 0264  
                          u800 0280                            u801 027F                            u810 028E  
                          u811 028D                            u820 0293                            u821 0292  
                          u830 0091                            u910 0426                            u831 0090  
                          u911 0425                            u840 009E                            u841 009D  
                          u905 0416                            u770 01F3                            u930 043A  
                          u850 03E7                            u771 01F2                            u931 0439  
                          u915 0422                            u851 03E6                            u780 0186  
                          u940 043F                            u860 03F2                            u781 0185  
                          u765 01D0                            u941 043E                            u925 042E  
                          u861 03F1                            u790 0193                            u870 0403  
                          u950 0328                            u791 0192                            u871 0402  
                          u951 0327                            u960 0333                            u961 0332  
                          u890 0415                            u970 033E                            u891 0414  
                          u971 033D                            u885 0407                            u990 0350  
                          u991 034F                            u985 0342        __end_of_RTC_SetDateTime 05E8  
              __end_of_I2C_ACK 00CF                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0076           __size_of_I2C_WaitACK 002B              I2C_WriteMulti@len 0075  
            I2C_WriteMulti@reg 0074                __end_of_LCD_Cmd 01C5                           l1400 01E0  
                         l1410 016C                           l1402 01E1                           l1420 017C  
                         l1412 016F                           l1404 01E6                           l1500 0411  
                         l1430 0194                           l1422 0180                           l1414 0172  
                         l1406 01ED                           l1510 0434                           l1502 0415  
                         l1600 0161                           l1360 010B                           l1424 0186  
                         l1416 0175                           l1408 016B                           l1504 0426  
                         l1512 043A                           l1520 0323                           l1602 0162  
                         l1370 00CB                           l1450 0288                           l1442 026D  
                         l1434 0266                           l1362 0113                           l1426 018B  
                         l1418 0178                           l1610 03AC                           l1514 043F  
                         l1506 042C                           l1530 0333                           l1522 0324  
                         l1364 00B7                           l1372 00CF                           l1452 028E  
                         l1444 0271                           l1436 0267                           l1380 00E7  
                         l1356 00FF                           l1612 03AE                           l1620 03CD  
                         l1604 037D                           l1516 0444                           l1508 042D  
                         l1540 034C                           l1532 0338                           l1524 0328  
                         l1366 00C0                           l1374 00D8                           l1454 0293  
                         l1446 027A                           l1382 00EE                           l1358 0106  
                         l1390 01CC                           l1630 04EB                           l1470 0097  
                         l1462 008C                           l1622 03D3                           l1614 03BA  
                         l1606 0392                           l1542 0350                           l1534 033E  
                         l1550 036D                           l1526 032D                           l1710 023F  
                         l1702 022B                           l1560 019A                           l1368 00C4  
                         l1376 00DC                           l1456 0299                           l1448 0280  
                         l1384 00F3                           l1640 051D                           l1632 0506  
                         l1472 009E                           l1464 008D                           l1624 03D8  
                         l1616 03C4                           l1608 03A7                           l1480 03E7  
                         l1552 0372                           l1544 035A                           l1536 0341  
                         l1528 032F                           l1712 0243                           l1704 0231  
                         l1720 0260                           l1800 073E                           l1570 01AB  
                         l1562 019D                           l1730 02B2                           l1378 00E3  
                         l1458 029E                           l1386 00FB                           l1642 0529  
                         l1634 050B                           l1626 04C1                           l1466 0091  
                         l1650 0118                           l1618 03C9                           l1490 03FB  
                         l1482 03EC                           l1554 0377                           l1546 0360  
                         l1538 0348                           l1714 024D                           l1706 0234  
                         l1810 0757                           l1802 0746                           l1572 01AC  
                         l1564 019E                           l1580 0FF5                           l1740 02D2  
                         l1732 02B8                           l1724 02A0                           l1396 01CD  
                         l1388 01C6                           l1644 052D                           l1636 0510  
                         l1628 04D6                           l1468 0095                           l1492 03FD  
                         l1484 03EE                           l1476 03E2                           l1548 0367  
                         l1660 006C                           l1716 0253                           l1708 023B  
                         l1820 0775                           l1804 074A                           l1900 0609  
                         l1574 01B2                           l1566 019F                           l1558 0197  
                         l1582 0FF8                           l1742 02D8                           l1734 02C0  
                         l1726 02A3                           l1590 014F                           l1750 00AE  
                         l1398 01DE                           l1646 0530                           l1494 0403  
                         l1486 03F2                           l1478 03E3                           l1654 01F5  
                         l1718 025A                           l1830 0795                           l1822 077F  
                         l1806 074E                           l1910 0680                           l1902 0627  
                         l1576 01BC                           l1568 01AA                           l1760 0144  
                         l1752 0130                           l1584 0FF9                           l1736 02C6  
                         l1728 02A9                           l1592 0152                           l1744 00A1  
                         l1648 0535                           l1496 0406                           l1488 03F7  
                         l1672 0076                           l1680 02E7                           l1832 07C3  
                         l1824 0785                           l1816 0759                           l1808 0752  
                         l1840 07E9                           l1912 0688                           l1904 0647  
                         l1762 0FE8                           l1754 0135                           l1586 0FFA  
                         l1578 0FF2                           l1738 02CC                           l1594 0153  
                         l1746 00A2                           l1498 040D                           l1666 006E  
                         l1658 0066                           l1690 030A                           l1682 02EA  
                         l1834 07CA                           l1826 078C                           l1770 06C5  
                         l1914 06A9                           l1906 0672                           l1756 013A  
                         l1596 0154                           l1588 014C                           l1748 00AA  
                         l1764 044C                           l1668 0074                           l1692 0310  
                         l1684 02F1                           l1676 02DF                           l1836 07CE  
                         l1828 0790                           l1780 06DE                           l1772 06CA  
                         l1916 06AF                           l1908 067A                           l1758 013E  
                         l1598 0160                           l1766 0542                           l1694 0311  
                         l1686 02F5                           l1678 02E1                           l1790 0705  
                         l1782 06E7                           l1774 06D0                           l1838 07D7  
                         l1768 05D8                           l1696 0318                           l1688 02F9  
                         l1792 070B                           l1784 06EB                           l1776 06D7  
                         l1698 031E                           l1938 0730                           l1786 06F1  
                         l1794 070F                           l1778 06DC                           l1788 06F6  
                         l1798 071E                           l1894 05E8                           l1896 05ED  
                         l1898 05F2                           STR_1 005A                           STR_2 004E  
                         STR_3 004A                           STR_4 0042                           STR_5 003E  
                         STR_6 0056                           STR_7 0046                           STR_8 0052  
                         STR_9 001D                           u1000 035A                           u1001 0359  
                         u1100 03D3                           u1020 036D                           u1101 03D2  
                         u1021 036C                           u1005 0356                           u1110 04D6  
                         u1030 0372                           u1111 04D5                           u1031 0371  
                         u1015 0361                           u1120 04EB                           u1121 04EA  
                         u1050 01B2                           u1130 0506                           u1210 02F9  
                         u1051 01B1                           u1131 0505                           u1211 02F8  
                         u1140 0510                           u1045 01A2                           u1141 050F  
                         u1205 02EB                           u1070 0392                           u1230 030A  
                         u1310 0260                           u1071 0391                           u1231 0309  
                         u1311 025F                           u1320 00B6                           u1080 03A7  
                         u1400 0785                           u1065 0157                           u1321 00B5  
                         u1081 03A6                           u1225 02FA                           u1305 0254  
                         u1401 0784                           u1330 0135                           u1090 03C4  
                         u1170 006C                           u1250 031E                           u1410 07D7  
                         u1331 0134                           u1155 0122                           u1091 03C3  
                         u1171 006B                           u1251 031D                           u1235 0306  
                         u1411 07D6                           u1180 0074                           u1260 0231  
                         u1420 07E9                           u1340 06D0                           u1500 05FC  
                         u1165 0222                           u1181 0073                           u1245 0312  
                         u1261 0230                           u1421 07E8                           u1341 06CF  
                         u1190 02E7                           u1350 06F1                           u1191 02E6  
                         u1351 06F0                           u1280 0243                           u1360 071D  
                         u1281 0242                           u1361 071C                           u1290 024D  
                         u1370 074E                           u1291 024C                           u1275 0235  
                         u1371 074D                           u1380 0774                           u1381 0773  
                         u1517 06B7                           u1390 077F                           u1607 0276  
                         u1527 03DC                           u1295 0249                           u1391 077E  
                         u1617 00DA                           u1537 0539                           u1385 0770  
                         u1707 01C0                           u1627 00E1                           u1547 01E3  
                         u1637 00C2                           u1557 0108                           u1647 00C9  
                         u1567 0110                           u1657 0166                           u1577 00F0  
                         u1667 02AD                           u1587 00F8                           u1677 02BC  
                         u1597 026F                           u1687 0FFC                           u1697 01B6  
             __end_of_I2C_NACK 00E7                           _main 05E8               __end_of_I2C_Init 0FF1  
             __end_of_I2C_Read 02A0                           btemp 007E               __end_of_I2C_Stop 0117  
       __end_of_LCD_GotoCursor 014B                           start 0000              ___bmul@multiplier 0073  
           I2C_WriteMulti@addr 0079             I2C_WriteMulti@buff 0076                 ??_LCD_Cmd_Init 0070  
             __end_of_LCD_Char 016B               __end_of_LCD_Init 02DF                 RTC_Bin2Bcd@bin 0079  
                        ?_main 0070   __end_of_I2C_ReadMultiPointer 053F                __end_of___awdiv 0449  
                        STR_10 002B                          STR_11 0037                __end_of___awmod 037C  
              ___awdiv@divisor 0070                __end_of___lwdiv 0323                __end_of___lwmod 0265  
              ___awdiv@counter 0075                          _PORTB 0006                          _TRISB 0086  
              __end_of_dpowers 001D                          main@d 003C              __end_of_I2C_Start 00FF  
            __end_of_I2C_Write 01F4                          pclath 000A                          status 0003  
                        wtemp0 007E            __size_of_LCD_String 0017                __end_of_sprintf 07EE  
              ?_LCD_GotoCursor 0073                __initialization 07EE                   __end_of_main 06C2  
           RTC_CheckMinMax@max 0071             RTC_CheckMinMax@min 0070             RTC_CheckMinMax@val 0072  
                    ??_I2C_ACK 0070                         ??_main 0035             RTC_SetDateTime@day 0029  
                    ??_LCD_Cmd 0070               ?_RTC_SetDateTime 0027                      I2C_Read@i 0074  
             ___awdiv@dividend 0072                         ___bmul 008B                      ??___awdiv 0074  
                    ??___awmod 0074                      ??___lwdiv 0074                      ??___lwmod 007C  
             ___awdiv@quotient 0077                ___awmod@divisor 0070                ___awmod@counter 0075  
                       main@ds 0044                      ?_I2C_NACK 0070                      ?_I2C_Init 0070  
                    ?_I2C_Read 0070                      ?_I2C_Stop 0070                I2C_Write@Tvalue 0072  
                 ?_RTC_Bcd2Bin 0070                   ?_RTC_Bin2Bcd 0070                      ??_sprintf 0029  
         __end_of_LCD_Cmd_Init 1000          RTC_GetDateTime@minute 0020          RTC_GetDateTime@second 0021  
        RTC_SetDateTime@minute 0027          RTC_SetDateTime@second 0028                      ?_LCD_Char 0070  
      __end_of__initialization 07FC                      ?_LCD_Init 0070           _I2C_ReadMultiPointer 04C0  
              I2C_WriteMulti@i 007A                      LCD_Char@c 0072       __size_of_RTC_CheckMinMax 0013  
          ___bmul@multiplicand 0070                 __pcstackCOMMON 0070                   __pidataBANK0 005D  
                 ??_LCD_String 0073                     ??_I2C_NACK 0070                     ??_I2C_Init 0070  
                   ??_I2C_Read 0071              LCD_GotoCursor@cmd 0078              LCD_GotoCursor@col 0073  
            LCD_GotoCursor@row 0075                     ??_I2C_Stop 0070            RTC_SetDateTime@data 002D  
          RTC_SetDateTime@date 002A       __size_of_RTC_GetDateTime 0077            RTC_SetDateTime@hour 0034  
          RTC_SetDateTime@year 002C                     ??_LCD_Char 0070                     ??_LCD_Init 0073  
        ?_I2C_ReadMultiPointer 0075             __end_of_LCD_String 00B7                 I2C_Read@Rvalue 0073  
                   __pmaintext 05E8                        ?___bmul 0070                        _I2C_ACK 00B7  
      __size_of_I2C_WriteMulti 0066                     I2C_Write@i 0073                  ??_I2C_WaitACK 0071  
                      _LCD_Cmd 0196       I2C_ReadMultiPointer@addr 007A               ??_LCD_GotoCursor 0074  
                   __stringtab 0003                      _I2C_Start 00E7                      _I2C_Write 01C5  
                LCD_String@str 0074                __size_of___bmul 0015                        ___awdiv 03E2  
                      ___awmod 0323                        ___lwdiv 02DF                        ___lwmod 022B  
            ??_RTC_CheckMinMax 0072                        __ptext1 06C2                        __ptext2 022B  
                      __ptext3 02DF                        __ptext4 053F                        __ptext5 0065  
                      __ptext6 01F4                        __ptext7 0323                        __ptext8 03E2  
                      __ptext9 037C                        _dpowers 0013          __size_of_LCD_Cmd_Init 000F  
             ___awmod@dividend 0072            __end_of_I2C_WaitACK 0196                        main@day 0057  
                      _sprintf 06C2           __size_of_RTC_Bcd2Bin 0018           end_of_initialization 07FC  
         __size_of_RTC_Bin2Bcd 0037         ??_I2C_ReadMultiPointer 0078                     ?_I2C_Start 0070  
                   ?_I2C_Write 0070              ??_RTC_GetDateTime 007B                   _LCD_Cmd_Init 0FF1  
                    _PORTBbits 0006                      _PORTDbits 0008              __size_of_I2C_NACK 0018  
                    _TRISDbits 0088              __size_of_I2C_Init 0009              __size_of_I2C_Read 003B  
            __size_of_I2C_Stop 0018       __size_of_RTC_SetDateTime 00A9                     LCD_Cmd@cmd 0072  
                   main@minute 0055                     main@second 0056              __size_of_LCD_Char 0020  
            __size_of_LCD_Init 003F                 __end_of___bmul 00A0                 _I2C_WriteMulti 037C  
                  _I2C_WaitACK 016B            start_initialization 07EE                    ??_I2C_Start 0070  
                  ??_I2C_Write 0070                       ??___bmul 0071         __end_of_I2C_WriteMulti 03E2  
                   init_fetch0 0078                    __pdataBANK0 005B                       ?_I2C_ACK 0070  
         RTC_GetDateTime@month 0024           RTC_SetDateTime@month 002B                       ?_LCD_Cmd 0070  
                    ___latbits 0002                  __pcstackBANK0 0020                    sprintf@flag 002C  
                  sprintf@prec 002D                _RTC_CheckMinMax 0065                    I2C_Read@ACK 0072  
            ??_RTC_SetDateTime 007B               ___lwdiv@dividend 0072                ?_I2C_WriteMulti 0074  
                     ?___awdiv 0070                       ?___awmod 0070                       ?___lwdiv 0070  
                     ?___lwmod 0078     I2C_ReadMultiPointer@Rvalue 0077                      __pstrings 0003  
      I2C_ReadMultiPointer@len 0076        I2C_ReadMultiPointer@reg 0075                       _I2C_NACK 00CF  
                     _I2C_Init 0FE8                       _I2C_Read 0265                       _I2C_Stop 00FF  
              LCD_Cmd_Init@cmd 0071                _RTC_GetDateTime 0449               ___lwdiv@quotient 0075  
                     ?_sprintf 0020                       _LCD_Char 014B                       _LCD_Init 02A0  
                    main@F1024 005B               __size_of_I2C_ACK 0018                    __stringbase 0012  
                    main@month 0059               __size_of_LCD_Cmd 002F                  ??_RTC_Bcd2Bin 0074  
                ??_RTC_Bin2Bcd 0020        __end_of_RTC_CheckMinMax 0078  __size_of_I2C_ReadMultiPointer 007F  
      __size_of_LCD_GotoCursor 001C            RTC_GetDateTime@data 0026            RTC_GetDateTime@date 0023  
          RTC_GetDateTime@hour 002D            RTC_GetDateTime@year 0025               __size_of___awdiv 0067  
             __size_of___awmod 0059               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0013        __end_of_RTC_GetDateTime 04C0                   ?_I2C_WaitACK 0070  
                   sprintf@val 0031                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 0449                       __ptext11 0117                       __ptext20 00B7  
                     __ptext12 008B                       __ptext21 00A0                       __ptext13 04C0  
                     __ptext22 014B                       __ptext14 01C5                       __ptext23 02A0  
                     __ptext15 016B                       __ptext24 0FF1                       __ptext16 00FF  
                     __ptext25 012F                       __ptext17 00E7                       __ptext26 0196  
                     __ptext18 0265                       __ptext27 0FE8                       __ptext19 00CF  
             __size_of_sprintf 012C            __end_of_RTC_Bcd2Bin 012F                I2C_WaitACK@time 0072  
                __size_of_main 00DA            __end_of_RTC_Bin2Bcd 022B                       main@date 0058  
                     main@hour 0054                       main@year 005A                     _LCD_String 00A0  
                     init_ram0 007C             RTC_GetDateTime@day 0022                _RTC_SetDateTime 053F  
             ?_RTC_CheckMinMax 0070                      sprintf@ap 002E                      sprintf@cp 002F  
                    sprintf@sp 0033               ___lwmod@dividend 007A               ??_I2C_WriteMulti 0077  
                    stringcode 000D               ?_RTC_GetDateTime 0020                       sprintf@c 0034  
                     sprintf@f 0020                ___lwmod@divisor 0078                ___lwmod@counter 007D  
           _LCD_GotoCursor$123 0076                       stringdir 000D                       stringtab 0003  
                  _RTC_Bcd2Bin 0117                    _RTC_Bin2Bcd 01F4                 RTC_Bcd2Bin@bcd 0077  
               _LCD_GotoCursor 012F  

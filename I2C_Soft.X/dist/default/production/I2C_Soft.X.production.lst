

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 06 08:10:36 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.32
    28                           ; Generated 02/02/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182                           
   183                           	psect	idataBANK0
   184  04F4                     __pidataBANK0:
   185                           
   186                           ;initializer for main@F933
   187  04F4  3448               	retlw	72
   188  04F5  3445               	retlw	69
   189  04F6  344C               	retlw	76
   190  04F7  344C               	retlw	76
   191  04F8  344F               	retlw	79
   192  0008                     _PORTDbits	set	8
   193  0006                     _PORTB	set	6
   194  0006                     _PORTBbits	set	6
   195  0088                     _TRISDbits	set	136
   196  0086                     _TRISB	set	134
   197                           
   198                           	psect	cinit
   199  07DE                     start_initialization:	
   200                           ; #config settings
   201                           
   202  07DE                     __initialization:
   203                           
   204                           ; Initialize objects allocated to BANK0
   205  07DE  120A  118A  24F4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   206  07E3  00AB               	movwf	__pdataBANK0& (0+127)
   207  07E4  120A  118A  24F5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   208  07E9  00AC               	movwf	(__pdataBANK0+1)& (0+127)
   209  07EA  120A  118A  24F6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   210  07EF  00AD               	movwf	(__pdataBANK0+2)& (0+127)
   211  07F0  120A  118A  24F7  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   212  07F5  00AE               	movwf	(__pdataBANK0+3)& (0+127)
   213  07F6  120A  118A  24F8  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   214  07FB  00AF               	movwf	(__pdataBANK0+4)& (0+127)
   215  07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  07FC                     __end_of__initialization:
   219  07FC  0183               	clrf	3
   220  07FD  120A  118A  2E94   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	dataBANK0
   223  002B                     __pdataBANK0:
   224  002B                     main@F933:
   225  002B                     	ds	5
   226                           
   227                           	psect	cstackCOMMON
   228  0070                     __pcstackCOMMON:
   229  0070                     ?_LCD_Cmd:
   230  0070                     ??_LCD_Cmd:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_LCD_Cmd_Init:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ??_LCD_Cmd_Init:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_LCD_Init:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_LCD_Char:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ??_LCD_Char:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_I2C_Init:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ??_I2C_Init:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_I2C_Start:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ??_I2C_Start:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_I2C_Stop:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_I2C_Stop:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_I2C_Write:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_I2C_Write:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_I2C_WaitACK:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_I2C_ACK:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ??_I2C_ACK:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_I2C_NACK:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ??_I2C_NACK:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_I2C_Read:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_main:	
   291                           ; 1 bytes @ 0x0
   292                           
   293                           
   294                           ; 1 bytes @ 0x0
   295  0070                     	ds	1
   296  0071                     ??_I2C_WaitACK:
   297  0071                     ??_I2C_Read:	
   298                           ; 1 bytes @ 0x1
   299                           
   300  0071                     LCD_Cmd_Init@cmd:	
   301                           ; 1 bytes @ 0x1
   302                           
   303                           
   304                           ; 1 bytes @ 0x1
   305  0071                     	ds	1
   306  0072                     LCD_Cmd@cmd:
   307  0072                     LCD_Char@c:	
   308                           ; 1 bytes @ 0x2
   309                           
   310  0072                     I2C_Write@Tvalue:	
   311                           ; 1 bytes @ 0x2
   312                           
   313  0072                     I2C_WaitACK@time:	
   314                           ; 1 bytes @ 0x2
   315                           
   316  0072                     I2C_Read@ACK:	
   317                           ; 1 bytes @ 0x2
   318                           
   319                           
   320                           ; 1 bytes @ 0x2
   321  0072                     	ds	1
   322  0073                     ??_LCD_Init:
   323  0073                     I2C_Write@i:	
   324                           ; 1 bytes @ 0x3
   325                           
   326  0073                     I2C_Read@Rvalue:	
   327                           ; 1 bytes @ 0x3
   328                           
   329                           
   330                           ; 1 bytes @ 0x3
   331  0073                     	ds	1
   332  0074                     ?_I2C_WriteMulti:
   333  0074                     I2C_Read@i:	
   334                           ; 1 bytes @ 0x4
   335                           
   336  0074                     I2C_WriteMulti@reg:	
   337                           ; 1 bytes @ 0x4
   338                           
   339                           
   340                           ; 1 bytes @ 0x4
   341  0074                     	ds	1
   342  0075                     ?_I2C_ReadMultiPointer:
   343  0075                     I2C_WriteMulti@len:	
   344                           ; 1 bytes @ 0x5
   345                           
   346  0075                     I2C_ReadMultiPointer@reg:	
   347                           ; 1 bytes @ 0x5
   348                           
   349                           
   350                           ; 1 bytes @ 0x5
   351  0075                     	ds	1
   352  0076                     I2C_WriteMulti@buff:
   353  0076                     I2C_ReadMultiPointer@len:	
   354                           ; 1 bytes @ 0x6
   355                           
   356                           
   357                           ; 1 bytes @ 0x6
   358  0076                     	ds	1
   359  0077                     ??_I2C_WriteMulti:
   360  0077                     I2C_ReadMultiPointer@Rvalue:	
   361                           ; 1 bytes @ 0x7
   362                           
   363                           
   364                           ; 1 bytes @ 0x7
   365  0077                     	ds	1
   366  0078                     ??_I2C_ReadMultiPointer:
   367                           
   368                           ; 1 bytes @ 0x8
   369  0078                     	ds	1
   370  0079                     I2C_WriteMulti@addr:
   371                           
   372                           ; 1 bytes @ 0x9
   373  0079                     	ds	1
   374  007A                     I2C_WriteMulti@i:
   375  007A                     I2C_ReadMultiPointer@addr:	
   376                           ; 1 bytes @ 0xA
   377                           
   378                           
   379                           ; 1 bytes @ 0xA
   380  007A                     	ds	1
   381  007B                     ??_main:
   382                           
   383                           ; 1 bytes @ 0xB
   384  007B                     	ds	3
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:
   388  0020                     main@Data:
   389                           
   390                           ; 5 bytes @ 0x0
   391  0020                     	ds	5
   392  0025                     main@Rvalue:
   393                           
   394                           ; 5 bytes @ 0x5
   395  0025                     	ds	5
   396  002A                     main@i:
   397                           
   398                           ; 1 bytes @ 0xA
   399  002A                     	ds	1
   400                           
   401                           	psect	maintext
   402  0694                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 308 in file "newmain.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  Rvalue          5    5[BANK0 ] unsigned char [5]
   413 ;;  Data            5    0[BANK0 ] unsigned char [5]
   414 ;;  i               1   10[BANK0 ] unsigned char 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0      11       0       0       0
   426 ;;      Temps:          3       0       0       0       0
   427 ;;      Totals:         3      11       0       0       0
   428 ;;Total ram usage:       14 bytes
   429 ;; Hardware stack levels required when called: 3
   430 ;; This function calls:
   431 ;;		_I2C_Init
   432 ;;		_I2C_ReadMultiPointer
   433 ;;		_I2C_WriteMulti
   434 ;;		_LCD_Char
   435 ;;		_LCD_Init
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  0694                     _main:
   444  0694                     l1315:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;newmain.c: 310:     unsigned char Data[5] = "HELLO";
   450  0694  3020               	movlw	main@Data& (0+255)
   451  0695  0084               	movwf	4
   452  0696  1283               	bcf	3,5	;RP0=0, select bank0
   453  0697  1303               	bcf	3,6	;RP1=0, select bank0
   454  0698  082B               	movf	main@F933,w
   455  0699  1383               	bcf	3,7	;select IRP bank0
   456  069A  0080               	movwf	0
   457  069B  0A84               	incf	4,f
   458  069C  082C               	movf	main@F933+1,w
   459  069D  0080               	movwf	0
   460  069E  0A84               	incf	4,f
   461  069F  082D               	movf	main@F933+2,w
   462  06A0  0080               	movwf	0
   463  06A1  0A84               	incf	4,f
   464  06A2  082E               	movf	main@F933+3,w
   465  06A3  0080               	movwf	0
   466  06A4  0A84               	incf	4,f
   467  06A5  082F               	movf	main@F933+4,w
   468  06A6  0080               	movwf	0
   469  06A7                     l1317:
   470                           
   471                           ;newmain.c: 311:     unsigned char Rvalue[5],i;;newmain.c: 313:     LCD_Init();
   472  06A7  120A  118A  2655  120A  118A  	fcall	_LCD_Init
   473  06AC                     l1319:
   474                           
   475                           ;newmain.c: 314:     I2C_Init();
   476  06AC  120A  118A  24F9  120A  118A  	fcall	_I2C_Init
   477  06B1                     l1321:
   478                           
   479                           ;newmain.c: 316:     I2C_WriteMulti(0xA0, 0x00, 5, Data);
   480  06B1  01F4               	clrf	I2C_WriteMulti@reg
   481  06B2  3005               	movlw	5
   482  06B3  00FB               	movwf	??_main
   483  06B4  087B               	movf	??_main,w
   484  06B5  00F5               	movwf	I2C_WriteMulti@len
   485  06B6  3020               	movlw	(low (main@Data| 0))& (0+255)
   486  06B7  00FC               	movwf	??_main+1
   487  06B8  087C               	movf	??_main+1,w
   488  06B9  00F6               	movwf	I2C_WriteMulti@buff
   489  06BA  30A0               	movlw	160
   490  06BB  120A  118A  26F9  120A  118A  	fcall	_I2C_WriteMulti
   491  06C0                     l1323:
   492                           
   493                           ;newmain.c: 318:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   494  06C0  301A               	movlw	26
   495  06C1  00FD               	movwf	??_main+2
   496  06C2  305E               	movlw	94
   497  06C3  00FC               	movwf	??_main+1
   498  06C4  306E               	movlw	110
   499  06C5  00FB               	movwf	??_main
   500  06C6                     u577:
   501  06C6  0BFB               	decfsz	??_main,f
   502  06C7  2EC6               	goto	u577
   503  06C8  0BFC               	decfsz	??_main+1,f
   504  06C9  2EC6               	goto	u577
   505  06CA  0BFD               	decfsz	??_main+2,f
   506  06CB  2EC6               	goto	u577
   507  06CC  0000               	nop
   508  06CD                     l1325:
   509                           
   510                           ;newmain.c: 320:     I2C_ReadMultiPointer(0xA0, 0x00, 5, Rvalue);
   511  06CD  01F5               	clrf	I2C_ReadMultiPointer@reg
   512  06CE  3005               	movlw	5
   513  06CF  00FB               	movwf	??_main
   514  06D0  087B               	movf	??_main,w
   515  06D1  00F6               	movwf	I2C_ReadMultiPointer@len
   516  06D2  3025               	movlw	(low (main@Rvalue| 0))& (0+255)
   517  06D3  00FC               	movwf	??_main+1
   518  06D4  087C               	movf	??_main+1,w
   519  06D5  00F7               	movwf	I2C_ReadMultiPointer@Rvalue
   520  06D6  30A0               	movlw	160
   521  06D7  120A  118A  275F  120A  118A  	fcall	_I2C_ReadMultiPointer
   522  06DC                     l1327:
   523                           
   524                           ;newmain.c: 322:     for(i=0;i<5;i++)
   525  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   526  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   527  06DE  01AA               	clrf	main@i
   528  06DF                     l1333:
   529                           
   530                           ;newmain.c: 323:     {;newmain.c: 324:         LCD_Char(Rvalue[i]);
   531  06DF  082A               	movf	main@i,w
   532  06E0  3E25               	addlw	(low (main@Rvalue| 0))& (0+255)
   533  06E1  0084               	movwf	4
   534  06E2  1383               	bcf	3,7	;select IRP bank0
   535  06E3  0800               	movf	0,w
   536  06E4  120A  118A  2571  120A  118A  	fcall	_LCD_Char
   537  06E9                     l1335:
   538                           
   539                           ;newmain.c: 325:     }
   540  06E9  3001               	movlw	1
   541  06EA  00FB               	movwf	??_main
   542  06EB  087B               	movf	??_main,w
   543  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   544  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   545  06EE  07AA               	addwf	main@i,f
   546  06EF                     l1337:
   547  06EF  3005               	movlw	5
   548  06F0  022A               	subwf	main@i,w
   549  06F1  1C03               	skipc
   550  06F2  2EF4               	goto	u561
   551  06F3  2EF5               	goto	u560
   552  06F4                     u561:
   553  06F4  2EDF               	goto	l1333
   554  06F5                     u560:
   555  06F5                     l128:	
   556                           ;newmain.c: 328:     while(1)
   557                           
   558  06F5  2EF5               	goto	l128
   559  06F6  120A  118A  2800   	ljmp	start
   560  06F9                     __end_of_main:
   561                           
   562                           	psect	text1
   563  0655                     __ptext1:	
   564 ;; *************** function _LCD_Init *****************
   565 ;; Defined at:
   566 ;;		line 67 in file "newmain.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0
   583 ;;      Totals:         2       0       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 1
   587 ;; This function calls:
   588 ;;		_LCD_Cmd
   589 ;;		_LCD_Cmd_Init
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _LCD_Init
   597  0655                     _LCD_Init:
   598  0655                     l1167:	
   599                           ;incstack = 0
   600                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   601                           
   602                           
   603                           ;newmain.c: 69:     TRISB = 0;
   604  0655  1683               	bsf	3,5	;RP0=1, select bank1
   605  0656  1303               	bcf	3,6	;RP1=0, select bank1
   606  0657  0186               	clrf	6	;volatile
   607  0658                     l1169:
   608                           
   609                           ;newmain.c: 72:  LCD_Cmd_Init(0x30);
   610  0658  3030               	movlw	48
   611  0659  120A  118A  2502  120A  118A  	fcall	_LCD_Cmd_Init
   612  065E                     l1171:
   613                           
   614                           ;newmain.c: 73:  _delay((unsigned long)((5)*(20000000/4000.0)));
   615  065E  3021               	movlw	33
   616  065F  00F4               	movwf	??_LCD_Init+1
   617  0660  3076               	movlw	118
   618  0661  00F3               	movwf	??_LCD_Init
   619  0662                     u587:
   620  0662  0BF3               	decfsz	??_LCD_Init,f
   621  0663  2E62               	goto	u587
   622  0664  0BF4               	decfsz	??_LCD_Init+1,f
   623  0665  2E62               	goto	u587
   624  0666  0000               	nop
   625  0667                     l1173:
   626                           
   627                           ;newmain.c: 74:  LCD_Cmd_Init(0x30);
   628  0667  3030               	movlw	48
   629  0668  120A  118A  2502  120A  118A  	fcall	_LCD_Cmd_Init
   630  066D                     l1175:
   631                           
   632                           ;newmain.c: 75:  _delay((unsigned long)((1)*(20000000/4000.0)));
   633  066D  3007               	movlw	7
   634  066E  00F4               	movwf	??_LCD_Init+1
   635  066F  307D               	movlw	125
   636  0670  00F3               	movwf	??_LCD_Init
   637  0671                     u597:
   638  0671  0BF3               	decfsz	??_LCD_Init,f
   639  0672  2E71               	goto	u597
   640  0673  0BF4               	decfsz	??_LCD_Init+1,f
   641  0674  2E71               	goto	u597
   642  0675                     l1177:
   643                           
   644                           ;newmain.c: 76:  LCD_Cmd_Init(0x30);
   645  0675  3030               	movlw	48
   646  0676  120A  118A  2502  120A  118A  	fcall	_LCD_Cmd_Init
   647  067B                     l1179:
   648                           
   649                           ;newmain.c: 80:     LCD_Cmd_Init(0x28);
   650  067B  3028               	movlw	40
   651  067C  120A  118A  2502  120A  118A  	fcall	_LCD_Cmd_Init
   652  0681                     l1181:
   653                           
   654                           ;newmain.c: 83:  LCD_Cmd(0x28);
   655  0681  3028               	movlw	40
   656  0682  120A  118A  25EB  120A  118A  	fcall	_LCD_Cmd
   657  0687                     l1183:
   658                           
   659                           ;newmain.c: 94:  LCD_Cmd(0x01);
   660  0687  3001               	movlw	1
   661  0688  120A  118A  25EB  120A  118A  	fcall	_LCD_Cmd
   662  068D                     l1185:
   663                           
   664                           ;newmain.c: 100:     LCD_Cmd(0x0E);
   665  068D  300E               	movlw	14
   666  068E  120A  118A  25EB  120A  118A  	fcall	_LCD_Cmd
   667  0693                     l23:
   668  0693  0008               	return
   669  0694                     __end_of_LCD_Init:
   670                           
   671                           	psect	text2
   672  0502                     __ptext2:	
   673 ;; *************** function _LCD_Cmd_Init *****************
   674 ;; Defined at:
   675 ;;		line 59 in file "newmain.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  cmd             1    wreg     unsigned char 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  cmd             1    1[COMMON] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         1       0       0       0       0
   691 ;;      Temps:          1       0       0       0       0
   692 ;;      Totals:         2       0       0       0       0
   693 ;;Total ram usage:        2 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_LCD_Init
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _LCD_Cmd_Init
   704  0502                     _LCD_Cmd_Init:
   705                           
   706                           ;incstack = 0
   707                           ; Regs used in _LCD_Cmd_Init: [wreg+status,2]
   708                           ;LCD_Cmd_Init@cmd stored from wreg
   709  0502  00F1               	movwf	LCD_Cmd_Init@cmd
   710  0503                     l1075:
   711                           
   712                           ;newmain.c: 59: void LCD_Cmd_Init(unsigned char cmd);newmain.c: 60: {;newmain.c: 61:  PO
      +                          RTBbits.RB0 = 0;
   713  0503  1283               	bcf	3,5	;RP0=0, select bank0
   714  0504  1303               	bcf	3,6	;RP1=0, select bank0
   715  0505  1006               	bcf	6,0	;volatile
   716  0506                     l1077:
   717                           
   718                           ;newmain.c: 62:  PORTB = cmd & 0xF0 ;
   719  0506  0871               	movf	LCD_Cmd_Init@cmd,w
   720  0507  39F0               	andlw	240
   721  0508  0086               	movwf	6	;volatile
   722  0509                     l1079:
   723                           
   724                           ;newmain.c: 63:  PORTBbits.RB1 = 1;
   725  0509  1486               	bsf	6,1	;volatile
   726  050A                     l1081:
   727                           
   728                           ;newmain.c: 64:  PORTBbits.RB1 = 0;
   729  050A  1086               	bcf	6,1	;volatile
   730  050B                     l1083:
   731                           
   732                           ;newmain.c: 65:     _delay((unsigned long)((40)*(20000000/4000000.0)));
   733  050B  3042               	movlw	66
   734  050C  00F0               	movwf	??_LCD_Cmd_Init
   735  050D                     u607:
   736  050D  0BF0               	decfsz	??_LCD_Cmd_Init,f
   737  050E  2D0D               	goto	u607
   738  050F  0000               	nop
   739  0510                     l20:
   740  0510  0008               	return
   741  0511                     __end_of_LCD_Cmd_Init:
   742                           
   743                           	psect	text3
   744  05EB                     __ptext3:	
   745 ;; *************** function _LCD_Cmd *****************
   746 ;; Defined at:
   747 ;;		line 41 in file "newmain.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  cmd             1    wreg     unsigned char 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  cmd             1    2[COMMON] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0
   763 ;;      Temps:          2       0       0       0       0
   764 ;;      Totals:         3       0       0       0       0
   765 ;;Total ram usage:        3 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_LCD_Init
   771 ;;		_LCD_GotoCursor
   772 ;;		_LCD_GotoCursor_Char
   773 ;;		_LCD_GotoCursor_String
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _LCD_Cmd
   779  05EB                     _LCD_Cmd:
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
   783                           ;LCD_Cmd@cmd stored from wreg
   784  05EB  00F2               	movwf	LCD_Cmd@cmd
   785  05EC                     l1055:
   786                           
   787                           ;newmain.c: 41: void LCD_Cmd(unsigned char cmd);newmain.c: 42: {;newmain.c: 43:  PORTBbi
      +                          ts.RB0 = 0;
   788  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   789  05ED  1303               	bcf	3,6	;RP1=0, select bank0
   790  05EE  1006               	bcf	6,0	;volatile
   791  05EF                     l1057:
   792                           
   793                           ;newmain.c: 44:  PORTB = cmd & 0xF0;
   794  05EF  0872               	movf	LCD_Cmd@cmd,w
   795  05F0  39F0               	andlw	240
   796  05F1  0086               	movwf	6	;volatile
   797  05F2                     l1059:
   798                           
   799                           ;newmain.c: 45:  PORTBbits.RB1 = 1;
   800  05F2  1486               	bsf	6,1	;volatile
   801  05F3                     l1061:
   802                           
   803                           ;newmain.c: 46:  PORTBbits.RB1 = 0;
   804  05F3  1086               	bcf	6,1	;volatile
   805  05F4                     l1063:
   806                           
   807                           ;newmain.c: 47:     PORTB = cmd << 4;
   808  05F4  0872               	movf	LCD_Cmd@cmd,w
   809  05F5  00F0               	movwf	??_LCD_Cmd
   810  05F6  3003               	movlw	3
   811  05F7                     u295:
   812  05F7  1003               	clrc
   813  05F8  0DF0               	rlf	??_LCD_Cmd,f
   814  05F9  3EFF               	addlw	-1
   815  05FA  1D03               	skipz
   816  05FB  2DF7               	goto	u295
   817  05FC  1003               	clrc
   818  05FD  0D70               	rlf	??_LCD_Cmd,w
   819  05FE  0086               	movwf	6	;volatile
   820  05FF                     l1065:
   821                           
   822                           ;newmain.c: 48:  PORTBbits.RB1 = 1;
   823  05FF  1486               	bsf	6,1	;volatile
   824  0600                     l1067:
   825                           
   826                           ;newmain.c: 49:  PORTBbits.RB1 = 0;
   827  0600  1086               	bcf	6,1	;volatile
   828  0601                     l1069:
   829                           
   830                           ;newmain.c: 50:  if( cmd <= 0x02)
   831  0601  3003               	movlw	3
   832  0602  0272               	subwf	LCD_Cmd@cmd,w
   833  0603  1803               	skipnc
   834  0604  2E06               	goto	u301
   835  0605  2E07               	goto	u300
   836  0606                     u301:
   837  0606  2E11               	goto	l1073
   838  0607                     u300:
   839  0607                     l1071:
   840                           
   841                           ;newmain.c: 51:  {;newmain.c: 52:   _delay((unsigned long)((2)*(20000000/4000.0)));
   842  0607  300D               	movlw	13
   843  0608  00F1               	movwf	??_LCD_Cmd+1
   844  0609  30FB               	movlw	251
   845  060A  00F0               	movwf	??_LCD_Cmd
   846  060B                     u617:
   847  060B  0BF0               	decfsz	??_LCD_Cmd,f
   848  060C  2E0B               	goto	u617
   849  060D  0BF1               	decfsz	??_LCD_Cmd+1,f
   850  060E  2E0B               	goto	u617
   851  060F  2E10               	nop2
   852                           
   853                           ;newmain.c: 53:  }
   854  0610  2E19               	goto	l17
   855  0611                     l1073:
   856                           
   857                           ;newmain.c: 55:  {;newmain.c: 56:   _delay((unsigned long)((1)*(20000000/4000.0)));
   858  0611  3007               	movlw	7
   859  0612  00F1               	movwf	??_LCD_Cmd+1
   860  0613  307D               	movlw	125
   861  0614  00F0               	movwf	??_LCD_Cmd
   862  0615                     u627:
   863  0615  0BF0               	decfsz	??_LCD_Cmd,f
   864  0616  2E15               	goto	u627
   865  0617  0BF1               	decfsz	??_LCD_Cmd+1,f
   866  0618  2E15               	goto	u627
   867  0619                     l17:
   868  0619  0008               	return
   869  061A                     __end_of_LCD_Cmd:
   870                           
   871                           	psect	text4
   872  0571                     __ptext4:	
   873 ;; *************** function _LCD_Char *****************
   874 ;; Defined at:
   875 ;;		line 102 in file "newmain.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  c               1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  c               1    2[COMMON] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         1       0       0       0       0
   891 ;;      Temps:          2       0       0       0       0
   892 ;;      Totals:         3       0       0       0       0
   893 ;;Total ram usage:        3 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;;		_LCD_String
   900 ;;		_LCD_GotoCursor_Char
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _LCD_Char
   906  0571                     _LCD_Char:
   907                           
   908                           ;incstack = 0
   909                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
   910                           ;LCD_Char@c stored from wreg
   911  0571  00F2               	movwf	LCD_Char@c
   912  0572                     l1187:
   913                           
   914                           ;newmain.c: 102: void LCD_Char(unsigned char c);newmain.c: 103: {;newmain.c: 104:  PORTB
      +                          bits.RB0 = 1;
   915  0572  1283               	bcf	3,5	;RP0=0, select bank0
   916  0573  1303               	bcf	3,6	;RP1=0, select bank0
   917  0574  1406               	bsf	6,0	;volatile
   918  0575                     l1189:
   919                           
   920                           ;newmain.c: 105:  PORTB = c | 0x01;
   921  0575  0872               	movf	LCD_Char@c,w
   922  0576  3801               	iorlw	1
   923  0577  0086               	movwf	6	;volatile
   924  0578                     l1191:
   925                           
   926                           ;newmain.c: 106:  PORTBbits.RB1 = 1;
   927  0578  1486               	bsf	6,1	;volatile
   928  0579                     l1193:
   929                           
   930                           ;newmain.c: 107:  PORTBbits.RB1 = 0;
   931  0579  1086               	bcf	6,1	;volatile
   932  057A                     l1195:
   933                           
   934                           ;newmain.c: 108:     PORTB = (c << 4) | 0x01;
   935  057A  0872               	movf	LCD_Char@c,w
   936  057B  00F0               	movwf	??_LCD_Char
   937  057C  3003               	movlw	3
   938  057D                     u385:
   939  057D  1003               	clrc
   940  057E  0DF0               	rlf	??_LCD_Char,f
   941  057F  3EFF               	addlw	-1
   942  0580  1D03               	skipz
   943  0581  2D7D               	goto	u385
   944  0582  1003               	clrc
   945  0583  0D70               	rlf	??_LCD_Char,w
   946  0584  3801               	iorlw	1
   947  0585  0086               	movwf	6	;volatile
   948  0586                     l1197:
   949                           
   950                           ;newmain.c: 109:  PORTBbits.RB1 = 1;
   951  0586  1486               	bsf	6,1	;volatile
   952  0587                     l1199:
   953                           
   954                           ;newmain.c: 110:  PORTBbits.RB1 = 0;
   955  0587  1086               	bcf	6,1	;volatile
   956  0588                     l1201:
   957                           
   958                           ;newmain.c: 111:  _delay((unsigned long)((1)*(20000000/4000.0)));
   959  0588  3007               	movlw	7
   960  0589  00F1               	movwf	??_LCD_Char+1
   961  058A  307D               	movlw	125
   962  058B  00F0               	movwf	??_LCD_Char
   963  058C                     u637:
   964  058C  0BF0               	decfsz	??_LCD_Char,f
   965  058D  2D8C               	goto	u637
   966  058E  0BF1               	decfsz	??_LCD_Char+1,f
   967  058F  2D8C               	goto	u637
   968  0590                     l26:
   969  0590  0008               	return
   970  0591                     __end_of_LCD_Char:
   971                           
   972                           	psect	text5
   973  06F9                     __ptext5:	
   974 ;; *************** function _I2C_WriteMulti *****************
   975 ;; Defined at:
   976 ;;		line 241 in file "newmain.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  addr            1    wreg     unsigned char 
   979 ;;  reg             1    4[COMMON] unsigned char 
   980 ;;  len             1    5[COMMON] unsigned char 
   981 ;;  buff            1    6[COMMON] PTR unsigned char 
   982 ;;		 -> main@Data(5), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  addr            1    9[COMMON] unsigned char 
   985 ;;  i               1   10[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         3       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0
   997 ;;      Temps:          2       0       0       0       0
   998 ;;      Totals:         7       0       0       0       0
   999 ;;Total ram usage:        7 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 2
  1002 ;; This function calls:
  1003 ;;		_I2C_Start
  1004 ;;		_I2C_Stop
  1005 ;;		_I2C_WaitACK
  1006 ;;		_I2C_Write
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _I2C_WriteMulti
  1014  06F9                     _I2C_WriteMulti:
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _I2C_WriteMulti: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1018                           ;I2C_WriteMulti@addr stored from wreg
  1019  06F9  00F9               	movwf	I2C_WriteMulti@addr
  1020  06FA                     l1213:
  1021                           
  1022                           ;newmain.c: 241: void I2C_WriteMulti(unsigned char addr, unsigned char reg, unsigned cha
      +                          r len, unsigned char buff[]);newmain.c: 242: {;newmain.c: 243:     unsigned char i;;newm
      +                          ain.c: 244:     I2C_Start();
  1023  06FA  120A  118A  2541  120A  118A  	fcall	_I2C_Start
  1024                           
  1025                           ;newmain.c: 246:     I2C_Write(addr|0);
  1026  06FF  0879               	movf	I2C_WriteMulti@addr,w
  1027  0700  120A  118A  25BC  120A  118A  	fcall	_I2C_Write
  1028                           
  1029                           ;newmain.c: 247:     if(I2C_WaitACK()) I2C_Stop();
  1030  0705  120A  118A  2591  120A  118A  	fcall	_I2C_WaitACK
  1031  070A  3A00               	xorlw	0
  1032  070B  1903               	skipnz
  1033  070C  2F0E               	goto	u401
  1034  070D  2F0F               	goto	u400
  1035  070E                     u401:
  1036  070E  2F14               	goto	l91
  1037  070F                     u400:
  1038  070F                     l1215:
  1039  070F  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1040  0714                     l91:
  1041                           
  1042                           ;newmain.c: 249:     I2C_Write(reg);
  1043  0714  0874               	movf	I2C_WriteMulti@reg,w
  1044  0715  120A  118A  25BC  120A  118A  	fcall	_I2C_Write
  1045                           
  1046                           ;newmain.c: 250:     if(I2C_WaitACK()) I2C_Stop();
  1047  071A  120A  118A  2591  120A  118A  	fcall	_I2C_WaitACK
  1048  071F  3A00               	xorlw	0
  1049  0720  1903               	skipnz
  1050  0721  2F23               	goto	u411
  1051  0722  2F24               	goto	u410
  1052  0723                     u411:
  1053  0723  2F29               	goto	l1219
  1054  0724                     u410:
  1055  0724                     l1217:
  1056  0724  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1057  0729                     l1219:
  1058                           
  1059                           ;newmain.c: 252:     for(i = 0; i < len; i++)
  1060  0729  01FA               	clrf	I2C_WriteMulti@i
  1061  072A  2F4A               	goto	l1229
  1062  072B                     l1221:
  1063                           
  1064                           ;newmain.c: 253:     {;newmain.c: 254:         I2C_Write(buff[i]);
  1065  072B  087A               	movf	I2C_WriteMulti@i,w
  1066  072C  0776               	addwf	I2C_WriteMulti@buff,w
  1067  072D  00F7               	movwf	??_I2C_WriteMulti
  1068  072E  0877               	movf	??_I2C_WriteMulti,w
  1069  072F  0084               	movwf	4
  1070  0730  1383               	bcf	3,7	;select IRP bank0
  1071  0731  0800               	movf	0,w
  1072  0732  120A  118A  25BC  120A  118A  	fcall	_I2C_Write
  1073  0737                     l1223:
  1074                           
  1075                           ;newmain.c: 255:         if(I2C_WaitACK()) I2C_Stop();
  1076  0737  120A  118A  2591  120A  118A  	fcall	_I2C_WaitACK
  1077  073C  3A00               	xorlw	0
  1078  073D  1903               	skipnz
  1079  073E  2F40               	goto	u421
  1080  073F  2F41               	goto	u420
  1081  0740                     u421:
  1082  0740  2F46               	goto	l1227
  1083  0741                     u420:
  1084  0741                     l1225:
  1085  0741  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1086  0746                     l1227:
  1087                           
  1088                           ;newmain.c: 256:     }
  1089  0746  3001               	movlw	1
  1090  0747  00F7               	movwf	??_I2C_WriteMulti
  1091  0748  0877               	movf	??_I2C_WriteMulti,w
  1092  0749  07FA               	addwf	I2C_WriteMulti@i,f
  1093  074A                     l1229:
  1094  074A  0875               	movf	I2C_WriteMulti@len,w
  1095  074B  027A               	subwf	I2C_WriteMulti@i,w
  1096  074C  1C03               	skipc
  1097  074D  2F4F               	goto	u431
  1098  074E  2F50               	goto	u430
  1099  074F                     u431:
  1100  074F  2F2B               	goto	l1221
  1101  0750                     u430:
  1102  0750                     l1231:
  1103                           
  1104                           ;newmain.c: 258:     I2C_Stop();
  1105  0750  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1106  0755                     l1233:
  1107                           
  1108                           ;newmain.c: 259:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1109  0755  300D               	movlw	13
  1110  0756  00F8               	movwf	??_I2C_WriteMulti+1
  1111  0757  30FB               	movlw	251
  1112  0758  00F7               	movwf	??_I2C_WriteMulti
  1113  0759                     u647:
  1114  0759  0BF7               	decfsz	??_I2C_WriteMulti,f
  1115  075A  2F59               	goto	u647
  1116  075B  0BF8               	decfsz	??_I2C_WriteMulti+1,f
  1117  075C  2F59               	goto	u647
  1118  075D  2F5E               	nop2
  1119  075E                     l97:
  1120  075E  0008               	return
  1121  075F                     __end_of_I2C_WriteMulti:
  1122                           
  1123                           	psect	text6
  1124  075F                     __ptext6:	
  1125 ;; *************** function _I2C_ReadMultiPointer *****************
  1126 ;; Defined at:
  1127 ;;		line 285 in file "newmain.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  addr            1    wreg     unsigned char 
  1130 ;;  reg             1    5[COMMON] unsigned char 
  1131 ;;  len             1    6[COMMON] unsigned char 
  1132 ;;  Rvalue          1    7[COMMON] PTR unsigned char 
  1133 ;;		 -> main@Rvalue(5), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  addr            1   10[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         3       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0
  1147 ;;      Temps:          2       0       0       0       0
  1148 ;;      Totals:         6       0       0       0       0
  1149 ;;Total ram usage:        6 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 2
  1152 ;; This function calls:
  1153 ;;		_I2C_Read
  1154 ;;		_I2C_Start
  1155 ;;		_I2C_Stop
  1156 ;;		_I2C_WaitACK
  1157 ;;		_I2C_Write
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _I2C_ReadMultiPointer
  1165  075F                     _I2C_ReadMultiPointer:
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _I2C_ReadMultiPointer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1169                           ;I2C_ReadMultiPointer@addr stored from wreg
  1170  075F  00FA               	movwf	I2C_ReadMultiPointer@addr
  1171  0760                     l1235:
  1172                           
  1173                           ;newmain.c: 285: void I2C_ReadMultiPointer(unsigned char addr, unsigned char reg, unsign
      +                          ed char len, unsigned char* Rvalue);newmain.c: 286: {;newmain.c: 287:     I2C_Start();
  1174  0760  120A  118A  2541  120A  118A  	fcall	_I2C_Start
  1175                           
  1176                           ;newmain.c: 288:     I2C_Write(addr);
  1177  0765  087A               	movf	I2C_ReadMultiPointer@addr,w
  1178  0766  120A  118A  25BC  120A  118A  	fcall	_I2C_Write
  1179                           
  1180                           ;newmain.c: 289:     if(I2C_WaitACK()) I2C_Stop();
  1181  076B  120A  118A  2591  120A  118A  	fcall	_I2C_WaitACK
  1182  0770  3A00               	xorlw	0
  1183  0771  1903               	skipnz
  1184  0772  2F74               	goto	u441
  1185  0773  2F75               	goto	u440
  1186  0774                     u441:
  1187  0774  2F7A               	goto	l111
  1188  0775                     u440:
  1189  0775                     l1237:
  1190  0775  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1191  077A                     l111:
  1192                           
  1193                           ;newmain.c: 290:     I2C_Write(reg);
  1194  077A  0875               	movf	I2C_ReadMultiPointer@reg,w
  1195  077B  120A  118A  25BC  120A  118A  	fcall	_I2C_Write
  1196                           
  1197                           ;newmain.c: 291:     if(I2C_WaitACK()) I2C_Stop();
  1198  0780  120A  118A  2591  120A  118A  	fcall	_I2C_WaitACK
  1199  0785  3A00               	xorlw	0
  1200  0786  1903               	skipnz
  1201  0787  2F89               	goto	u451
  1202  0788  2F8A               	goto	u450
  1203  0789                     u451:
  1204  0789  2F8F               	goto	l112
  1205  078A                     u450:
  1206  078A                     l1239:
  1207  078A  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1208  078F                     l112:
  1209                           
  1210                           ;newmain.c: 293:     I2C_Start();
  1211  078F  120A  118A  2541  120A  118A  	fcall	_I2C_Start
  1212                           
  1213                           ;newmain.c: 294:     I2C_Write(addr|1);
  1214  0794  087A               	movf	I2C_ReadMultiPointer@addr,w
  1215  0795  3801               	iorlw	1
  1216  0796  120A  118A  25BC  120A  118A  	fcall	_I2C_Write
  1217                           
  1218                           ;newmain.c: 295:     if(I2C_WaitACK()) I2C_Stop();
  1219  079B  120A  118A  2591  120A  118A  	fcall	_I2C_WaitACK
  1220  07A0  3A00               	xorlw	0
  1221  07A1  1903               	skipnz
  1222  07A2  2FA4               	goto	u461
  1223  07A3  2FA5               	goto	u460
  1224  07A4                     u461:
  1225  07A4  2FAA               	goto	l1243
  1226  07A5                     u460:
  1227  07A5                     l1241:
  1228  07A5  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1229  07AA                     l1243:
  1230                           
  1231                           ;newmain.c: 298:     {;newmain.c: 299:         if(len == 1) {*Rvalue = I2C_Read(1); brea
      +                          k;}
  1232  07AA  0376               	decf	I2C_ReadMultiPointer@len,w
  1233  07AB  1D03               	btfss	3,2
  1234  07AC  2FAE               	goto	u471
  1235  07AD  2FAF               	goto	u470
  1236  07AE                     u471:
  1237  07AE  2FBC               	goto	l1249
  1238  07AF                     u470:
  1239  07AF                     l1245:
  1240  07AF  3001               	movlw	1
  1241  07B0  120A  118A  261A  120A  118A  	fcall	_I2C_Read
  1242  07B5  00F8               	movwf	??_I2C_ReadMultiPointer
  1243  07B6  0877               	movf	I2C_ReadMultiPointer@Rvalue,w
  1244  07B7  0084               	movwf	4
  1245  07B8  0878               	movf	??_I2C_ReadMultiPointer,w
  1246  07B9  1383               	bcf	3,7	;select IRP bank0
  1247  07BA  0080               	movwf	0
  1248  07BB  2FCF               	goto	l1255
  1249  07BC                     l1249:
  1250  07BC  3000               	movlw	0
  1251  07BD  120A  118A  261A  120A  118A  	fcall	_I2C_Read
  1252  07C2  00F8               	movwf	??_I2C_ReadMultiPointer
  1253  07C3  0877               	movf	I2C_ReadMultiPointer@Rvalue,w
  1254  07C4  0084               	movwf	4
  1255  07C5  0878               	movf	??_I2C_ReadMultiPointer,w
  1256  07C6  1383               	bcf	3,7	;select IRP bank0
  1257  07C7  0080               	movwf	0
  1258  07C8                     l1251:
  1259                           
  1260                           ;newmain.c: 301:         Rvalue++;
  1261  07C8  3001               	movlw	1
  1262  07C9  00F8               	movwf	??_I2C_ReadMultiPointer
  1263  07CA  0878               	movf	??_I2C_ReadMultiPointer,w
  1264  07CB  07F7               	addwf	I2C_ReadMultiPointer@Rvalue,f
  1265  07CC                     l1253:
  1266                           
  1267                           ;newmain.c: 302:         len--;
  1268  07CC  3001               	movlw	1
  1269  07CD  02F6               	subwf	I2C_ReadMultiPointer@len,f
  1270  07CE  2FAA               	goto	l1243
  1271  07CF                     l1255:
  1272                           
  1273                           ;newmain.c: 304:     I2C_Stop();
  1274  07CF  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1275  07D4                     l1257:
  1276                           
  1277                           ;newmain.c: 305:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1278  07D4  300D               	movlw	13
  1279  07D5  00F9               	movwf	??_I2C_ReadMultiPointer+1
  1280  07D6  30FB               	movlw	251
  1281  07D7  00F8               	movwf	??_I2C_ReadMultiPointer
  1282  07D8                     u657:
  1283  07D8  0BF8               	decfsz	??_I2C_ReadMultiPointer,f
  1284  07D9  2FD8               	goto	u657
  1285  07DA  0BF9               	decfsz	??_I2C_ReadMultiPointer+1,f
  1286  07DB  2FD8               	goto	u657
  1287  07DC  2FDD               	nop2
  1288  07DD                     l119:
  1289  07DD  0008               	return
  1290  07DE                     __end_of_I2C_ReadMultiPointer:
  1291                           
  1292                           	psect	text7
  1293  05BC                     __ptext7:	
  1294 ;; *************** function _I2C_Write *****************
  1295 ;; Defined at:
  1296 ;;		line 169 in file "newmain.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  Tvalue          1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  Tvalue          1    2[COMMON] unsigned char 
  1301 ;;  i               1    3[COMMON] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         2       0       0       0       0
  1313 ;;      Temps:          2       0       0       0       0
  1314 ;;      Totals:         4       0       0       0       0
  1315 ;;Total ram usage:        4 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_I2C_WriteMulti
  1321 ;;		_I2C_ReadMultiPointer
  1322 ;;		_I2C_ReadMulti
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _I2C_Write
  1328  05BC                     _I2C_Write:
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _I2C_Write: [wreg+status,2+status,0]
  1332                           ;I2C_Write@Tvalue stored from wreg
  1333  05BC  00F2               	movwf	I2C_Write@Tvalue
  1334  05BD                     l1093:
  1335                           
  1336                           ;newmain.c: 169: void I2C_Write(unsigned char Tvalue);newmain.c: 170: {;newmain.c: 171: 
      +                              unsigned char i;;newmain.c: 172:     TRISDbits.TRISD1 = 0;
  1337  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1338  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1339  05BF  1088               	bcf	8,1	;volatile
  1340                           
  1341                           ;newmain.c: 173:     PORTDbits.RD0 = 0;
  1342  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1343  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1344  05C2  1008               	bcf	8,0	;volatile
  1345  05C3                     l1095:
  1346                           
  1347                           ;newmain.c: 174:     for(i=0;i<8;i++){
  1348  05C3  01F3               	clrf	I2C_Write@i
  1349  05C4                     l1101:
  1350                           
  1351                           ;newmain.c: 175:   PORTDbits.RD1 = (Tvalue&0x80) >> 7;
  1352  05C4  0872               	movf	I2C_Write@Tvalue,w
  1353  05C5  00F0               	movwf	??_I2C_Write
  1354  05C6  3007               	movlw	7
  1355  05C7                     u315:
  1356  05C7  1003               	clrc
  1357  05C8  0CF0               	rrf	??_I2C_Write,f
  1358  05C9  3EFF               	addlw	-1
  1359  05CA  1D03               	skipz
  1360  05CB  2DC7               	goto	u315
  1361  05CC  0870               	movf	??_I2C_Write,w
  1362  05CD  3901               	andlw	1
  1363  05CE  00F1               	movwf	??_I2C_Write+1
  1364  05CF  0DF1               	rlf	??_I2C_Write+1,f
  1365  05D0  0808               	movf	8,w	;volatile
  1366  05D1  0671               	xorwf	??_I2C_Write+1,w
  1367  05D2  39FD               	andlw	-3
  1368  05D3  0671               	xorwf	??_I2C_Write+1,w
  1369  05D4  0088               	movwf	8	;volatile
  1370  05D5                     l1103:
  1371                           
  1372                           ;newmain.c: 176:   Tvalue <<= 1;
  1373  05D5  1003               	clrc
  1374  05D6  0DF2               	rlf	I2C_Write@Tvalue,f
  1375  05D7                     l1105:
  1376                           
  1377                           ;newmain.c: 177:   PORTDbits.RD0 = 1;
  1378  05D7  1408               	bsf	8,0	;volatile
  1379  05D8                     l1107:
  1380                           
  1381                           ;newmain.c: 178:   _delay((unsigned long)((4)*(20000000/4000000.0)));
  1382  05D8  3006               	movlw	6
  1383  05D9  00F0               	movwf	??_I2C_Write
  1384  05DA                     u667:
  1385  05DA  0BF0               	decfsz	??_I2C_Write,f
  1386  05DB  2DDA               	goto	u667
  1387  05DC  0000               	nop
  1388  05DD                     l1109:
  1389                           
  1390                           ;newmain.c: 179:   PORTDbits.RD0 = 0;
  1391  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1392  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1393  05DF  1008               	bcf	8,0	;volatile
  1394                           
  1395                           ;newmain.c: 180:  }
  1396  05E0  3001               	movlw	1
  1397  05E1  00F0               	movwf	??_I2C_Write
  1398  05E2  0870               	movf	??_I2C_Write,w
  1399  05E3  07F3               	addwf	I2C_Write@i,f
  1400  05E4                     l1111:
  1401  05E4  3008               	movlw	8
  1402  05E5  0273               	subwf	I2C_Write@i,w
  1403  05E6  1C03               	skipc
  1404  05E7  2DE9               	goto	u321
  1405  05E8  2DEA               	goto	u320
  1406  05E9                     u321:
  1407  05E9  2DC4               	goto	l1101
  1408  05EA                     u320:
  1409  05EA                     l67:
  1410  05EA  0008               	return
  1411  05EB                     __end_of_I2C_Write:
  1412                           
  1413                           	psect	text8
  1414  0591                     __ptext8:	
  1415 ;; *************** function _I2C_WaitACK *****************
  1416 ;; Defined at:
  1417 ;;		line 182 in file "newmain.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  time            1    2[COMMON] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      unsigned char 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0
  1433 ;;      Temps:          1       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 1
  1438 ;; This function calls:
  1439 ;;		_I2C_Stop
  1440 ;; This function is called by:
  1441 ;;		_I2C_WriteMulti
  1442 ;;		_I2C_ReadMultiPointer
  1443 ;;		_I2C_ReadMulti
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _I2C_WaitACK
  1449  0591                     _I2C_WaitACK:
  1450  0591                     l1113:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _I2C_WaitACK: [wreg+status,2+status,0+pclath+cstack]
  1453                           
  1454                           
  1455                           ;newmain.c: 184:     unsigned char time = 0;
  1456  0591  01F2               	clrf	I2C_WaitACK@time
  1457  0592                     l1115:
  1458                           
  1459                           ;newmain.c: 185:     TRISDbits.TRISD1 = 1;
  1460  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0594  1488               	bsf	8,1	;volatile
  1463  0595                     l1117:
  1464                           
  1465                           ;newmain.c: 186:     PORTDbits.RD1 = 1;
  1466  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0597  1488               	bsf	8,1	;volatile
  1469  0598                     l1119:
  1470                           
  1471                           ;newmain.c: 187:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1472  0598  2D99               	nop2	;2 cycle nop
  1473  0599  2D9A               	nop2	;2 cycle nop
  1474  059A  0000               	nop
  1475  059B                     l1121:
  1476                           
  1477                           ;newmain.c: 188:  PORTDbits.RD0 = 1;
  1478  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1479  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1480  059D  1408               	bsf	8,0	;volatile
  1481  059E                     l1123:
  1482                           
  1483                           ;newmain.c: 189:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1484  059E  2D9F               	nop2	;2 cycle nop
  1485  059F  2DA0               	nop2	;2 cycle nop
  1486  05A0  0000               	nop
  1487                           
  1488                           ;newmain.c: 190:  while(PORTDbits.RD1){
  1489  05A1  2DB3               	goto	l70
  1490  05A2                     l1125:
  1491                           
  1492                           ;newmain.c: 191:   time++;
  1493  05A2  3001               	movlw	1
  1494  05A3  00F1               	movwf	??_I2C_WaitACK
  1495  05A4  0871               	movf	??_I2C_WaitACK,w
  1496  05A5  07F2               	addwf	I2C_WaitACK@time,f
  1497  05A6                     l1127:
  1498                           
  1499                           ;newmain.c: 192:   if(time>250) {I2C_Stop(); return 1;}
  1500  05A6  30FB               	movlw	251
  1501  05A7  0272               	subwf	I2C_WaitACK@time,w
  1502  05A8  1C03               	skipc
  1503  05A9  2DAB               	goto	u331
  1504  05AA  2DAC               	goto	u330
  1505  05AB                     u331:
  1506  05AB  2DB3               	goto	l70
  1507  05AC                     u330:
  1508  05AC                     l1129:
  1509  05AC  120A  118A  2559  120A  118A  	fcall	_I2C_Stop
  1510  05B1                     l1131:
  1511  05B1  3001               	movlw	1
  1512  05B2  2DBB               	goto	l73
  1513  05B3                     l70:	
  1514                           ;newmain.c: 193:  }
  1515                           
  1516                           
  1517                           ;newmain.c: 190:  while(PORTDbits.RD1){
  1518  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1519  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1520  05B5  1888               	btfsc	8,1	;volatile
  1521  05B6  2DB8               	goto	u341
  1522  05B7  2DB9               	goto	u340
  1523  05B8                     u341:
  1524  05B8  2DA2               	goto	l1125
  1525  05B9                     u340:
  1526  05B9                     l74:
  1527                           
  1528                           ;newmain.c: 194:  PORTDbits.RD0 = 0;
  1529  05B9  1008               	bcf	8,0	;volatile
  1530  05BA                     l1135:
  1531                           
  1532                           ;newmain.c: 195:  return 0;
  1533  05BA  3000               	movlw	0
  1534  05BB                     l73:
  1535  05BB  0008               	return
  1536  05BC                     __end_of_I2C_WaitACK:
  1537                           
  1538                           	psect	text9
  1539  0559                     __ptext9:	
  1540 ;; *************** function _I2C_Stop *****************
  1541 ;; Defined at:
  1542 ;;		line 159 in file "newmain.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          1       0       0       0       0
  1559 ;;      Totals:         1       0       0       0       0
  1560 ;;Total ram usage:        1 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_I2C_WaitACK
  1566 ;;		_I2C_WriteMulti
  1567 ;;		_I2C_ReadMultiPointer
  1568 ;;		_I2C_ReadMulti
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _I2C_Stop
  1574  0559                     _I2C_Stop:
  1575  0559                     l1031:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _I2C_Stop: [wreg]
  1578                           
  1579                           
  1580                           ;newmain.c: 161:     TRISDbits.TRISD1 = 0;
  1581  0559  1683               	bsf	3,5	;RP0=1, select bank1
  1582  055A  1303               	bcf	3,6	;RP1=0, select bank1
  1583  055B  1088               	bcf	8,1	;volatile
  1584                           
  1585                           ;newmain.c: 162:     PORTDbits.RD1 = 0;
  1586  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1587  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1588  055E  1088               	bcf	8,1	;volatile
  1589                           
  1590                           ;newmain.c: 163:     PORTDbits.RD0 = 0;
  1591  055F  1008               	bcf	8,0	;volatile
  1592  0560                     l1033:
  1593                           
  1594                           ;newmain.c: 164:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  1595  0560  3006               	movlw	6
  1596  0561  00F0               	movwf	??_I2C_Stop
  1597  0562                     u677:
  1598  0562  0BF0               	decfsz	??_I2C_Stop,f
  1599  0563  2D62               	goto	u677
  1600  0564  0000               	nop
  1601  0565                     l1035:
  1602                           
  1603                           ;newmain.c: 165:     PORTDbits.RD0 = 1;
  1604  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0567  1408               	bsf	8,0	;volatile
  1607                           
  1608                           ;newmain.c: 166:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  1609  0568  3006               	movlw	6
  1610  0569  00F0               	movwf	??_I2C_Stop
  1611  056A                     u687:
  1612  056A  0BF0               	decfsz	??_I2C_Stop,f
  1613  056B  2D6A               	goto	u687
  1614  056C  0000               	nop
  1615  056D                     l1037:
  1616                           
  1617                           ;newmain.c: 167:     PORTDbits.RD1 = 1;
  1618  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1619  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1620  056F  1488               	bsf	8,1	;volatile
  1621  0570                     l62:
  1622  0570  0008               	return
  1623  0571                     __end_of_I2C_Stop:
  1624                           
  1625                           	psect	text10
  1626  0541                     __ptext10:	
  1627 ;; *************** function _I2C_Start *****************
  1628 ;; Defined at:
  1629 ;;		line 149 in file "newmain.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0
  1645 ;;      Temps:          1       0       0       0       0
  1646 ;;      Totals:         1       0       0       0       0
  1647 ;;Total ram usage:        1 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_I2C_WriteMulti
  1653 ;;		_I2C_ReadMultiPointer
  1654 ;;		_I2C_ReadMulti
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _I2C_Start
  1660  0541                     _I2C_Start:
  1661  0541                     l1085:	
  1662                           ;incstack = 0
  1663                           ; Regs used in _I2C_Start: [wreg]
  1664                           
  1665                           
  1666                           ;newmain.c: 151:     TRISDbits.TRISD1 = 0;
  1667  0541  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0542  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0543  1088               	bcf	8,1	;volatile
  1670                           
  1671                           ;newmain.c: 152:     PORTDbits.RD1 = 1;
  1672  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0546  1488               	bsf	8,1	;volatile
  1675                           
  1676                           ;newmain.c: 153:     PORTDbits.RD0 = 1;
  1677  0547  1408               	bsf	8,0	;volatile
  1678  0548                     l1087:
  1679                           
  1680                           ;newmain.c: 154:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  1681  0548  3006               	movlw	6
  1682  0549  00F0               	movwf	??_I2C_Start
  1683  054A                     u697:
  1684  054A  0BF0               	decfsz	??_I2C_Start,f
  1685  054B  2D4A               	goto	u697
  1686  054C  0000               	nop
  1687  054D                     l1089:
  1688                           
  1689                           ;newmain.c: 155:     PORTDbits.RD1 = 0;
  1690  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1691  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1692  054F  1088               	bcf	8,1	;volatile
  1693                           
  1694                           ;newmain.c: 156:     _delay((unsigned long)((4)*(20000000/4000000.0)));
  1695  0550  3006               	movlw	6
  1696  0551  00F0               	movwf	??_I2C_Start
  1697  0552                     u707:
  1698  0552  0BF0               	decfsz	??_I2C_Start,f
  1699  0553  2D52               	goto	u707
  1700  0554  0000               	nop
  1701  0555                     l1091:
  1702                           
  1703                           ;newmain.c: 157:     PORTDbits.RD0 = 0;
  1704  0555  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0556  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0557  1008               	bcf	8,0	;volatile
  1707  0558                     l59:
  1708  0558  0008               	return
  1709  0559                     __end_of_I2C_Start:
  1710                           
  1711                           	psect	text11
  1712  061A                     __ptext11:	
  1713 ;; *************** function _I2C_Read *****************
  1714 ;; Defined at:
  1715 ;;		line 217 in file "newmain.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  ACK             1    wreg     unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  ACK             1    2[COMMON] unsigned char 
  1720 ;;  i               1    4[COMMON] unsigned char 
  1721 ;;  Rvalue          1    3[COMMON] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      unsigned char 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         0       0       0       0       0
  1732 ;;      Locals:         3       0       0       0       0
  1733 ;;      Temps:          1       0       0       0       0
  1734 ;;      Totals:         4       0       0       0       0
  1735 ;;Total ram usage:        4 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 1
  1738 ;; This function calls:
  1739 ;;		_I2C_ACK
  1740 ;;		_I2C_NACK
  1741 ;; This function is called by:
  1742 ;;		_I2C_ReadMultiPointer
  1743 ;;		_I2C_ReadMulti
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _I2C_Read
  1749  061A                     _I2C_Read:
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1753                           ;I2C_Read@ACK stored from wreg
  1754  061A  00F2               	movwf	I2C_Read@ACK
  1755  061B                     l1139:
  1756  061B  01F3               	clrf	I2C_Read@Rvalue
  1757  061C                     l1141:
  1758                           
  1759                           ;newmain.c: 220:  TRISDbits.TRISD1 = 1;
  1760  061C  1683               	bsf	3,5	;RP0=1, select bank1
  1761  061D  1303               	bcf	3,6	;RP1=0, select bank1
  1762  061E  1488               	bsf	8,1	;volatile
  1763                           
  1764                           ;newmain.c: 221:  for(i=0;i<8;i++)
  1765  061F  01F4               	clrf	I2C_Read@i
  1766  0620                     l83:
  1767                           
  1768                           ;newmain.c: 222:     {;newmain.c: 223:   PORTDbits.RD0=0;
  1769  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0621  1008               	bcf	8,0	;volatile
  1771  0622                     l1147:
  1772                           
  1773                           ;newmain.c: 224:   _delay((unsigned long)((2)*(20000000/4000000.0)));
  1774  0622  3003               	movlw	3
  1775  0623  00F1               	movwf	??_I2C_Read
  1776  0624                     u717:
  1777  0624  0BF1               	decfsz	??_I2C_Read,f
  1778  0625  2E24               	goto	u717
  1779  0626                     l1149:
  1780                           
  1781                           ;newmain.c: 225:   PORTDbits.RD0=1;
  1782  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0628  1408               	bsf	8,0	;volatile
  1785                           
  1786                           ;newmain.c: 226:   _delay((unsigned long)((2)*(20000000/4000000.0)));
  1787  0629  3003               	movlw	3
  1788  062A  00F1               	movwf	??_I2C_Read
  1789  062B                     u727:
  1790  062B  0BF1               	decfsz	??_I2C_Read,f
  1791  062C  2E2B               	goto	u727
  1792                           
  1793                           ;newmain.c: 227:   Rvalue<<=1;
  1794  062D  1003               	clrc
  1795  062E  0DF3               	rlf	I2C_Read@Rvalue,f
  1796  062F                     l1151:
  1797                           
  1798                           ;newmain.c: 228:   if(PORTDbits.RD1) Rvalue++;
  1799  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0631  1C88               	btfss	8,1	;volatile
  1802  0632  2E34               	goto	u351
  1803  0633  2E35               	goto	u350
  1804  0634                     u351:
  1805  0634  2E39               	goto	l85
  1806  0635                     u350:
  1807  0635                     l1153:
  1808  0635  3001               	movlw	1
  1809  0636  00F1               	movwf	??_I2C_Read
  1810  0637  0871               	movf	??_I2C_Read,w
  1811  0638  07F3               	addwf	I2C_Read@Rvalue,f
  1812  0639                     l85:
  1813                           
  1814                           ;newmain.c: 229:  }
  1815  0639  3001               	movlw	1
  1816  063A  00F1               	movwf	??_I2C_Read
  1817  063B  0871               	movf	??_I2C_Read,w
  1818  063C  07F4               	addwf	I2C_Read@i,f
  1819  063D                     l1155:
  1820  063D  3008               	movlw	8
  1821  063E  0274               	subwf	I2C_Read@i,w
  1822  063F  1C03               	skipc
  1823  0640  2E42               	goto	u361
  1824  0641  2E43               	goto	u360
  1825  0642                     u361:
  1826  0642  2E20               	goto	l83
  1827  0643                     u360:
  1828  0643                     l1157:
  1829                           
  1830                           ;newmain.c: 230:  if(!ACK)
  1831  0643  0872               	movf	I2C_Read@ACK,w
  1832  0644  1D03               	btfss	3,2
  1833  0645  2E47               	goto	u371
  1834  0646  2E48               	goto	u370
  1835  0647                     u371:
  1836  0647  2E4E               	goto	l1161
  1837  0648                     u370:
  1838  0648                     l1159:
  1839                           
  1840                           ;newmain.c: 231:     {;newmain.c: 232:   I2C_ACK();
  1841  0648  120A  118A  2511  120A  118A  	fcall	_I2C_ACK
  1842                           
  1843                           ;newmain.c: 233:  }
  1844  064D  2E53               	goto	l1163
  1845  064E                     l1161:
  1846                           
  1847                           ;newmain.c: 235:     {;newmain.c: 236:   I2C_NACK();
  1848  064E  120A  118A  2529  120A  118A  	fcall	_I2C_NACK
  1849  0653                     l1163:
  1850                           
  1851                           ;newmain.c: 238:     return Rvalue;
  1852  0653  0873               	movf	I2C_Read@Rvalue,w
  1853  0654                     l88:
  1854  0654  0008               	return
  1855  0655                     __end_of_I2C_Read:
  1856                           
  1857                           	psect	text12
  1858  0529                     __ptext12:	
  1859 ;; *************** function _I2C_NACK *****************
  1860 ;; Defined at:
  1861 ;;		line 207 in file "newmain.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0
  1877 ;;      Temps:          1       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_I2C_Read
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _I2C_NACK
  1890  0529                     _I2C_NACK:
  1891  0529                     l1047:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _I2C_NACK: [wreg]
  1894                           
  1895                           
  1896                           ;newmain.c: 209:     PORTDbits.RD0 = 0;
  1897  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1898  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1899  052B  1008               	bcf	8,0	;volatile
  1900                           
  1901                           ;newmain.c: 210:     TRISDbits.TRISD1 = 0;
  1902  052C  1683               	bsf	3,5	;RP0=1, select bank1
  1903  052D  1303               	bcf	3,6	;RP1=0, select bank1
  1904  052E  1088               	bcf	8,1	;volatile
  1905                           
  1906                           ;newmain.c: 211:  PORTDbits.RD1 = 1;
  1907  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0531  1488               	bsf	8,1	;volatile
  1910  0532                     l1049:
  1911                           
  1912                           ;newmain.c: 212:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  1913  0532  3003               	movlw	3
  1914  0533  00F0               	movwf	??_I2C_NACK
  1915  0534                     u737:
  1916  0534  0BF0               	decfsz	??_I2C_NACK,f
  1917  0535  2D34               	goto	u737
  1918  0536                     l1051:
  1919                           
  1920                           ;newmain.c: 213:  PORTDbits.RD0 = 1;
  1921  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0538  1408               	bsf	8,0	;volatile
  1924                           
  1925                           ;newmain.c: 214:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  1926  0539  3003               	movlw	3
  1927  053A  00F0               	movwf	??_I2C_NACK
  1928  053B                     u747:
  1929  053B  0BF0               	decfsz	??_I2C_NACK,f
  1930  053C  2D3B               	goto	u747
  1931  053D                     l1053:
  1932                           
  1933                           ;newmain.c: 215:  PORTDbits.RD0 = 0;
  1934  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1935  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1936  053F  1008               	bcf	8,0	;volatile
  1937  0540                     l80:
  1938  0540  0008               	return
  1939  0541                     __end_of_I2C_NACK:
  1940                           
  1941                           	psect	text13
  1942  0511                     __ptext13:	
  1943 ;; *************** function _I2C_ACK *****************
  1944 ;; Defined at:
  1945 ;;		line 197 in file "newmain.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0
  1961 ;;      Temps:          1       0       0       0       0
  1962 ;;      Totals:         1       0       0       0       0
  1963 ;;Total ram usage:        1 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_I2C_Read
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _I2C_ACK
  1974  0511                     _I2C_ACK:
  1975  0511                     l1039:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _I2C_ACK: [wreg]
  1978                           
  1979                           
  1980                           ;newmain.c: 199:     PORTDbits.RD0 = 0;
  1981  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0513  1008               	bcf	8,0	;volatile
  1984                           
  1985                           ;newmain.c: 200:     TRISDbits.TRISD1 = 0;
  1986  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1987  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1988  0516  1088               	bcf	8,1	;volatile
  1989                           
  1990                           ;newmain.c: 201:  PORTDbits.RD1 = 0;
  1991  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0519  1088               	bcf	8,1	;volatile
  1994  051A                     l1041:
  1995                           
  1996                           ;newmain.c: 202:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  1997  051A  3003               	movlw	3
  1998  051B  00F0               	movwf	??_I2C_ACK
  1999  051C                     u757:
  2000  051C  0BF0               	decfsz	??_I2C_ACK,f
  2001  051D  2D1C               	goto	u757
  2002  051E                     l1043:
  2003                           
  2004                           ;newmain.c: 203:  PORTDbits.RD0 = 1;
  2005  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2006  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0520  1408               	bsf	8,0	;volatile
  2008                           
  2009                           ;newmain.c: 204:  _delay((unsigned long)((2)*(20000000/4000000.0)));
  2010  0521  3003               	movlw	3
  2011  0522  00F0               	movwf	??_I2C_ACK
  2012  0523                     u767:
  2013  0523  0BF0               	decfsz	??_I2C_ACK,f
  2014  0524  2D23               	goto	u767
  2015  0525                     l1045:
  2016                           
  2017                           ;newmain.c: 205:  PORTDbits.RD0 = 0;
  2018  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0527  1008               	bcf	8,0	;volatile
  2021  0528                     l77:
  2022  0528  0008               	return
  2023  0529                     __end_of_I2C_ACK:
  2024                           
  2025                           	psect	text14
  2026  04F9                     __ptext14:	
  2027 ;; *************** function _I2C_Init *****************
  2028 ;; Defined at:
  2029 ;;		line 142 in file "newmain.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		None
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _I2C_Init
  2058  04F9                     _I2C_Init:
  2059  04F9                     l1211:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _I2C_Init: []
  2062                           
  2063                           
  2064                           ;newmain.c: 144:     TRISDbits.TRISD0 = 0;
  2065  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2066  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2067  04FB  1008               	bcf	8,0	;volatile
  2068                           
  2069                           ;newmain.c: 145:     TRISDbits.TRISD1 = 0;
  2070  04FC  1088               	bcf	8,1	;volatile
  2071                           
  2072                           ;newmain.c: 146:     PORTDbits.RD1 = 1;
  2073  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2074  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2075  04FF  1488               	bsf	8,1	;volatile
  2076                           
  2077                           ;newmain.c: 147:     PORTDbits.RD0 = 1;
  2078  0500  1408               	bsf	8,0	;volatile
  2079  0501                     l56:
  2080  0501  0008               	return
  2081  0502                     __end_of_I2C_Init:
  2082  007E                     btemp	set	126	;btemp
  2083  007E                     wtemp0	set	126
  2084                           
  2085                           	psect	config
  2086                           
  2087                           ;Config register CONFIG @ 0x2007
  2088                           ;	Oscillator Selection bits
  2089                           ;	FOSC = HS, HS oscillator
  2090                           ;	Watchdog Timer Enable bit
  2091                           ;	WDTE = OFF, WDT disabled
  2092                           ;	Power-up Timer Enable bit
  2093                           ;	PWRTE = OFF, PWRT disabled
  2094                           ;	Brown-out Reset Enable bit
  2095                           ;	BOREN = OFF, BOR disabled
  2096                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2097                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2098                           ;	Data EEPROM Memory Code Protection bit
  2099                           ;	CPD = OFF, Data EEPROM code protection off
  2100                           ;	Flash Program Memory Write Enable bits
  2101                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2102                           ;	In-Circuit Debugger Mode bit
  2103                           ;	DEBUG = 0x1, unprogrammed default
  2104                           ;	Flash Program Memory Code Protection bit
  2105                           ;	CP = OFF, Code protection off
  2106  2007                     	org	8199
  2107  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    I2C_ReadMultiPointer@Rvalue	PTR unsigned char  size(1) Largest target is 5
		 -> main@Rvalue(BANK0[5]), 

    I2C_WriteMulti@buff	PTR unsigned char  size(1) Largest target is 5
		 -> main@Data(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_I2C_ReadMultiPointer
    _main->_I2C_WriteMulti
    _LCD_Init->_LCD_Cmd
    _I2C_WriteMulti->_I2C_Write
    _I2C_ReadMultiPointer->_I2C_Read
    _I2C_WaitACK->_I2C_Stop
    _I2C_Read->_I2C_ACK
    _I2C_Read->_I2C_NACK

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    1277
                                             11 COMMON     3     3      0
                                              0 BANK0     11    11      0
                           _I2C_Init
               _I2C_ReadMultiPointer
                     _I2C_WriteMulti
                           _LCD_Char
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      88
                                              3 COMMON     2     2      0
                            _LCD_Cmd
                       _LCD_Cmd_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd_Init                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      66
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_WriteMulti                                       7     4      3     455
                                              4 COMMON     7     4      3
                          _I2C_Start
                           _I2C_Stop
                        _I2C_WaitACK
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_ReadMultiPointer                                 6     3      3     549
                                              5 COMMON     6     3      3
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                        _I2C_WaitACK
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            4     4      0      69
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _I2C_WaitACK                                          2     2      0      24
                                              1 COMMON     2     2      0
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     4      0      94
                                              1 COMMON     4     4      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_ReadMultiPointer
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_WaitACK
       _I2C_Stop
     _I2C_Write
   _I2C_WriteMulti
     _I2C_Start
     _I2C_Stop
     _I2C_WaitACK
     _I2C_Write
   _LCD_Char
   _LCD_Init
     _LCD_Cmd
     _LCD_Cmd_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 06 08:10:36 2022

                ?_LCD_Cmd_Init 0070             __size_of_I2C_Start 0018             __size_of_I2C_Write 002F  
                           l20 0510                             l23 0693                             l17 0619  
                           l26 0590                             l62 0570                             l70 05B3  
                           l56 0501                             l80 0540                             l73 05BB  
                           l74 05B9                             l83 0620                             l59 0558  
                           l67 05EA                             l91 0714                             l77 0528  
                           l85 0639                             l88 0654                             l97 075E  
                          l111 077A                            l112 078F                            l119 07DD  
                          l128 06F5                            u300 0607                            u301 0606  
                          u320 05EA                            u400 070F                            u321 05E9  
                          u401 070E                            u330 05AC                            u410 0724  
                          u331 05AB                            u315 05C7                            u411 0723  
                          u340 05B9                            u420 0741                            u341 05B8  
                          u421 0740                            u350 0635                            u430 0750  
                          u351 0634                            u431 074F                            u360 0643  
                          u440 0775                            u361 0642                            u441 0774  
                          u370 0648                            u450 078A                            u371 0647  
                          u451 0789                            u460 07A5                            u461 07A4  
                          u470 07AF                            u471 07AE                            u295 05F7  
                          u607 050D                            u560 06F5                            u385 057D  
                          u617 060B                            u561 06F4                            u707 0552  
                          u627 0615                            u717 0624                            u637 058C  
                          u727 062B                            u647 0759                            u737 0534  
                          u657 07D8                            u577 06C6                            u747 053B  
                          u667 05DA                            u587 0662                            u757 051C  
                          u677 0562                            u597 0671                            u767 0523  
                          u687 056A                            u697 054A                __end_of_I2C_ACK 0529  
                          fsr0 0004                            indf 0000           __size_of_I2C_WaitACK 002B  
            I2C_WriteMulti@len 0075              I2C_WriteMulti@reg 0074                __end_of_LCD_Cmd 061A  
                         l1101 05C4                           l1031 0559                           l1111 05E4  
                         l1103 05D5                           l1041 051A                           l1033 0560  
                         l1121 059B                           l1113 0591                           l1105 05D7  
                         l1201 0588                           l1211 04F9                           l1043 051E  
                         l1051 0536                           l1035 0565                           l1131 05B1  
                         l1123 059E                           l1115 0592                           l1107 05D8  
                         l1045 0525                           l1053 053D                           l1141 061C  
                         l1037 056D                           l1125 05A2                           l1117 0595  
                         l1109 05DD                           l1221 072B                           l1213 06FA  
                         l1061 05F3                           l1039 0511                           l1047 0529  
                         l1151 062F                           l1135 05BA                           l1127 05A6  
                         l1119 0598                           l1231 0750                           l1223 0737  
                         l1215 070F                           l1071 0607                           l1063 05F4  
                         l1055 05EC                           l1049 0532                           l1161 064E  
                         l1153 0635                           l1129 05AC                           l1241 07A5  
                         l1233 0755                           l1225 0741                           l1217 0724  
                         l1073 0611                           l1065 05FF                           l1057 05EF  
                         l1081 050A                           l1321 06B1                           l1163 0653  
                         l1155 063D                           l1147 0622                           l1139 061B  
                         l1091 0555                           l1251 07C8                           l1243 07AA  
                         l1235 0760                           l1227 0746                           l1219 0729  
                         l1067 0600                           l1059 05F2                           l1083 050B  
                         l1075 0503                           l1171 065E                           l1323 06C0  
                         l1315 0694                           l1157 0643                           l1149 0626  
                         l1085 0541                           l1093 05BD                           l1253 07CC  
                         l1245 07AF                           l1237 0775                           l1229 074A  
                         l1069 0601                           l1077 0506                           l1181 0681  
                         l1173 0667                           l1333 06DF                           l1325 06CD  
                         l1317 06A7                           l1159 0648                           l1087 0548  
                         l1095 05C3                           l1255 07CF                           l1239 078A  
                         l1191 0578                           l1079 0509                           l1183 0687  
                         l1175 066D                           l1167 0655                           l1335 06E9  
                         l1327 06DC                           l1319 06AC                           l1089 054D  
                         l1257 07D4                           l1249 07BC                           l1193 0579  
                         l1185 068D                           l1177 0675                           l1169 0658  
                         l1337 06EF                           l1195 057A                           l1187 0572  
                         l1179 067B                           l1197 0586                           l1189 0575  
                         l1199 0587               __end_of_I2C_NACK 0541                           _main 0694  
             __end_of_I2C_Init 0502               __end_of_I2C_Read 0655                           btemp 007E  
             __end_of_I2C_Stop 0571                           start 0000             I2C_WriteMulti@addr 0079  
           I2C_WriteMulti@buff 0076                 ??_LCD_Cmd_Init 0070               __end_of_LCD_Char 0591  
             __end_of_LCD_Init 0694                          ?_main 0070   __end_of_I2C_ReadMultiPointer 07DE  
                        _PORTB 0006                          _TRISB 0086                          main@i 002A  
            __end_of_I2C_Start 0559              __end_of_I2C_Write 05EB                          status 0003  
                        wtemp0 007E                __initialization 07DE                   __end_of_main 06F9  
                    ??_I2C_ACK 0070                         ??_main 007B                      ??_LCD_Cmd 0070  
                    I2C_Read@i 0074                      ?_I2C_NACK 0070                      ?_I2C_Init 0070  
                    ?_I2C_Read 0070                      ?_I2C_Stop 0070                I2C_Write@Tvalue 0072  
         __end_of_LCD_Cmd_Init 0511                      ?_LCD_Char 0070        __end_of__initialization 07FC  
                    ?_LCD_Init 0070           _I2C_ReadMultiPointer 075F                I2C_WriteMulti@i 007A  
                    LCD_Char@c 0072                 __pcstackCOMMON 0070                   __pidataBANK0 04F4  
                   ??_I2C_NACK 0070                     ??_I2C_Init 0070                     ??_I2C_Read 0071  
                   ??_I2C_Stop 0070                     ??_LCD_Char 0070                     ??_LCD_Init 0073  
        ?_I2C_ReadMultiPointer 0075                 I2C_Read@Rvalue 0073                     __pmaintext 0694  
                      _I2C_ACK 0511        __size_of_I2C_WriteMulti 0066                     I2C_Write@i 0073  
                ??_I2C_WaitACK 0071                        _LCD_Cmd 05EB       I2C_ReadMultiPointer@addr 007A  
                    _I2C_Start 0541                      _I2C_Write 05BC                        __ptext1 0655  
                      __ptext2 0502                        __ptext3 05EB                        __ptext4 0571  
                      __ptext5 06F9                        __ptext6 075F                        __ptext7 05BC  
                      __ptext8 0591                        __ptext9 0559          __size_of_LCD_Cmd_Init 000F  
          __end_of_I2C_WaitACK 05BC           end_of_initialization 07FC         ??_I2C_ReadMultiPointer 0078  
                   ?_I2C_Start 0070                     ?_I2C_Write 0070                   _LCD_Cmd_Init 0502  
                    _PORTBbits 0006                      _PORTDbits 0008              __size_of_I2C_NACK 0018  
                    _TRISDbits 0088              __size_of_I2C_Init 0009              __size_of_I2C_Read 003B  
            __size_of_I2C_Stop 0018                     main@Rvalue 0025                     LCD_Cmd@cmd 0072  
            __size_of_LCD_Char 0020              __size_of_LCD_Init 003F                 _I2C_WriteMulti 06F9  
                  _I2C_WaitACK 0591            start_initialization 07DE                    ??_I2C_Start 0070  
                  ??_I2C_Write 0070         __end_of_I2C_WriteMulti 075F                    __pdataBANK0 002B  
                     ?_I2C_ACK 0070                       ?_LCD_Cmd 0070                      ___latbits 0002  
                __pcstackBANK0 0020                    I2C_Read@ACK 0072                ?_I2C_WriteMulti 0074  
   I2C_ReadMultiPointer@Rvalue 0077        I2C_ReadMultiPointer@len 0076        I2C_ReadMultiPointer@reg 0075  
                     _I2C_NACK 0529                       _I2C_Init 04F9                       _I2C_Read 061A  
                     _I2C_Stop 0559                LCD_Cmd_Init@cmd 0071                       _LCD_Char 0571  
                     _LCD_Init 0655               __size_of_I2C_ACK 0018               __size_of_LCD_Cmd 002F  
__size_of_I2C_ReadMultiPointer 007F                   ?_I2C_WaitACK 0070                       __ptext10 0541  
                     __ptext11 061A                       __ptext12 0529                       __ptext13 0511  
                     __ptext14 04F9                I2C_WaitACK@time 0072                  __size_of_main 0065  
                     main@F933 002B                       main@Data 0020               ??_I2C_WriteMulti 0077  

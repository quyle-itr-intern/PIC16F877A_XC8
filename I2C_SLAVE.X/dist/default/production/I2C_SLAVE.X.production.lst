

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 19:31:04 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.32
    25                           ; Generated 02/02/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179                           
   180                           	psect	idataBANK0
   181  01ED                     __pidataBANK0:
   182                           
   183                           ;initializer for _Code7Seg
   184  01ED  343F               	retlw	63
   185  01EE  3406               	retlw	6
   186  01EF  345B               	retlw	91
   187  01F0  344F               	retlw	79
   188  01F1  3466               	retlw	102
   189  01F2  346D               	retlw	109
   190  01F3  347D               	retlw	125
   191  01F4  3407               	retlw	7
   192  01F5  34FF               	retlw	255
   193  01F6  346F               	retlw	111
   194                           
   195                           	psect	nvBANK0
   196  0035                     __pnvBANK0:
   197  0035                     _Tvalue:
   198  0035                     	ds	1
   199  0005                     _PORTA	set	5
   200  0006                     _PORTB	set	6
   201  0008                     _PORTDbits	set	8
   202  0014                     _SSPCONbits	set	20
   203  0013                     _SSPBUF	set	19
   204  0014                     _SSPCON	set	20
   205  000C                     _PIR1bits	set	12
   206  000B                     _INTCONbits	set	11
   207  0088                     _TRISDbits	set	136
   208  0086                     _TRISB	set	134
   209  0085                     _TRISA	set	133
   210  009F                     _ADCON1	set	159
   211  0094                     _SSPSTATbits	set	148
   212  0091                     _SSPCON2bits	set	145
   213  0093                     _SSPADD	set	147
   214  0094                     _SSPSTAT	set	148
   215  0087                     _TRISCbits	set	135
   216  008C                     _PIE1bits	set	140
   217                           
   218                           	psect	cinit
   219  0011                     start_initialization:	
   220                           ; #config settings
   221                           
   222  0011                     __initialization:
   223                           
   224                           ; Initialize objects allocated to BANK0
   225  0011  1383               	bcf	3,7	;select IRP bank0
   226  0012  3035               	movlw	low (__pdataBANK0+10)
   227  0013  00FD               	movwf	btemp+-1
   228  0014  3001               	movlw	high __pidataBANK0
   229  0015  00FE               	movwf	btemp
   230  0016  30ED               	movlw	low __pidataBANK0
   231  0017  00FF               	movwf	btemp+1
   232  0018  302B               	movlw	low __pdataBANK0
   233  0019  0084               	movwf	4
   234  001A  120A  118A  21D2  120A  118A  	fcall	init_ram0
   235                           
   236                           ; Clear objects allocated to BANK0
   237  001F  01B6               	clrf	__pbssBANK0& (0+127)
   238  0020                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  0020                     __end_of__initialization:
   242  0020  0183               	clrf	3
   243  0021  120A  118A  2935   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssBANK0
   246  0036                     __pbssBANK0:
   247  0036                     _Rvalue:
   248  0036                     	ds	1
   249                           
   250                           	psect	dataBANK0
   251  002B                     __pdataBANK0:
   252  002B                     _Code7Seg:
   253  002B                     	ds	10
   254                           
   255                           	psect	inittext
   256  01CE                     init_fetch0:	
   257                           ;	Called with low address in FSR and high address in W
   258                           
   259  01CE  087E               	movf	btemp,w
   260  01CF  008A               	movwf	10
   261  01D0  087F               	movf	btemp+1,w
   262  01D1  0082               	movwf	2
   263  01D2                     init_ram0:	
   264                           ;Called with:
   265                           ;	high address of idata address in btemp 
   266                           ;	low address of idata address in btemp+1 
   267                           ;	low address of data in FSR
   268                           ;	high address + 1 of data in btemp-1
   269                           
   270  01D2  120A  118A  21CE  120A  118A  	fcall	init_fetch0
   271  01D7  0080               	movwf	0
   272  01D8  0A84               	incf	4,f
   273  01D9  0804               	movf	4,w
   274  01DA  067D               	xorwf	btemp+-1,w
   275  01DB  1903               	btfsc	3,2
   276  01DC  3400               	retlw	0
   277  01DD  0AFF               	incf	btemp+1,f
   278  01DE  1903               	btfsc	3,2
   279  01DF  0AFE               	incf	btemp,f
   280  01E0  29D2               	goto	init_ram0
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_I2C_SInit:
   285  0070                     ?_I2C_SWrite:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ??_I2C_SWrite:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_I2C_SRead:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ??_I2C_SRead:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_isr1:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     I2C_SWrite@Tvalue:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	1
   309  0071                     I2C_SRead@Rvalue:
   310                           
   311                           ; 1 bytes @ 0x1
   312  0071                     	ds	1
   313  0072                     ??_isr1:
   314                           
   315                           ; 1 bytes @ 0x2
   316  0072                     	ds	3
   317  0075                     ??_I2C_SInit:
   318  0075                     ?___awdiv:	
   319                           ; 1 bytes @ 0x5
   320                           
   321  0075                     ?___awmod:	
   322                           ; 2 bytes @ 0x5
   323                           
   324  0075                     ___awdiv@divisor:	
   325                           ; 2 bytes @ 0x5
   326                           
   327  0075                     ___awmod@divisor:	
   328                           ; 2 bytes @ 0x5
   329                           
   330                           
   331                           ; 2 bytes @ 0x5
   332  0075                     	ds	2
   333  0077                     ___awdiv@dividend:
   334  0077                     ___awmod@dividend:	
   335                           ; 2 bytes @ 0x7
   336                           
   337                           
   338                           ; 2 bytes @ 0x7
   339  0077                     	ds	2
   340                           
   341                           	psect	cstackBANK0
   342  0020                     __pcstackBANK0:
   343  0020                     ??___awdiv:
   344  0020                     ??___awmod:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0020                     	ds	1
   350  0021                     ___awdiv@counter:
   351  0021                     ___awmod@counter:	
   352                           ; 1 bytes @ 0x1
   353                           
   354                           
   355                           ; 1 bytes @ 0x1
   356  0021                     	ds	1
   357  0022                     ___awdiv@sign:
   358  0022                     ___awmod@sign:	
   359                           ; 1 bytes @ 0x2
   360                           
   361                           
   362                           ; 1 bytes @ 0x2
   363  0022                     	ds	1
   364  0023                     ___awdiv@quotient:
   365                           
   366                           ; 2 bytes @ 0x3
   367  0023                     	ds	2
   368  0025                     ?_Show:
   369  0025                     Show@Rvalue:	
   370                           ; 1 bytes @ 0x5
   371                           
   372                           
   373                           ; 2 bytes @ 0x5
   374  0025                     	ds	2
   375  0027                     ??_Show:
   376                           
   377                           ; 1 bytes @ 0x7
   378  0027                     	ds	2
   379  0029                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x9
   382  0029                     	ds	2
   383                           
   384                           	psect	maintext
   385  0135                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 88 in file "newmain.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       2       0       0       0
   408 ;;      Totals:         0       2       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels required when called: 4
   411 ;; This function calls:
   412 ;;		_I2C_SInit
   413 ;;		_Show
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  0135                     _main:
   422  0135                     l949:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;newmain.c: 90:     I2C_SInit();
   428  0135  120A  118A  21B6  120A  118A  	fcall	_I2C_SInit
   429  013A                     l951:
   430                           
   431                           ;newmain.c: 91:     ADCON1 = 0x07;
   432  013A  3007               	movlw	7
   433  013B  1683               	bsf	3,5	;RP0=1, select bank1
   434  013C  1303               	bcf	3,6	;RP1=0, select bank1
   435  013D  009F               	movwf	31	;volatile
   436  013E                     l953:
   437                           
   438                           ;newmain.c: 92:     TRISA = 0xFF;
   439  013E  30FF               	movlw	255
   440  013F  0085               	movwf	5	;volatile
   441  0140                     l955:
   442                           
   443                           ;newmain.c: 93:     TRISB = 0;
   444  0140  0186               	clrf	6	;volatile
   445  0141                     l957:
   446                           
   447                           ;newmain.c: 94:     TRISDbits.TRISD0 = 0;
   448  0141  1008               	bcf	8,0	;volatile
   449  0142                     l959:
   450                           
   451                           ;newmain.c: 95:     TRISDbits.TRISD1 = 0;
   452  0142  1088               	bcf	8,1	;volatile
   453  0143                     l961:
   454                           
   455                           ;newmain.c: 96:     TRISDbits.TRISD2 = 0;
   456  0143  1108               	bcf	8,2	;volatile
   457  0144                     l963:
   458                           
   459                           ;newmain.c: 97:     TRISDbits.TRISD3 = 0;
   460  0144  1188               	bcf	8,3	;volatile
   461  0145                     l965:
   462                           
   463                           ;newmain.c: 100:     {;newmain.c: 101:         Tvalue = PORTA;
   464  0145  1283               	bcf	3,5	;RP0=0, select bank0
   465  0146  1303               	bcf	3,6	;RP1=0, select bank0
   466  0147  0805               	movf	5,w	;volatile
   467  0148  00A9               	movwf	??_main
   468  0149  0829               	movf	??_main,w
   469  014A  00B5               	movwf	_Tvalue
   470  014B                     l967:
   471                           
   472                           ;newmain.c: 102:         Show(Rvalue);
   473  014B  0836               	movf	_Rvalue,w
   474  014C  00A9               	movwf	??_main
   475  014D  01AA               	clrf	??_main+1
   476  014E  0829               	movf	??_main,w
   477  014F  00A5               	movwf	Show@Rvalue
   478  0150  082A               	movf	??_main+1,w
   479  0151  00A6               	movwf	Show@Rvalue+1
   480  0152  120A  118A  20E8  120A  118A  	fcall	_Show
   481  0157                     l969:
   482                           
   483                           ;newmain.c: 103:         _delay((unsigned long)((30)*(20000000/4000.0)));
   484  0157  30C3               	movlw	195
   485  0158  1283               	bcf	3,5	;RP0=0, select bank0
   486  0159  1303               	bcf	3,6	;RP1=0, select bank0
   487  015A  00AA               	movwf	??_main+1
   488  015B  30CC               	movlw	204
   489  015C  00A9               	movwf	??_main
   490  015D                     u517:
   491  015D  0BA9               	decfsz	??_main,f
   492  015E  295D               	goto	u517
   493  015F  0BAA               	decfsz	??_main+1,f
   494  0160  295D               	goto	u517
   495  0161  0000               	nop
   496  0162  2945               	goto	l965
   497  0163  120A  118A  280E   	ljmp	start
   498  0166                     __end_of_main:
   499                           
   500                           	psect	text1
   501  00E8                     __ptext1:	
   502 ;; *************** function _Show *****************
   503 ;; Defined at:
   504 ;;		line 72 in file "newmain.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  Rvalue          2    5[BANK0 ] int 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       2       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       2       0       0       0
   521 ;;      Totals:         0       4       0       0       0
   522 ;;Total ram usage:        4 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 3
   525 ;; This function calls:
   526 ;;		___awdiv
   527 ;;		___awmod
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _Show
   535  00E8                     _Show:
   536  00E8                     l935:	
   537                           ;incstack = 0
   538                           ; Regs used in _Show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   539                           
   540                           
   541                           ;newmain.c: 72: void Show(Rvalue);newmain.c: 73: {;newmain.c: 74:   PORTDbits.RD0 = 1;
   542  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   543  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   544  00EA  1408               	bsf	8,0	;volatile
   545                           
   546                           ;newmain.c: 75:   PORTDbits.RD1 = 1;
   547  00EB  1488               	bsf	8,1	;volatile
   548                           
   549                           ;newmain.c: 77:   PORTDbits.RD3 = 0;
   550  00EC  1188               	bcf	8,3	;volatile
   551  00ED                     l937:
   552                           
   553                           ;newmain.c: 78:   PORTB = Code7Seg[Rvalue%10];
   554  00ED  300A               	movlw	10
   555  00EE  00F5               	movwf	___awmod@divisor
   556  00EF  3000               	movlw	0
   557  00F0  00F6               	movwf	___awmod@divisor+1
   558  00F1  0826               	movf	Show@Rvalue+1,w
   559  00F2  00F8               	movwf	___awmod@dividend+1
   560  00F3  0825               	movf	Show@Rvalue,w
   561  00F4  00F7               	movwf	___awmod@dividend
   562  00F5  120A  118A  208D  120A  118A  	fcall	___awmod
   563  00FA  0875               	movf	?___awmod,w
   564  00FB  3E2B               	addlw	(low (_Code7Seg| 0))& (0+255)
   565  00FC  0084               	movwf	4
   566  00FD  1383               	bcf	3,7	;select IRP bank0
   567  00FE  0800               	movf	0,w
   568  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   569  0100  1303               	bcf	3,6	;RP1=0, select bank0
   570  0101  0086               	movwf	6	;volatile
   571  0102                     l939:
   572                           
   573                           ;newmain.c: 79:   _delay((unsigned long)((1)*(20000000/4000.0)));
   574  0102  3007               	movlw	7
   575  0103  1283               	bcf	3,5	;RP0=0, select bank0
   576  0104  1303               	bcf	3,6	;RP1=0, select bank0
   577  0105  00A8               	movwf	??_Show+1
   578  0106  307C               	movlw	124
   579  0107  00A7               	movwf	??_Show
   580  0108                     u527:
   581  0108  0BA7               	decfsz	??_Show,f
   582  0109  2908               	goto	u527
   583  010A  0BA8               	decfsz	??_Show+1,f
   584  010B  2908               	goto	u527
   585  010C  0000               	nop
   586  010D                     l941:
   587                           
   588                           ;newmain.c: 80:   PORTDbits.RD3 = 1;
   589  010D  1283               	bcf	3,5	;RP0=0, select bank0
   590  010E  1303               	bcf	3,6	;RP1=0, select bank0
   591  010F  1588               	bsf	8,3	;volatile
   592  0110                     l943:
   593                           
   594                           ;newmain.c: 82:   PORTDbits.RD2 = 0;
   595  0110  1108               	bcf	8,2	;volatile
   596  0111                     l945:
   597                           
   598                           ;newmain.c: 83:   PORTB = Code7Seg[Rvalue/10];
   599  0111  300A               	movlw	10
   600  0112  00F5               	movwf	___awdiv@divisor
   601  0113  3000               	movlw	0
   602  0114  00F6               	movwf	___awdiv@divisor+1
   603  0115  0826               	movf	Show@Rvalue+1,w
   604  0116  00F8               	movwf	___awdiv@dividend+1
   605  0117  0825               	movf	Show@Rvalue,w
   606  0118  00F7               	movwf	___awdiv@dividend
   607  0119  120A  118A  2024  120A  118A  	fcall	___awdiv
   608  011E  0875               	movf	?___awdiv,w
   609  011F  3E2B               	addlw	(low (_Code7Seg| 0))& (0+255)
   610  0120  0084               	movwf	4
   611  0121  1383               	bcf	3,7	;select IRP bank0
   612  0122  0800               	movf	0,w
   613  0123  1283               	bcf	3,5	;RP0=0, select bank0
   614  0124  1303               	bcf	3,6	;RP1=0, select bank0
   615  0125  0086               	movwf	6	;volatile
   616                           
   617                           ;newmain.c: 84:   _delay((unsigned long)((1)*(20000000/4000.0)));
   618  0126  3007               	movlw	7
   619  0127  1283               	bcf	3,5	;RP0=0, select bank0
   620  0128  1303               	bcf	3,6	;RP1=0, select bank0
   621  0129  00A8               	movwf	??_Show+1
   622  012A  307C               	movlw	124
   623  012B  00A7               	movwf	??_Show
   624  012C                     u537:
   625  012C  0BA7               	decfsz	??_Show,f
   626  012D  292C               	goto	u537
   627  012E  0BA8               	decfsz	??_Show+1,f
   628  012F  292C               	goto	u537
   629  0130  0000               	nop
   630  0131                     l947:
   631                           
   632                           ;newmain.c: 85:   PORTDbits.RD2 = 1;
   633  0131  1283               	bcf	3,5	;RP0=0, select bank0
   634  0132  1303               	bcf	3,6	;RP1=0, select bank0
   635  0133  1508               	bsf	8,2	;volatile
   636  0134                     l63:
   637  0134  0008               	return
   638  0135                     __end_of_Show:
   639                           
   640                           	psect	text2
   641  008D                     __ptext2:	
   642 ;; *************** function ___awmod *****************
   643 ;; Defined at:
   644 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awmod.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  divisor         2    5[COMMON] int 
   647 ;;  dividend        2    7[COMMON] int 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  sign            1    2[BANK0 ] unsigned char 
   650 ;;  counter         1    1[BANK0 ] unsigned char 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  2    5[COMMON] int 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         4       0       0       0       0
   661 ;;      Locals:         0       2       0       0       0
   662 ;;      Temps:          0       1       0       0       0
   663 ;;      Totals:         4       3       0       0       0
   664 ;;Total ram usage:        7 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 2
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_Show
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function ___awmod
   676  008D                     ___awmod:
   677  008D                     l871:	
   678                           ;incstack = 0
   679                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   680                           
   681  008D  1283               	bcf	3,5	;RP0=0, select bank0
   682  008E  1303               	bcf	3,6	;RP1=0, select bank0
   683  008F  01A2               	clrf	___awmod@sign
   684  0090                     l873:
   685  0090  1FF8               	btfss	___awmod@dividend+1,7
   686  0091  2893               	goto	u361
   687  0092  2894               	goto	u360
   688  0093                     u361:
   689  0093  289B               	goto	l879
   690  0094                     u360:
   691  0094                     l875:
   692  0094  09F7               	comf	___awmod@dividend,f
   693  0095  09F8               	comf	___awmod@dividend+1,f
   694  0096  0AF7               	incf	___awmod@dividend,f
   695  0097  1903               	skipnz
   696  0098  0AF8               	incf	___awmod@dividend+1,f
   697  0099                     l877:
   698  0099  01A2               	clrf	___awmod@sign
   699  009A  0AA2               	incf	___awmod@sign,f
   700  009B                     l879:
   701  009B  1FF6               	btfss	___awmod@divisor+1,7
   702  009C  289E               	goto	u371
   703  009D  289F               	goto	u370
   704  009E                     u371:
   705  009E  28A4               	goto	l883
   706  009F                     u370:
   707  009F                     l881:
   708  009F  09F5               	comf	___awmod@divisor,f
   709  00A0  09F6               	comf	___awmod@divisor+1,f
   710  00A1  0AF5               	incf	___awmod@divisor,f
   711  00A2  1903               	skipnz
   712  00A3  0AF6               	incf	___awmod@divisor+1,f
   713  00A4                     l883:
   714  00A4  0875               	movf	___awmod@divisor,w
   715  00A5  0476               	iorwf	___awmod@divisor+1,w
   716  00A6  1903               	btfsc	3,2
   717  00A7  28A9               	goto	u381
   718  00A8  28AA               	goto	u380
   719  00A9                     u381:
   720  00A9  28D9               	goto	l901
   721  00AA                     u380:
   722  00AA                     l885:
   723  00AA  01A1               	clrf	___awmod@counter
   724  00AB  0AA1               	incf	___awmod@counter,f
   725  00AC  28B8               	goto	l891
   726  00AD                     l887:
   727  00AD  3001               	movlw	1
   728  00AE                     u395:
   729  00AE  1003               	clrc
   730  00AF  0DF5               	rlf	___awmod@divisor,f
   731  00B0  0DF6               	rlf	___awmod@divisor+1,f
   732  00B1  3EFF               	addlw	-1
   733  00B2  1D03               	skipz
   734  00B3  28AE               	goto	u395
   735  00B4                     l889:
   736  00B4  3001               	movlw	1
   737  00B5  00A0               	movwf	??___awmod
   738  00B6  0820               	movf	??___awmod,w
   739  00B7  07A1               	addwf	___awmod@counter,f
   740  00B8                     l891:
   741  00B8  1FF6               	btfss	___awmod@divisor+1,7
   742  00B9  28BB               	goto	u401
   743  00BA  28BC               	goto	u400
   744  00BB                     u401:
   745  00BB  28AD               	goto	l887
   746  00BC                     u400:
   747  00BC                     l893:
   748  00BC  0876               	movf	___awmod@divisor+1,w
   749  00BD  0278               	subwf	___awmod@dividend+1,w
   750  00BE  1D03               	skipz
   751  00BF  28C2               	goto	u415
   752  00C0  0875               	movf	___awmod@divisor,w
   753  00C1  0277               	subwf	___awmod@dividend,w
   754  00C2                     u415:
   755  00C2  1C03               	skipc
   756  00C3  28C5               	goto	u411
   757  00C4  28C6               	goto	u410
   758  00C5                     u411:
   759  00C5  28CC               	goto	l897
   760  00C6                     u410:
   761  00C6                     l895:
   762  00C6  0875               	movf	___awmod@divisor,w
   763  00C7  02F7               	subwf	___awmod@dividend,f
   764  00C8  0876               	movf	___awmod@divisor+1,w
   765  00C9  1C03               	skipc
   766  00CA  03F8               	decf	___awmod@dividend+1,f
   767  00CB  02F8               	subwf	___awmod@dividend+1,f
   768  00CC                     l897:
   769  00CC  3001               	movlw	1
   770  00CD                     u425:
   771  00CD  1003               	clrc
   772  00CE  0CF6               	rrf	___awmod@divisor+1,f
   773  00CF  0CF5               	rrf	___awmod@divisor,f
   774  00D0  3EFF               	addlw	-1
   775  00D1  1D03               	skipz
   776  00D2  28CD               	goto	u425
   777  00D3                     l899:
   778  00D3  3001               	movlw	1
   779  00D4  02A1               	subwf	___awmod@counter,f
   780  00D5  1D03               	btfss	3,2
   781  00D6  28D8               	goto	u431
   782  00D7  28D9               	goto	u430
   783  00D8                     u431:
   784  00D8  28BC               	goto	l893
   785  00D9                     u430:
   786  00D9                     l901:
   787  00D9  0822               	movf	___awmod@sign,w
   788  00DA  1903               	btfsc	3,2
   789  00DB  28DD               	goto	u441
   790  00DC  28DE               	goto	u440
   791  00DD                     u441:
   792  00DD  28E3               	goto	l905
   793  00DE                     u440:
   794  00DE                     l903:
   795  00DE  09F7               	comf	___awmod@dividend,f
   796  00DF  09F8               	comf	___awmod@dividend+1,f
   797  00E0  0AF7               	incf	___awmod@dividend,f
   798  00E1  1903               	skipnz
   799  00E2  0AF8               	incf	___awmod@dividend+1,f
   800  00E3                     l905:
   801  00E3  0878               	movf	___awmod@dividend+1,w
   802  00E4  00F6               	movwf	?___awmod+1
   803  00E5  0877               	movf	___awmod@dividend,w
   804  00E6  00F5               	movwf	?___awmod
   805  00E7                     l331:
   806  00E7  0008               	return
   807  00E8                     __end_of___awmod:
   808                           
   809                           	psect	text3
   810  0024                     __ptext3:	
   811 ;; *************** function ___awdiv *****************
   812 ;; Defined at:
   813 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  divisor         2    5[COMMON] int 
   816 ;;  dividend        2    7[COMMON] int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  quotient        2    3[BANK0 ] int 
   819 ;;  sign            1    2[BANK0 ] unsigned char 
   820 ;;  counter         1    1[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  2    5[COMMON] int 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         4       0       0       0       0
   831 ;;      Locals:         0       4       0       0       0
   832 ;;      Temps:          0       1       0       0       0
   833 ;;      Totals:         4       5       0       0       0
   834 ;;Total ram usage:        9 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 2
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_Show
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function ___awdiv
   846  0024                     ___awdiv:
   847  0024                     l827:	
   848                           ;incstack = 0
   849                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   850                           
   851  0024  1283               	bcf	3,5	;RP0=0, select bank0
   852  0025  1303               	bcf	3,6	;RP1=0, select bank0
   853  0026  01A2               	clrf	___awdiv@sign
   854  0027                     l829:
   855  0027  1FF6               	btfss	___awdiv@divisor+1,7
   856  0028  282A               	goto	u261
   857  0029  282B               	goto	u260
   858  002A                     u261:
   859  002A  2832               	goto	l835
   860  002B                     u260:
   861  002B                     l831:
   862  002B  09F5               	comf	___awdiv@divisor,f
   863  002C  09F6               	comf	___awdiv@divisor+1,f
   864  002D  0AF5               	incf	___awdiv@divisor,f
   865  002E  1903               	skipnz
   866  002F  0AF6               	incf	___awdiv@divisor+1,f
   867  0030                     l833:
   868  0030  01A2               	clrf	___awdiv@sign
   869  0031  0AA2               	incf	___awdiv@sign,f
   870  0032                     l835:
   871  0032  1FF8               	btfss	___awdiv@dividend+1,7
   872  0033  2835               	goto	u271
   873  0034  2836               	goto	u270
   874  0035                     u271:
   875  0035  283F               	goto	l841
   876  0036                     u270:
   877  0036                     l837:
   878  0036  09F7               	comf	___awdiv@dividend,f
   879  0037  09F8               	comf	___awdiv@dividend+1,f
   880  0038  0AF7               	incf	___awdiv@dividend,f
   881  0039  1903               	skipnz
   882  003A  0AF8               	incf	___awdiv@dividend+1,f
   883  003B                     l839:
   884  003B  3001               	movlw	1
   885  003C  00A0               	movwf	??___awdiv
   886  003D  0820               	movf	??___awdiv,w
   887  003E  06A2               	xorwf	___awdiv@sign,f
   888  003F                     l841:
   889  003F  01A3               	clrf	___awdiv@quotient
   890  0040  01A4               	clrf	___awdiv@quotient+1
   891  0041                     l843:
   892  0041  0875               	movf	___awdiv@divisor,w
   893  0042  0476               	iorwf	___awdiv@divisor+1,w
   894  0043  1903               	btfsc	3,2
   895  0044  2846               	goto	u281
   896  0045  2847               	goto	u280
   897  0046                     u281:
   898  0046  287E               	goto	l863
   899  0047                     u280:
   900  0047                     l845:
   901  0047  01A1               	clrf	___awdiv@counter
   902  0048  0AA1               	incf	___awdiv@counter,f
   903  0049  2855               	goto	l851
   904  004A                     l847:
   905  004A  3001               	movlw	1
   906  004B                     u295:
   907  004B  1003               	clrc
   908  004C  0DF5               	rlf	___awdiv@divisor,f
   909  004D  0DF6               	rlf	___awdiv@divisor+1,f
   910  004E  3EFF               	addlw	-1
   911  004F  1D03               	skipz
   912  0050  284B               	goto	u295
   913  0051                     l849:
   914  0051  3001               	movlw	1
   915  0052  00A0               	movwf	??___awdiv
   916  0053  0820               	movf	??___awdiv,w
   917  0054  07A1               	addwf	___awdiv@counter,f
   918  0055                     l851:
   919  0055  1FF6               	btfss	___awdiv@divisor+1,7
   920  0056  2858               	goto	u301
   921  0057  2859               	goto	u300
   922  0058                     u301:
   923  0058  284A               	goto	l847
   924  0059                     u300:
   925  0059                     l853:
   926  0059  3001               	movlw	1
   927  005A                     u315:
   928  005A  1003               	clrc
   929  005B  0DA3               	rlf	___awdiv@quotient,f
   930  005C  0DA4               	rlf	___awdiv@quotient+1,f
   931  005D  3EFF               	addlw	-1
   932  005E  1D03               	skipz
   933  005F  285A               	goto	u315
   934  0060  0876               	movf	___awdiv@divisor+1,w
   935  0061  0278               	subwf	___awdiv@dividend+1,w
   936  0062  1D03               	skipz
   937  0063  2866               	goto	u325
   938  0064  0875               	movf	___awdiv@divisor,w
   939  0065  0277               	subwf	___awdiv@dividend,w
   940  0066                     u325:
   941  0066  1C03               	skipc
   942  0067  2869               	goto	u321
   943  0068  286A               	goto	u320
   944  0069                     u321:
   945  0069  2871               	goto	l859
   946  006A                     u320:
   947  006A                     l855:
   948  006A  0875               	movf	___awdiv@divisor,w
   949  006B  02F7               	subwf	___awdiv@dividend,f
   950  006C  0876               	movf	___awdiv@divisor+1,w
   951  006D  1C03               	skipc
   952  006E  03F8               	decf	___awdiv@dividend+1,f
   953  006F  02F8               	subwf	___awdiv@dividend+1,f
   954  0070                     l857:
   955  0070  1423               	bsf	___awdiv@quotient,0
   956  0071                     l859:
   957  0071  3001               	movlw	1
   958  0072                     u335:
   959  0072  1003               	clrc
   960  0073  0CF6               	rrf	___awdiv@divisor+1,f
   961  0074  0CF5               	rrf	___awdiv@divisor,f
   962  0075  3EFF               	addlw	-1
   963  0076  1D03               	skipz
   964  0077  2872               	goto	u335
   965  0078                     l861:
   966  0078  3001               	movlw	1
   967  0079  02A1               	subwf	___awdiv@counter,f
   968  007A  1D03               	btfss	3,2
   969  007B  287D               	goto	u341
   970  007C  287E               	goto	u340
   971  007D                     u341:
   972  007D  2859               	goto	l853
   973  007E                     u340:
   974  007E                     l863:
   975  007E  0822               	movf	___awdiv@sign,w
   976  007F  1903               	btfsc	3,2
   977  0080  2882               	goto	u351
   978  0081  2883               	goto	u350
   979  0082                     u351:
   980  0082  2888               	goto	l867
   981  0083                     u350:
   982  0083                     l865:
   983  0083  09A3               	comf	___awdiv@quotient,f
   984  0084  09A4               	comf	___awdiv@quotient+1,f
   985  0085  0AA3               	incf	___awdiv@quotient,f
   986  0086  1903               	skipnz
   987  0087  0AA4               	incf	___awdiv@quotient+1,f
   988  0088                     l867:
   989  0088  0824               	movf	___awdiv@quotient+1,w
   990  0089  00F6               	movwf	?___awdiv+1
   991  008A  0823               	movf	___awdiv@quotient,w
   992  008B  00F5               	movwf	?___awdiv
   993  008C                     l318:
   994  008C  0008               	return
   995  008D                     __end_of___awdiv:
   996                           
   997                           	psect	text4
   998  01B6                     __ptext4:	
   999 ;; *************** function _I2C_SInit *****************
  1000 ;; Defined at:
  1001 ;;		line 30 in file "newmain.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 2
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _I2C_SInit
  1031  01B6                     _I2C_SInit:
  1032  01B6                     l909:	
  1033                           ;incstack = 0
  1034                           ; Regs used in _I2C_SInit: [wreg]
  1035                           
  1036                           
  1037                           ;newmain.c: 33:     INTCONbits.GIE = 1;
  1038  01B6  178B               	bsf	11,7	;volatile
  1039                           
  1040                           ;newmain.c: 34:     INTCONbits.PEIE = 1;
  1041  01B7  170B               	bsf	11,6	;volatile
  1042                           
  1043                           ;newmain.c: 35:     PIE1bits.SSPIE = 1;
  1044  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1045  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1046  01BA  158C               	bsf	12,3	;volatile
  1047                           
  1048                           ;newmain.c: 36:     PIR1bits.SSPIF = 0;
  1049  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1050  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1051  01BD  118C               	bcf	12,3	;volatile
  1052                           
  1053                           ;newmain.c: 38:     TRISCbits.TRISC3 = 1;
  1054  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1055  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1056  01C0  1587               	bsf	7,3	;volatile
  1057                           
  1058                           ;newmain.c: 39:     TRISCbits.TRISC4 = 1;
  1059  01C1  1607               	bsf	7,4	;volatile
  1060  01C2                     l911:
  1061                           
  1062                           ;newmain.c: 41:     SSPCON = 0x36;
  1063  01C2  3036               	movlw	54
  1064  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1065  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1066  01C5  0094               	movwf	20	;volatile
  1067                           
  1068                           ;newmain.c: 42:     SSPSTAT = 0x40;
  1069  01C6  3040               	movlw	64
  1070  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1071  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1072  01C9  0094               	movwf	20	;volatile
  1073                           
  1074                           ;newmain.c: 44:     SSPADD = 0x10;
  1075  01CA  3010               	movlw	16
  1076  01CB  0093               	movwf	19	;volatile
  1077  01CC                     l913:
  1078                           
  1079                           ;newmain.c: 46:     SSPCON2bits.SEN = 1;
  1080  01CC  1411               	bsf	17,0	;volatile
  1081  01CD                     l47:
  1082  01CD  0008               	return
  1083  01CE                     __end_of_I2C_SInit:
  1084                           
  1085                           	psect	text5
  1086  0166                     __ptext5:	
  1087 ;; *************** function _isr1 *****************
  1088 ;; Defined at:
  1089 ;;		line 108 in file "newmain.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          3       0       0       0       0
  1106 ;;      Totals:         3       0       0       0       0
  1107 ;;Total ram usage:        3 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 1
  1110 ;; This function calls:
  1111 ;;		_I2C_SRead
  1112 ;;		_I2C_SWrite
  1113 ;; This function is called by:
  1114 ;;		Interrupt level 1
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _isr1
  1120  0166                     _isr1:
  1121  0166                     i1l971:
  1122                           
  1123                           ;newmain.c: 110:     if(PIR1bits.SSPIF)
  1124  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0168  1D8C               	btfss	12,3	;volatile
  1127  0169  296B               	goto	u48_21
  1128  016A  296C               	goto	u48_20
  1129  016B                     u48_21:
  1130  016B  2989               	goto	i1l79
  1131  016C                     u48_20:
  1132  016C                     i1l973:
  1133                           
  1134                           ;newmain.c: 111:     {;newmain.c: 112:         if(SSPSTATbits.R_W == 0)
  1135  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1136  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1137  016E  1914               	btfsc	20,2	;volatile
  1138  016F  2971               	goto	u49_21
  1139  0170  2972               	goto	u49_20
  1140  0171                     u49_21:
  1141  0171  2978               	goto	i1l977
  1142  0172                     u49_20:
  1143  0172                     i1l975:
  1144                           
  1145                           ;newmain.c: 113:         {;newmain.c: 114:             I2C_SRead(&Rvalue);
  1146  0172  3036               	movlw	(low (_Rvalue| 0))& (0+255)
  1147  0173  120A  118A  2192  120A  118A  	fcall	_I2C_SRead
  1148  0178                     i1l977:
  1149                           
  1150                           ;newmain.c: 116:         if(SSPSTATbits.R_W == 1)
  1151  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1152  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1153  017A  1D14               	btfss	20,2	;volatile
  1154  017B  297D               	goto	u50_21
  1155  017C  297E               	goto	u50_20
  1156  017D                     u50_21:
  1157  017D  2986               	goto	i1l981
  1158  017E                     u50_20:
  1159  017E                     i1l979:
  1160                           
  1161                           ;newmain.c: 117:         {;newmain.c: 118:             I2C_SWrite(Tvalue);
  1162  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1163  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0180  0835               	movf	_Tvalue,w
  1165  0181  120A  118A  21E1  120A  118A  	fcall	_I2C_SWrite
  1166  0186                     i1l981:
  1167                           
  1168                           ;newmain.c: 120:         PIR1bits.SSPIF = 0;
  1169  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0188  118C               	bcf	12,3	;volatile
  1172  0189                     i1l79:
  1173  0189  0874               	movf	??_isr1+2,w
  1174  018A  008A               	movwf	10
  1175  018B  0873               	movf	??_isr1+1,w
  1176  018C  0084               	movwf	4
  1177  018D  0E72               	swapf	??_isr1,w
  1178  018E  0083               	movwf	3
  1179  018F  0EFE               	swapf	btemp,f
  1180  0190  0E7E               	swapf	btemp,w
  1181  0191  0009               	retfie
  1182  0192                     __end_of_isr1:
  1183                           
  1184                           	psect	intentry
  1185  0004                     __pintentry:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1188                           
  1189  0004                     interrupt_function:
  1190  007E                     saved_w	set	btemp
  1191  0004  00FE               	movwf	btemp
  1192  0005  0E03               	swapf	3,w
  1193  0006  00F2               	movwf	??_isr1
  1194  0007  0804               	movf	4,w
  1195  0008  00F3               	movwf	??_isr1+1
  1196  0009  080A               	movf	10,w
  1197  000A  00F4               	movwf	??_isr1+2
  1198  000B  120A  118A  2966   	ljmp	_isr1
  1199                           
  1200                           	psect	text6
  1201  01E1                     __ptext6:	
  1202 ;; *************** function _I2C_SWrite *****************
  1203 ;; Defined at:
  1204 ;;		line 48 in file "newmain.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  Tvalue          1    wreg     unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  Tvalue          1    0[COMMON] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         1       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         1       0       0       0       0
  1222 ;;Total ram usage:        1 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_isr1
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _I2C_SWrite
  1233  01E1                     _I2C_SWrite:
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _I2C_SWrite: [wreg]
  1237                           ;I2C_SWrite@Tvalue stored from wreg
  1238  01E1  00F0               	movwf	I2C_SWrite@Tvalue
  1239  01E2                     i1l915:
  1240                           
  1241                           ;newmain.c: 48: void I2C_SWrite(unsigned char Tvalue);newmain.c: 49: {;newmain.c: 51:   
      +                            SSPBUF = Tvalue;
  1242  01E2  0870               	movf	I2C_SWrite@Tvalue,w
  1243  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1244  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1245  01E5  0093               	movwf	19	;volatile
  1246  01E6                     i1l917:
  1247                           
  1248                           ;newmain.c: 53:     SSPCONbits.CKP = 1;
  1249  01E6  1614               	bsf	20,4	;volatile
  1250  01E7                     i1l919:
  1251                           
  1252                           ;newmain.c: 55:     PIR1bits.SSPIF = 0;
  1253  01E7  118C               	bcf	12,3	;volatile
  1254  01E8                     i1l50:	
  1255                           ;newmain.c: 56:     while(PIR1bits.SSPIF == 0);
  1256                           
  1257  01E8  1D8C               	btfss	12,3	;volatile
  1258  01E9  29EB               	goto	u45_21
  1259  01EA  29EC               	goto	u45_20
  1260  01EB                     u45_21:
  1261  01EB  29E8               	goto	i1l50
  1262  01EC                     u45_20:
  1263  01EC                     i1l53:
  1264  01EC  0008               	return
  1265  01ED                     __end_of_I2C_SWrite:
  1266                           
  1267                           	psect	text7
  1268  0192                     __ptext7:	
  1269 ;; *************** function _I2C_SRead *****************
  1270 ;; Defined at:
  1271 ;;		line 58 in file "newmain.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  Rvalue          1    wreg     PTR unsigned char 
  1274 ;;		 -> Rvalue(1), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  Rvalue          1    1[COMMON] PTR unsigned char 
  1277 ;;		 -> Rvalue(1), 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         1       0       0       0       0
  1289 ;;      Temps:          1       0       0       0       0
  1290 ;;      Totals:         2       0       0       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_isr1
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _I2C_SRead
  1302  0192                     _I2C_SRead:
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _I2C_SRead: [wreg-fsr0h+status,2]
  1306                           ;I2C_SRead@Rvalue stored from wreg
  1307  0192  00F1               	movwf	I2C_SRead@Rvalue
  1308  0193                     i1l921:
  1309                           
  1310                           ;newmain.c: 58: void I2C_SRead(unsigned char *Rvalue);newmain.c: 59: {;newmain.c: 60:   
      +                            if(SSPSTATbits.D_A == 0)
  1311  0193  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0194  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0195  1A94               	btfsc	20,5	;volatile
  1314  0196  2998               	goto	u46_21
  1315  0197  2999               	goto	u46_20
  1316  0198                     u46_21:
  1317  0198  29A5               	goto	i1l927
  1318  0199                     u46_20:
  1319  0199                     i1l923:
  1320                           
  1321                           ;newmain.c: 61:     {;newmain.c: 62:         *Rvalue = SSPBUF;
  1322  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1323  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1324  019B  0813               	movf	19,w	;volatile
  1325  019C  00F0               	movwf	??_I2C_SRead
  1326  019D  0871               	movf	I2C_SRead@Rvalue,w
  1327  019E  0084               	movwf	4
  1328  019F  0870               	movf	??_I2C_SRead,w
  1329  01A0  1383               	bcf	3,7	;select IRP bank0
  1330  01A1  0080               	movwf	0
  1331  01A2                     i1l925:
  1332                           
  1333                           ;newmain.c: 63:         *Rvalue = 0;
  1334  01A2  0871               	movf	I2C_SRead@Rvalue,w
  1335  01A3  0084               	movwf	4
  1336  01A4  0180               	clrf	0
  1337  01A5                     i1l927:
  1338                           
  1339                           ;newmain.c: 65:     PIR1bits.SSPIF = 0;
  1340  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1341  01A6  118C               	bcf	12,3	;volatile
  1342  01A7                     i1l929:
  1343                           
  1344                           ;newmain.c: 66:     SSPCONbits.SSPOV = 0;
  1345  01A7  1314               	bcf	20,6	;volatile
  1346  01A8                     i1l57:	
  1347                           ;newmain.c: 67:     while(PIR1bits.SSPIF == 0);
  1348                           
  1349  01A8  1D8C               	btfss	12,3	;volatile
  1350  01A9  29AB               	goto	u47_21
  1351  01AA  29AC               	goto	u47_20
  1352  01AB                     u47_21:
  1353  01AB  29A8               	goto	i1l57
  1354  01AC                     u47_20:
  1355  01AC                     i1l59:
  1356                           
  1357                           ;newmain.c: 68:     SSPCONbits.CKP = 0;
  1358  01AC  1214               	bcf	20,4	;volatile
  1359  01AD                     i1l931:
  1360                           
  1361                           ;newmain.c: 69:     *Rvalue = SSPBUF;
  1362  01AD  0813               	movf	19,w	;volatile
  1363  01AE  00F0               	movwf	??_I2C_SRead
  1364  01AF  0871               	movf	I2C_SRead@Rvalue,w
  1365  01B0  0084               	movwf	4
  1366  01B1  0870               	movf	??_I2C_SRead,w
  1367  01B2  1383               	bcf	3,7	;select IRP bank0
  1368  01B3  0080               	movwf	0
  1369  01B4                     i1l933:
  1370                           
  1371                           ;newmain.c: 70:     SSPCONbits.CKP = 1;
  1372  01B4  1614               	bsf	20,4	;volatile
  1373  01B5                     i1l60:
  1374  01B5  0008               	return
  1375  01B6                     __end_of_I2C_SRead:
  1376  007E                     btemp	set	126	;btemp
  1377  007E                     wtemp0	set	126
  1378                           
  1379                           	psect	config
  1380                           
  1381                           ;Config register CONFIG @ 0x2007
  1382                           ;	Oscillator Selection bits
  1383                           ;	FOSC = HS, HS oscillator
  1384                           ;	Watchdog Timer Enable bit
  1385                           ;	WDTE = OFF, WDT disabled
  1386                           ;	Power-up Timer Enable bit
  1387                           ;	PWRTE = OFF, PWRT disabled
  1388                           ;	Brown-out Reset Enable bit
  1389                           ;	BOREN = OFF, BOR disabled
  1390                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1391                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1392                           ;	Data EEPROM Memory Code Protection bit
  1393                           ;	CPD = OFF, Data EEPROM code protection off
  1394                           ;	Flash Program Memory Write Enable bits
  1395                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1396                           ;	In-Circuit Debugger Mode bit
  1397                           ;	DEBUG = 0x1, unprogrammed default
  1398                           ;	Flash Program Memory Code Protection bit
  1399                           ;	CP = OFF, Code protection off
  1400  2007                     	org	8199
  1401  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     11      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    I2C_SRead@Rvalue	PTR unsigned char  size(1) Largest target is 1
		 -> Rvalue(BANK0[1]), 


Critical Paths under _main in COMMON

    _Show->___awdiv
    _Show->___awmod

Critical Paths under _isr1 in COMMON

    _isr1->_I2C_SRead

Critical Paths under _main in BANK0

    _main->_Show
    _Show->___awdiv

Critical Paths under _isr1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1020
                                              9 BANK0      2     2      0
                          _I2C_SInit
                               _Show
 ---------------------------------------------------------------------------------
 (1) _Show                                                 4     2      2    1020
                                              5 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              5 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              5 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _I2C_SInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr1                                                 3     3      0     121
                                              2 COMMON     3     3      0
                          _I2C_SRead
                         _I2C_SWrite
 ---------------------------------------------------------------------------------
 (4) _I2C_SWrite                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2C_SRead                                            2     2      0      99
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_SInit
   _Show
     ___awdiv
     ___awmod

 _isr1 (ROOT)
   _I2C_SRead
   _I2C_SWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 19:31:04 2022

     __size_of_I2C_SInit 0018       __size_of_I2C_SRead 0024                        pc 0002  
            _SSPSTATbits 0094                       l47 01CD                       l63 0134  
           ___awdiv@sign 0022      __size_of_I2C_SWrite 000C                       fsr 0004  
                    l331 00E7                      l318 008C                      l901 00D9  
                    l911 01C2                      l831 002B                      l903 00DE  
                    l913 01CC                      l841 003F                      l833 0030  
                    l905 00E3                      l851 0055                      l843 0041  
                    l835 0032                      l827 0024                      l909 01B6  
                    l861 0078                      l853 0059                      l845 0047  
                    l837 0036                      l829 0027                      l941 010D  
                    l855 006A                      l847 004A                      l863 007E  
                    l839 003B                      l871 008D                      l943 0110  
                    l935 00E8                      l951 013A                      l865 0083  
                    l857 0070                      l849 0051                      l881 009F  
                    l873 0090                      l945 0111                      l937 00ED  
                    l961 0143                      l953 013E                      l867 0088  
                    l859 0071                      l891 00B8                      l883 00A4  
                    l875 0094                      l947 0131                      l939 0102  
                    l963 0144                      l955 0140                      l893 00BC  
                    l885 00AA                      l877 0099                      l965 0145  
                    l957 0141                      l949 0135                      l895 00C6  
                    l887 00AD                      l879 009B                      l967 014B  
                    l959 0142                      l897 00CC                      l889 00B4  
                    l969 0157                      l899 00D3                      u300 0059  
                    u301 0058                      u320 006A                      u400 00BC  
                    u321 0069                      u401 00BB                      u410 00C6  
                    u315 005A                      u411 00C5                      u340 007E  
                    u260 002B                      u341 007D                      u325 0066  
                    u261 002A                      u350 0083                      u270 0036  
                    u430 00D9                      u351 0082                      u335 0072  
                    u271 0035                      u431 00D8                      u415 00C2  
                    u280 0047                      u440 00DE                      u360 0094  
                    u281 0046                      u441 00DD                      u425 00CD  
                    u361 0093                      u370 009F                      u371 009E  
                    u380 00AA                      u381 00A9                      u517 015D  
                    u295 004B                      u527 0108                      u537 012C  
                    u395 00AE                      fsr0 0004                      indf 0000  
           ___awmod@sign 0022                     i1l50 01E8                     i1l60 01B5  
                   i1l53 01EC                     i1l57 01A8                     i1l59 01AC  
                   i1l79 0189                     _Show 00E8                     _isr1 0166  
                   _main 0135                     btemp 007E                     start 000E  
                  ?_Show 0025                    ?_isr1 0070                    ?_main 0070  
        __end_of___awdiv 008D          __end_of___awmod 00E8          ___awdiv@divisor 0075  
                  i1l921 0193                    i1l931 01AD                    i1l923 0199  
                  i1l915 01E2                    i1l933 01B4                    i1l925 01A2  
                  i1l917 01E6                    i1l927 01A5                    i1l919 01E7  
                  i1l929 01A7                    i1l971 0166                    i1l981 0186  
                  i1l973 016C                    i1l975 0172                    i1l977 0178  
                  i1l979 017E          ___awdiv@counter 0021                    u50_20 017E  
                  u50_21 017D                    _PORTA 0005                    _PORTB 0006  
                  u45_20 01EC                    u45_21 01EB                    u46_20 0199  
                  u46_21 0198                    u47_20 01AC                    u47_21 01AB  
                  u48_20 016C                    u48_21 016B                    u49_20 0172  
                  u49_21 0171                    _TRISA 0085                    _TRISB 0086  
      __end_of_I2C_SInit 01CE        __end_of_I2C_SRead 01B6                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_Show 0135             __end_of_isr1 0192             __end_of_main 0166  
                 ??_Show 0027                   ??_isr1 0072                   ??_main 0029  
                 _ADCON1 009F             ??_I2C_SWrite 0070         ___awdiv@dividend 0077  
             Show@Rvalue 0025                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013                   _Rvalue 0036                   _Tvalue 0035  
              ??___awdiv 0020                ??___awmod 0020         ___awdiv@quotient 0023  
        ___awmod@divisor 0075       __end_of_I2C_SWrite 01ED          ___awmod@counter 0021  
                 saved_w 007E  __end_of__initialization 0020           __pcstackCOMMON 0070  
           __pidataBANK0 01ED               __pbssBANK0 0036               __pmaintext 0135  
             __pintentry 0004                  _SSPSTAT 0094                _I2C_SInit 01B6  
              _I2C_SRead 0192                  ___awdiv 0024                  ___awmod 008D  
                __ptext1 00E8                  __ptext2 008D                  __ptext3 0024  
                __ptext4 01B6                  __ptext5 0166                  __ptext6 01E1  
                __ptext7 0192         ___awmod@dividend 0077          I2C_SRead@Rvalue 0071  
       I2C_SWrite@Tvalue 0070     end_of_initialization 0020               ?_I2C_SInit 0070  
             ?_I2C_SRead 0070                _PORTDbits 0008                _TRISCbits 0087  
              _TRISDbits 0088      start_initialization 0011              ??_I2C_SInit 0075  
            ??_I2C_SRead 0070               init_fetch0 01CE              __pdataBANK0 002B  
              ___latbits 0002            __pcstackBANK0 0020                __pnvBANK0 0035  
               ?___awdiv 0075                 ?___awmod 0075        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                 _Code7Seg 002B  
             _I2C_SWrite 01E1         __size_of___awdiv 0069         __size_of___awmod 005B  
          __size_of_Show 004D            __size_of_isr1 002C            __size_of_main 0031  
             _INTCONbits 000B                 init_ram0 01D2              ?_I2C_SWrite 0070  
               intlevel1 0000              _SSPCON2bits 0091               _SSPCONbits 0014  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 03 23:01:53 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.32
    34                           ; Generated 02/02/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188                           
   189                           	psect	idataBANK0
   190  0411                     __pidataBANK0:
   191                           
   192                           ;initializer for _DATA
   193  0411  340A               	retlw	10
   194                           
   195                           	psect	strings
   196  0003                     __pstrings:
   197  0003                     stringtab:
   198  0003                     __stringtab:
   199                           
   200                           ;	String table - string pointers are 1 byte each
   201  0003  1BFF               	btfsc	btemp+1,7
   202  0004  280D               	ljmp	stringcode
   203  0005  1383               	bcf	3,7
   204  0006  187F               	btfsc	btemp+1,0
   205  0007  1783               	bsf	3,7
   206  0008  0800               	movf	0,w
   207  0009  0A84               	incf	4,f
   208  000A  1903               	skipnz
   209  000B  0AFF               	incf	btemp+1,f
   210  000C  0008               	return
   211  000D                     stringcode:
   212  000D                     stringdir:
   213  000D  3000               	movlw	high stringdir
   214  000E  008A               	movwf	10
   215  000F  0804               	movf	4,w
   216  0010  0A84               	incf	4,f
   217  0011  0782               	addwf	2,f
   218  0012                     __stringbase:
   219  0012  3400               	retlw	0
   220  0013                     __end_of__stringtab:
   221  0013                     _dpowers:
   222  0013  3401               	retlw	1
   223  0014  3400               	retlw	0
   224  0015  340A               	retlw	10
   225  0016  3400               	retlw	0
   226  0017  3464               	retlw	100
   227  0018  3400               	retlw	0
   228  0019  34E8               	retlw	232
   229  001A  3403               	retlw	3
   230  001B  3410               	retlw	16
   231  001C  3427               	retlw	39
   232  001D                     __end_of_dpowers:
   233  0008                     _PORTDbits	set	8
   234  0006                     _PORTB	set	6
   235  0006                     _PORTBbits	set	6
   236  0013                     _SSPBUF	set	19
   237  000C                     _PIR1bits	set	12
   238  0014                     _SSPCONbits	set	20
   239  0014                     _SSPCON	set	20
   240  0088                     _TRISDbits	set	136
   241  0086                     _TRISB	set	134
   242  0091                     _SSPCON2bits	set	145
   243  0093                     _SSPADD	set	147
   244  0094                     _SSPSTATbits	set	148
   245  0091                     _SSPCON2	set	145
   246  0087                     _TRISCbits	set	135
   247  001D                     STR_2:
   248  001D  3425               	retlw	37	;'%'
   249  001E  3464               	retlw	100	;'d'
   250  001F  3420               	retlw	32	;' '
   251  0020  3420               	retlw	32	;' '
   252  0021  3420               	retlw	32	;' '
   253  0022  3420               	retlw	32	;' '
   254  0023  3420               	retlw	32	;' '
   255  0024  3420               	retlw	32	;' '
   256  0025  3420               	retlw	32	;' '
   257  0026  3400               	retlw	0
   258  0027                     STR_1:
   259  0027  3445               	retlw	69	;'E'
   260  0028  3445               	retlw	69	;'E'
   261  0029  3450               	retlw	80	;'P'
   262  002A  3452               	retlw	82	;'R'
   263  002B  344F               	retlw	79	;'O'
   264  002C  344D               	retlw	77	;'M'
   265  002D  3420               	retlw	32	;' '
   266  002E  343A               	retlw	58	;':'
   267  002F  3420               	retlw	32	;' '
   268  0030  3400               	retlw	0
   269                           
   270                           	psect	cinit
   271  07F5                     start_initialization:	
   272                           ; #config settings
   273                           
   274  07F5                     __initialization:
   275                           
   276                           ; Initialize objects allocated to BANK0
   277  07F5  120A  118A  2411  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   278  07FA  00B6               	movwf	__pdataBANK0& (0+127)
   279                           
   280                           ; Clear objects allocated to BANK0
   281  07FB  01B5               	clrf	__pbssBANK0& (0+127)
   282  07FC                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  07FC                     __end_of__initialization:
   286  07FC  0183               	clrf	3
   287  07FD  120A  118A  2E88   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssBANK0
   290  0035                     __pbssBANK0:
   291  0035                     _Rvalue:
   292  0035                     	ds	1
   293                           
   294                           	psect	dataBANK0
   295  0036                     __pdataBANK0:
   296  0036                     _DATA:
   297  0036                     	ds	1
   298                           
   299                           	psect	cstackCOMMON
   300  0070                     __pcstackCOMMON:
   301  0070                     ?_I2C_Init:
   302  0070                     ??_I2C_Init:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_I2C_Idle:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ??_I2C_Idle:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_I2C_Start:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_I2C_Restart:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_I2C_Stop:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_I2C_Write:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_LCD_Cmd:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_LCD_Cmd:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_LCD_Cmd_Init:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ??_LCD_Cmd_Init:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_LCD_Init:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_LCD_Char:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_LCD_Char:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_I2C_Read24C04:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?___lwdiv:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ___lwdiv@divisor:	
   354                           ; 2 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0070                     	ds	1
   359  0071                     LCD_Cmd_Init@cmd:
   360                           
   361                           ; 1 bytes @ 0x1
   362  0071                     	ds	1
   363  0072                     LCD_Cmd@cmd:
   364  0072                     LCD_Char@c:	
   365                           ; 1 bytes @ 0x2
   366                           
   367  0072                     ___lwdiv@dividend:	
   368                           ; 1 bytes @ 0x2
   369                           
   370                           
   371                           ; 2 bytes @ 0x2
   372  0072                     	ds	1
   373  0073                     ??_I2C_Start:
   374  0073                     ??_I2C_Restart:	
   375                           ; 1 bytes @ 0x3
   376                           
   377  0073                     ??_I2C_Stop:	
   378                           ; 1 bytes @ 0x3
   379                           
   380  0073                     ?_I2C_Read:	
   381                           ; 1 bytes @ 0x3
   382                           
   383  0073                     ??_I2C_Write:	
   384                           ; 1 bytes @ 0x3
   385                           
   386  0073                     ??_LCD_Init:	
   387                           ; 1 bytes @ 0x3
   388                           
   389  0073                     ?_LCD_String:	
   390                           ; 1 bytes @ 0x3
   391                           
   392  0073                     ?_LCD_GotoCursor:	
   393                           ; 1 bytes @ 0x3
   394                           
   395  0073                     I2C_Read@ACK:	
   396                           ; 1 bytes @ 0x3
   397                           
   398  0073                     I2C_Write@Tvalue:	
   399                           ; 1 bytes @ 0x3
   400                           
   401  0073                     LCD_GotoCursor@col:	
   402                           ; 1 bytes @ 0x3
   403                           
   404  0073                     LCD_String@str:	
   405                           ; 1 bytes @ 0x3
   406                           
   407                           
   408                           ; 2 bytes @ 0x3
   409  0073                     	ds	1
   410  0074                     ??_I2C_Read:
   411  0074                     ??_LCD_GotoCursor:	
   412                           ; 1 bytes @ 0x4
   413                           
   414  0074                     ?_I2C_Write24C04:	
   415                           ; 1 bytes @ 0x4
   416                           
   417  0074                     ??___lwdiv:	
   418                           ; 1 bytes @ 0x4
   419                           
   420  0074                     I2C_Write24C04@Data:	
   421                           ; 1 bytes @ 0x4
   422                           
   423                           
   424                           ; 1 bytes @ 0x4
   425  0074                     	ds	1
   426  0075                     ??_LCD_String:
   427  0075                     ??_I2C_Write24C04:	
   428                           ; 1 bytes @ 0x5
   429                           
   430  0075                     I2C_Read@Rvalue:	
   431                           ; 1 bytes @ 0x5
   432                           
   433  0075                     LCD_GotoCursor@row:	
   434                           ; 1 bytes @ 0x5
   435                           
   436  0075                     I2C_Write24C04@StartAddress:	
   437                           ; 1 bytes @ 0x5
   438                           
   439  0075                     ___lwdiv@quotient:	
   440                           ; 1 bytes @ 0x5
   441                           
   442                           
   443                           ; 2 bytes @ 0x5
   444  0075                     	ds	1
   445  0076                     ??_I2C_Read24C04:
   446  0076                     LCD_String@i:	
   447                           ; 1 bytes @ 0x6
   448                           
   449  0076                     _LCD_GotoCursor$360:	
   450                           ; 1 bytes @ 0x6
   451                           
   452                           
   453                           ; 2 bytes @ 0x6
   454  0076                     	ds	1
   455  0077                     ___lwdiv@counter:
   456                           
   457                           ; 1 bytes @ 0x7
   458  0077                     	ds	1
   459  0078                     ?___lwmod:
   460  0078                     LCD_GotoCursor@cmd:	
   461                           ; 2 bytes @ 0x8
   462                           
   463  0078                     I2C_Read24C04@ReadAddress:	
   464                           ; 1 bytes @ 0x8
   465                           
   466  0078                     ___lwmod@divisor:	
   467                           ; 1 bytes @ 0x8
   468                           
   469                           
   470                           ; 2 bytes @ 0x8
   471  0078                     	ds	2
   472  007A                     ___lwmod@dividend:
   473                           
   474                           ; 2 bytes @ 0xA
   475  007A                     	ds	2
   476  007C                     ??___lwmod:
   477                           
   478                           ; 1 bytes @ 0xC
   479  007C                     	ds	1
   480  007D                     ___lwmod@counter:
   481                           
   482                           ; 1 bytes @ 0xD
   483  007D                     	ds	1
   484                           
   485                           	psect	cstackBANK0
   486  0020                     __pcstackBANK0:
   487  0020                     ?_sprintf:
   488  0020                     sprintf@f:	
   489                           ; 2 bytes @ 0x0
   490                           
   491                           
   492                           ; 1 bytes @ 0x0
   493  0020                     	ds	3
   494  0023                     ??_sprintf:
   495                           
   496                           ; 1 bytes @ 0x3
   497  0023                     	ds	3
   498  0026                     sprintf@ap:
   499                           
   500                           ; 1 bytes @ 0x6
   501  0026                     	ds	1
   502  0027                     sprintf@flag:
   503                           
   504                           ; 1 bytes @ 0x7
   505  0027                     	ds	1
   506  0028                     sprintf@prec:
   507                           
   508                           ; 1 bytes @ 0x8
   509  0028                     	ds	1
   510  0029                     sprintf@val:
   511                           
   512                           ; 2 bytes @ 0x9
   513  0029                     	ds	2
   514  002B                     sprintf@sp:
   515                           
   516                           ; 1 bytes @ 0xB
   517  002B                     	ds	1
   518  002C                     sprintf@c:
   519                           
   520                           ; 1 bytes @ 0xC
   521  002C                     	ds	1
   522  002D                     ??_main:
   523                           
   524                           ; 1 bytes @ 0xD
   525  002D                     	ds	3
   526  0030                     main@EE:
   527                           
   528                           ; 5 bytes @ 0x10
   529  0030                     	ds	5
   530                           
   531                           	psect	maintext
   532  0688                     __pmaintext:	
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 253 in file "newmain.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  EE              5   16[BANK0 ] unsigned char [5]
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : B00/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       5       0       0       0
   554 ;;      Temps:          0       3       0       0       0
   555 ;;      Totals:         0       8       0       0       0
   556 ;;Total ram usage:        8 bytes
   557 ;; Hardware stack levels required when called: 3
   558 ;; This function calls:
   559 ;;		_I2C_Init
   560 ;;		_I2C_Read24C04
   561 ;;		_I2C_Write24C04
   562 ;;		_LCD_GotoCursor
   563 ;;		_LCD_Init
   564 ;;		_LCD_String
   565 ;;		_sprintf
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _main
   573  0688                     _main:
   574  0688                     l1407:	
   575                           ;incstack = 0
   576                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   577                           
   578                           
   579                           ;newmain.c: 255:     TRISDbits.TRISD0 = 1;
   580  0688  1683               	bsf	3,5	;RP0=1, select bank1
   581  0689  1303               	bcf	3,6	;RP1=0, select bank1
   582  068A  1408               	bsf	8,0	;volatile
   583  068B                     l1409:
   584                           
   585                           ;newmain.c: 256:     I2C_Init();
   586  068B  120A  118A  2447  120A  118A  	fcall	_I2C_Init
   587                           
   588                           ;newmain.c: 257:     LCD_Init();
   589  0690  120A  118A  25C0  120A  118A  	fcall	_LCD_Init
   590                           
   591                           ;newmain.c: 258:     char EE[5];;newmain.c: 259:     I2C_Write24C04(0x00, DATA);
   592  0695  1283               	bcf	3,5	;RP0=0, select bank0
   593  0696  1303               	bcf	3,6	;RP1=0, select bank0
   594  0697  0836               	movf	_DATA,w
   595  0698  00AD               	movwf	??_main
   596  0699  082D               	movf	??_main,w
   597  069A  00F4               	movwf	I2C_Write24C04@Data
   598  069B  3000               	movlw	0
   599  069C  120A  118A  248C  120A  118A  	fcall	_I2C_Write24C04
   600  06A1                     l1411:
   601                           
   602                           ;newmain.c: 261:     {;newmain.c: 262:         if(PORTDbits.RD0 == 0)
   603  06A1  1283               	bcf	3,5	;RP0=0, select bank0
   604  06A2  1303               	bcf	3,6	;RP1=0, select bank0
   605  06A3  1808               	btfsc	8,0	;volatile
   606  06A4  2EA6               	goto	u831
   607  06A5  2EA7               	goto	u830
   608  06A6                     u831:
   609  06A6  2EC7               	goto	l1419
   610  06A7                     u830:
   611  06A7                     l1413:
   612                           
   613                           ;newmain.c: 263:         {;newmain.c: 264:             DATA++;
   614  06A7  3001               	movlw	1
   615  06A8  00AD               	movwf	??_main
   616  06A9  082D               	movf	??_main,w
   617  06AA  07B6               	addwf	_DATA,f
   618  06AB                     l1415:
   619                           
   620                           ;newmain.c: 265:             _delay((unsigned long)((10)*(16000000/4000.0)));
   621  06AB  3034               	movlw	52
   622  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   623  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   624  06AE  00AE               	movwf	??_main+1
   625  06AF  30F1               	movlw	241
   626  06B0  00AD               	movwf	??_main
   627  06B1                     u857:
   628  06B1  0BAD               	decfsz	??_main,f
   629  06B2  2EB1               	goto	u857
   630  06B3  0BAE               	decfsz	??_main+1,f
   631  06B4  2EB1               	goto	u857
   632  06B5                     l1417:
   633                           
   634                           ;newmain.c: 266:             I2C_Write24C04(0x00+1, DATA);
   635  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   636  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   637  06B7  0836               	movf	_DATA,w
   638  06B8  00AD               	movwf	??_main
   639  06B9  082D               	movf	??_main,w
   640  06BA  00F4               	movwf	I2C_Write24C04@Data
   641  06BB  3001               	movlw	1
   642  06BC  120A  118A  248C  120A  118A  	fcall	_I2C_Write24C04
   643  06C1                     l146:	
   644                           ;newmain.c: 267:             while(!PORTDbits.RD0);
   645                           
   646  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   647  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   648  06C3  1C08               	btfss	8,0	;volatile
   649  06C4  2EC6               	goto	u841
   650  06C5  2EC7               	goto	u840
   651  06C6                     u841:
   652  06C6  2EC1               	goto	l146
   653  06C7                     u840:
   654  06C7                     l1419:
   655                           
   656                           ;newmain.c: 269:         LCD_GotoCursor(1,1);
   657  06C7  01F3               	clrf	LCD_GotoCursor@col
   658  06C8  0AF3               	incf	LCD_GotoCursor@col,f
   659  06C9  3001               	movlw	1
   660  06CA  120A  118A  2470  120A  118A  	fcall	_LCD_GotoCursor
   661  06CF                     l1421:
   662                           
   663                           ;newmain.c: 270:         I2C_Read24C04(0x00);
   664  06CF  3000               	movlw	0
   665  06D0  120A  118A  2552  120A  118A  	fcall	_I2C_Read24C04
   666  06D5                     l1423:
   667                           
   668                           ;newmain.c: 271:         LCD_String("EEPROM : ");
   669  06D5  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   670  06D6  00F3               	movwf	LCD_String@str
   671  06D7  3080               	movlw	128
   672  06D8  00F4               	movwf	LCD_String@str+1
   673  06D9  120A  118A  24CB  120A  118A  	fcall	_LCD_String
   674  06DE                     l1425:
   675                           
   676                           ;newmain.c: 272:         sprintf(EE, "%d       ", Rvalue);
   677  06DE  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   678  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   679  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   680  06E1  00AD               	movwf	??_main
   681  06E2  082D               	movf	??_main,w
   682  06E3  00A0               	movwf	sprintf@f
   683  06E4  0835               	movf	_Rvalue,w
   684  06E5  00AE               	movwf	??_main+1
   685  06E6  01AF               	clrf	??_main+2
   686  06E7  082E               	movf	??_main+1,w
   687  06E8  00A1               	movwf	?_sprintf+1
   688  06E9  082F               	movf	??_main+2,w
   689  06EA  00A2               	movwf	?_sprintf+2
   690  06EB  3030               	movlw	(low (main@EE| 0))& (0+255)
   691  06EC  120A  118A  270D  120A  118A  	fcall	_sprintf
   692  06F1                     l1427:
   693                           
   694                           ;newmain.c: 273:         LCD_String(EE);
   695  06F1  3030               	movlw	(low (main@EE| 0))& (0+255)
   696  06F2  00F3               	movwf	LCD_String@str
   697  06F3  3000               	movlw	0
   698  06F4  00F4               	movwf	LCD_String@str+1
   699  06F5  120A  118A  24CB  120A  118A  	fcall	_LCD_String
   700  06FA                     l1429:
   701                           
   702                           ;newmain.c: 274:         _delay((unsigned long)((50)*(16000000/4000.0)));
   703  06FA  3002               	movlw	2
   704  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   705  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   706  06FD  00AF               	movwf	??_main+2
   707  06FE  3004               	movlw	4
   708  06FF  00AE               	movwf	??_main+1
   709  0700  30B9               	movlw	185
   710  0701  00AD               	movwf	??_main
   711  0702                     u867:
   712  0702  0BAD               	decfsz	??_main,f
   713  0703  2F02               	goto	u867
   714  0704  0BAE               	decfsz	??_main+1,f
   715  0705  2F02               	goto	u867
   716  0706  0BAF               	decfsz	??_main+2,f
   717  0707  2F02               	goto	u867
   718  0708  2F09               	nop2
   719  0709  2EA1               	goto	l1411
   720  070A  120A  118A  2800   	ljmp	start
   721  070D                     __end_of_main:
   722                           
   723                           	psect	text1
   724  070D                     __ptext1:	
   725 ;; *************** function _sprintf *****************
   726 ;; Defined at:
   727 ;;		line 505 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  sp              1    wreg     PTR unsigned char 
   730 ;;		 -> main@EE(5), 
   731 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   732 ;;		 -> STR_2(10), 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   735 ;;		 -> main@EE(5), 
   736 ;;  tmpval          4    0        struct .
   737 ;;  val             2    9[BANK0 ] unsigned int 
   738 ;;  cp              2    0        PTR const unsigned char 
   739 ;;  len             2    0        unsigned int 
   740 ;;  c               1   12[BANK0 ] unsigned char 
   741 ;;  prec            1    8[BANK0 ] char 
   742 ;;  flag            1    7[BANK0 ] unsigned char 
   743 ;;  ap              1    6[BANK0 ] PTR void [1]
   744 ;;		 -> ?_sprintf(2), 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  2    0[BANK0 ] int 
   747 ;; Registers used:
   748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       3       0       0       0
   755 ;;      Locals:         0       7       0       0       0
   756 ;;      Temps:          0       3       0       0       0
   757 ;;      Totals:         0      13       0       0       0
   758 ;;Total ram usage:       13 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; Hardware stack levels required when called: 1
   761 ;; This function calls:
   762 ;;		___lwdiv
   763 ;;		___lwmod
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _sprintf
   771  070D                     _sprintf:
   772                           
   773                           ;incstack = 0
   774                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   775                           ;sprintf@sp stored from wreg
   776  070D  1283               	bcf	3,5	;RP0=0, select bank0
   777  070E  1303               	bcf	3,6	;RP1=0, select bank0
   778  070F  00AB               	movwf	sprintf@sp
   779  0710                     l1321:
   780                           
   781                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, 
      +                          const char * f, ...);D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 506:
      +                           {;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\F
      +                          ile Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 521:  signed char prec;;D:\File Install 
      +                          MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
   782  0710  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   783  0711  00A3               	movwf	??_sprintf
   784  0712  0823               	movf	??_sprintf,w
   785  0713  00A6               	movwf	sprintf@ap
   786                           
   787                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
   788  0714  2FDE               	goto	l1373
   789  0715                     l1323:
   790                           
   791                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
   792  0715  3025               	movlw	37
   793  0716  062C               	xorwf	sprintf@c,w
   794  0717  1903               	btfsc	3,2
   795  0718  2F1A               	goto	u741
   796  0719  2F1B               	goto	u740
   797  071A                     u741:
   798  071A  2F27               	goto	l1329
   799  071B                     u740:
   800  071B                     l1325:
   801                           
   802                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 557:   {;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   803  071B  082C               	movf	sprintf@c,w
   804  071C  00A3               	movwf	??_sprintf
   805  071D  082B               	movf	sprintf@sp,w
   806  071E  0084               	movwf	4
   807  071F  0823               	movf	??_sprintf,w
   808  0720  1383               	bcf	3,7	;select IRP bank0
   809  0721  0080               	movwf	0
   810  0722                     l1327:
   811  0722  3001               	movlw	1
   812  0723  00A3               	movwf	??_sprintf
   813  0724  0823               	movf	??_sprintf,w
   814  0725  07AB               	addwf	sprintf@sp,f
   815                           
   816                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 559:    continue;
   817  0726  2FDE               	goto	l1373
   818  0727                     l1329:
   819                           
   820                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   821  0727  01A7               	clrf	sprintf@flag
   822  0728                     l1333:	
   823                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) 
      +                          {
   824                           
   825  0728  3001               	movlw	1
   826  0729  07A0               	addwf	sprintf@f,f
   827  072A  30FF               	movlw	-1
   828  072B  0720               	addwf	sprintf@f,w
   829  072C  0084               	movwf	4
   830  072D  120A  118A  200D  120A  118A  	fcall	stringdir
   831  0732  00AC               	movwf	sprintf@c
   832  0733  00A3               	movwf	??_sprintf
   833  0734  01A4               	clrf	??_sprintf+1
   834                           
   835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   836                           ; Switch size 1, requested type "simple"
   837                           ; Number of cases is 1, Range of values is 0 to 0
   838                           ; switch strategies available:
   839                           ; Name         Instructions Cycles
   840                           ; simple_byte            4     3 (average)
   841                           ; direct_byte           11     8 (fixed)
   842                           ; jumptable            260     6 (fixed)
   843                           ;	Chosen strategy is simple_byte
   844  0735  0824               	movf	??_sprintf+1,w
   845  0736  3A00               	xorlw	0	; case 0
   846  0737  1903               	skipnz
   847  0738  2F3A               	goto	l1451
   848  0739  2FDE               	goto	l1373
   849  073A                     l1451:
   850                           
   851                           ; Switch size 1, requested type "simple"
   852                           ; Number of cases is 3, Range of values is 0 to 105
   853                           ; switch strategies available:
   854                           ; Name         Instructions Cycles
   855                           ; simple_byte           10     6 (average)
   856                           ; jumptable            260     6 (fixed)
   857                           ;	Chosen strategy is simple_byte
   858  073A  0823               	movf	??_sprintf,w
   859  073B  3A00               	xorlw	0	; case 0
   860  073C  1903               	skipnz
   861  073D  2FF0               	goto	l1375
   862  073E  3A64               	xorlw	100	; case 100
   863  073F  1903               	skipnz
   864  0740  2F45               	goto	l1335
   865  0741  3A0D               	xorlw	13	; case 105
   866  0742  1903               	skipnz
   867  0743  2F45               	goto	l1335
   868  0744  2FDE               	goto	l1373
   869  0745                     l1335:
   870                           
   871                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)
      +                          __va_arg((*(int **)ap), (int)0));
   872  0745  0826               	movf	sprintf@ap,w
   873  0746  0084               	movwf	4
   874  0747  1383               	bcf	3,7	;select IRP bank0
   875  0748  0800               	movf	0,w
   876  0749  00A9               	movwf	sprintf@val
   877  074A  0A84               	incf	4,f
   878  074B  0800               	movf	0,w
   879  074C  00AA               	movwf	sprintf@val+1
   880  074D                     l1337:
   881  074D  3002               	movlw	2
   882  074E  00A3               	movwf	??_sprintf
   883  074F  0823               	movf	??_sprintf,w
   884  0750  07A6               	addwf	sprintf@ap,f
   885  0751                     l1339:
   886                           
   887                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0
      +                          ) {
   888  0751  1FAA               	btfss	sprintf@val+1,7
   889  0752  2F54               	goto	u751
   890  0753  2F55               	goto	u750
   891  0754                     u751:
   892  0754  2F5E               	goto	l1345
   893  0755                     u750:
   894  0755                     l1341:
   895                           
   896                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
   897  0755  3003               	movlw	3
   898  0756  00A3               	movwf	??_sprintf
   899  0757  0823               	movf	??_sprintf,w
   900  0758  04A7               	iorwf	sprintf@flag,f
   901  0759                     l1343:
   902                           
   903                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
   904  0759  09A9               	comf	sprintf@val,f
   905  075A  09AA               	comf	sprintf@val+1,f
   906  075B  0AA9               	incf	sprintf@val,f
   907  075C  1903               	skipnz
   908  075D  0AAA               	incf	sprintf@val+1,f
   909  075E                     l1345:
   910                           
   911                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1292:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpower
      +                          s/sizeof dpowers[0] ; c++)
   912  075E  01AC               	clrf	sprintf@c
   913  075F  0AAC               	incf	sprintf@c,f
   914  0760                     l1351:
   915                           
   916                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowe
      +                          rs[c])
   917  0760  082C               	movf	sprintf@c,w
   918  0761  00A3               	movwf	??_sprintf
   919  0762  0723               	addwf	??_sprintf,w
   920  0763  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   921  0764  0084               	movwf	4
   922  0765  120A  118A  200D  120A  118A  	fcall	stringdir
   923  076A  00A4               	movwf	??_sprintf+1
   924  076B  120A  118A  200D  120A  118A  	fcall	stringdir
   925  0770  00A5               	movwf	??_sprintf+2
   926  0771  0825               	movf	??_sprintf+2,w
   927  0772  022A               	subwf	sprintf@val+1,w
   928  0773  1D03               	skipz
   929  0774  2F77               	goto	u765
   930  0775  0824               	movf	??_sprintf+1,w
   931  0776  0229               	subwf	sprintf@val,w
   932  0777                     u765:
   933  0777  1803               	skipnc
   934  0778  2F7A               	goto	u761
   935  0779  2F7B               	goto	u760
   936  077A                     u761:
   937  077A  2F7C               	goto	l1355
   938  077B                     u760:
   939  077B  2F86               	goto	l1357
   940  077C                     l1355:
   941  077C  3001               	movlw	1
   942  077D  00A3               	movwf	??_sprintf
   943  077E  0823               	movf	??_sprintf,w
   944  077F  07AC               	addwf	sprintf@c,f
   945  0780  3005               	movlw	5
   946  0781  062C               	xorwf	sprintf@c,w
   947  0782  1D03               	btfss	3,2
   948  0783  2F85               	goto	u771
   949  0784  2F86               	goto	u770
   950  0785                     u771:
   951  0785  2F60               	goto	l1351
   952  0786                     u770:
   953  0786                     l1357:
   954                           
   955                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   956  0786  0827               	movf	sprintf@flag,w
   957  0787  3903               	andlw	3
   958  0788  1903               	btfsc	3,2
   959  0789  2F8B               	goto	u781
   960  078A  2F8C               	goto	u780
   961  078B                     u781:
   962  078B  2F97               	goto	l1363
   963  078C                     u780:
   964  078C                     l1359:
   965                           
   966                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-'
      +                          )));
   967  078C  302D               	movlw	45
   968  078D  00A3               	movwf	??_sprintf
   969  078E  082B               	movf	sprintf@sp,w
   970  078F  0084               	movwf	4
   971  0790  0823               	movf	??_sprintf,w
   972  0791  1383               	bcf	3,7	;select IRP bank0
   973  0792  0080               	movwf	0
   974  0793                     l1361:
   975  0793  3001               	movlw	1
   976  0794  00A3               	movwf	??_sprintf
   977  0795  0823               	movf	??_sprintf,w
   978  0796  07AB               	addwf	sprintf@sp,f
   979  0797                     l1363:
   980                           
   981                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1495:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   982  0797  082C               	movf	sprintf@c,w
   983  0798  00A3               	movwf	??_sprintf
   984  0799  0823               	movf	??_sprintf,w
   985  079A  00A8               	movwf	sprintf@prec
   986                           
   987                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
   988  079B  2FD5               	goto	l1371
   989  079C                     l1365:
   990                           
   991                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned
      +                           char)prec]) % 10 + '0';
   992  079C  300A               	movlw	10
   993  079D  00F8               	movwf	___lwmod@divisor
   994  079E  3000               	movlw	0
   995  079F  00F9               	movwf	___lwmod@divisor+1
   996  07A0  0828               	movf	sprintf@prec,w
   997  07A1  00A3               	movwf	??_sprintf
   998  07A2  0723               	addwf	??_sprintf,w
   999  07A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1000  07A4  0084               	movwf	4
  1001  07A5  120A  118A  200D  120A  118A  	fcall	stringdir
  1002  07AA  00F0               	movwf	___lwdiv@divisor
  1003  07AB  120A  118A  200D  120A  118A  	fcall	stringdir
  1004  07B0  00F1               	movwf	___lwdiv@divisor+1
  1005  07B1  082A               	movf	sprintf@val+1,w
  1006  07B2  00F3               	movwf	___lwdiv@dividend+1
  1007  07B3  0829               	movf	sprintf@val,w
  1008  07B4  00F2               	movwf	___lwdiv@dividend
  1009  07B5  120A  118A  2644  120A  118A  	fcall	___lwdiv
  1010  07BA  0871               	movf	?___lwdiv+1,w
  1011  07BB  00FB               	movwf	___lwmod@dividend+1
  1012  07BC  0870               	movf	?___lwdiv,w
  1013  07BD  00FA               	movwf	___lwmod@dividend
  1014  07BE  120A  118A  2586  120A  118A  	fcall	___lwmod
  1015  07C3  0878               	movf	?___lwmod,w
  1016  07C4  3E30               	addlw	48
  1017  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  1018  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  1019  07C7  00A4               	movwf	??_sprintf+1
  1020  07C8  0824               	movf	??_sprintf+1,w
  1021  07C9  00AC               	movwf	sprintf@c
  1022  07CA                     l1367:
  1023                           
  1024                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1549:    };D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1025  07CA  082C               	movf	sprintf@c,w
  1026  07CB  00A3               	movwf	??_sprintf
  1027  07CC  082B               	movf	sprintf@sp,w
  1028  07CD  0084               	movwf	4
  1029  07CE  0823               	movf	??_sprintf,w
  1030  07CF  1383               	bcf	3,7	;select IRP bank0
  1031  07D0  0080               	movwf	0
  1032  07D1                     l1369:
  1033  07D1  3001               	movlw	1
  1034  07D2  00A3               	movwf	??_sprintf
  1035  07D3  0823               	movf	??_sprintf,w
  1036  07D4  07AB               	addwf	sprintf@sp,f
  1037  07D5                     l1371:
  1038                           
  1039                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1040  07D5  30FF               	movlw	255
  1041  07D6  00A3               	movwf	??_sprintf
  1042  07D7  0823               	movf	??_sprintf,w
  1043  07D8  07A8               	addwf	sprintf@prec,f
  1044  07D9  0A28               	incf	sprintf@prec,w
  1045  07DA  1D03               	btfss	3,2
  1046  07DB  2FDD               	goto	u791
  1047  07DC  2FDE               	goto	u790
  1048  07DD                     u791:
  1049  07DD  2F9C               	goto	l1365
  1050  07DE                     u790:
  1051  07DE                     l1373:
  1052                           
  1053                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1054  07DE  3001               	movlw	1
  1055  07DF  07A0               	addwf	sprintf@f,f
  1056  07E0  30FF               	movlw	-1
  1057  07E1  0720               	addwf	sprintf@f,w
  1058  07E2  0084               	movwf	4
  1059  07E3  120A  118A  200D  120A  118A  	fcall	stringdir
  1060  07E8  00A3               	movwf	??_sprintf
  1061  07E9  0823               	movf	??_sprintf,w
  1062  07EA  00AC               	movwf	sprintf@c
  1063  07EB  082C               	movf	sprintf@c,w
  1064  07EC  1D03               	btfss	3,2
  1065  07ED  2FEF               	goto	u801
  1066  07EE  2FF0               	goto	u800
  1067  07EF                     u801:
  1068  07EF  2F15               	goto	l1323
  1069  07F0                     u800:
  1070  07F0                     l1375:
  1071                           
  1072                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1073  07F0  082B               	movf	sprintf@sp,w
  1074  07F1  0084               	movwf	4
  1075  07F2  1383               	bcf	3,7	;select IRP bank0
  1076  07F3  0180               	clrf	0
  1077  07F4                     l261:
  1078  07F4  0008               	return
  1079  07F5                     __end_of_sprintf:
  1080                           
  1081                           	psect	text2
  1082  0586                     __ptext2:	
  1083 ;; *************** function ___lwmod *****************
  1084 ;; Defined at:
  1085 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  divisor         2    8[COMMON] unsigned int 
  1088 ;;  dividend        2   10[COMMON] unsigned int 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  counter         1   13[COMMON] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2    8[COMMON] unsigned int 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         4       0       0       0       0
  1101 ;;      Locals:         1       0       0       0       0
  1102 ;;      Temps:          1       0       0       0       0
  1103 ;;      Totals:         6       0       0       0       0
  1104 ;;Total ram usage:        6 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_sprintf
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function ___lwmod
  1115  0586                     ___lwmod:
  1116  0586                     l1237:	
  1117                           ;incstack = 0
  1118                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1119                           
  1120  0586  0878               	movf	___lwmod@divisor,w
  1121  0587  0479               	iorwf	___lwmod@divisor+1,w
  1122  0588  1903               	btfsc	3,2
  1123  0589  2D8B               	goto	u661
  1124  058A  2D8C               	goto	u660
  1125  058B                     u661:
  1126  058B  2DBB               	goto	l1255
  1127  058C                     u660:
  1128  058C                     l1239:
  1129  058C  01FD               	clrf	___lwmod@counter
  1130  058D  0AFD               	incf	___lwmod@counter,f
  1131  058E  2D9A               	goto	l1245
  1132  058F                     l1241:
  1133  058F  3001               	movlw	1
  1134  0590                     u675:
  1135  0590  1003               	clrc
  1136  0591  0DF8               	rlf	___lwmod@divisor,f
  1137  0592  0DF9               	rlf	___lwmod@divisor+1,f
  1138  0593  3EFF               	addlw	-1
  1139  0594  1D03               	skipz
  1140  0595  2D90               	goto	u675
  1141  0596                     l1243:
  1142  0596  3001               	movlw	1
  1143  0597  00FC               	movwf	??___lwmod
  1144  0598  087C               	movf	??___lwmod,w
  1145  0599  07FD               	addwf	___lwmod@counter,f
  1146  059A                     l1245:
  1147  059A  1FF9               	btfss	___lwmod@divisor+1,7
  1148  059B  2D9D               	goto	u681
  1149  059C  2D9E               	goto	u680
  1150  059D                     u681:
  1151  059D  2D8F               	goto	l1241
  1152  059E                     u680:
  1153  059E                     l1247:
  1154  059E  0879               	movf	___lwmod@divisor+1,w
  1155  059F  027B               	subwf	___lwmod@dividend+1,w
  1156  05A0  1D03               	skipz
  1157  05A1  2DA4               	goto	u695
  1158  05A2  0878               	movf	___lwmod@divisor,w
  1159  05A3  027A               	subwf	___lwmod@dividend,w
  1160  05A4                     u695:
  1161  05A4  1C03               	skipc
  1162  05A5  2DA7               	goto	u691
  1163  05A6  2DA8               	goto	u690
  1164  05A7                     u691:
  1165  05A7  2DAE               	goto	l1251
  1166  05A8                     u690:
  1167  05A8                     l1249:
  1168  05A8  0878               	movf	___lwmod@divisor,w
  1169  05A9  02FA               	subwf	___lwmod@dividend,f
  1170  05AA  0879               	movf	___lwmod@divisor+1,w
  1171  05AB  1C03               	skipc
  1172  05AC  03FB               	decf	___lwmod@dividend+1,f
  1173  05AD  02FB               	subwf	___lwmod@dividend+1,f
  1174  05AE                     l1251:
  1175  05AE  3001               	movlw	1
  1176  05AF                     u705:
  1177  05AF  1003               	clrc
  1178  05B0  0CF9               	rrf	___lwmod@divisor+1,f
  1179  05B1  0CF8               	rrf	___lwmod@divisor,f
  1180  05B2  3EFF               	addlw	-1
  1181  05B3  1D03               	skipz
  1182  05B4  2DAF               	goto	u705
  1183  05B5                     l1253:
  1184  05B5  3001               	movlw	1
  1185  05B6  02FD               	subwf	___lwmod@counter,f
  1186  05B7  1D03               	btfss	3,2
  1187  05B8  2DBA               	goto	u711
  1188  05B9  2DBB               	goto	u710
  1189  05BA                     u711:
  1190  05BA  2D9E               	goto	l1247
  1191  05BB                     u710:
  1192  05BB                     l1255:
  1193  05BB  087B               	movf	___lwmod@dividend+1,w
  1194  05BC  00F9               	movwf	?___lwmod+1
  1195  05BD  087A               	movf	___lwmod@dividend,w
  1196  05BE  00F8               	movwf	?___lwmod
  1197  05BF                     l547:
  1198  05BF  0008               	return
  1199  05C0                     __end_of___lwmod:
  1200                           
  1201                           	psect	text3
  1202  0644                     __ptext3:	
  1203 ;; *************** function ___lwdiv *****************
  1204 ;; Defined at:
  1205 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  divisor         2    0[COMMON] unsigned int 
  1208 ;;  dividend        2    2[COMMON] unsigned int 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  quotient        2    5[COMMON] unsigned int 
  1211 ;;  counter         1    7[COMMON] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2    0[COMMON] unsigned int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         4       0       0       0       0
  1222 ;;      Locals:         3       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0
  1224 ;;      Totals:         8       0       0       0       0
  1225 ;;Total ram usage:        8 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_sprintf
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function ___lwdiv
  1236  0644                     ___lwdiv:
  1237  0644                     l1211:	
  1238                           ;incstack = 0
  1239                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1240                           
  1241  0644  01F5               	clrf	___lwdiv@quotient
  1242  0645  01F6               	clrf	___lwdiv@quotient+1
  1243  0646                     l1213:
  1244  0646  0870               	movf	___lwdiv@divisor,w
  1245  0647  0471               	iorwf	___lwdiv@divisor+1,w
  1246  0648  1903               	btfsc	3,2
  1247  0649  2E4B               	goto	u591
  1248  064A  2E4C               	goto	u590
  1249  064B                     u591:
  1250  064B  2E83               	goto	l1233
  1251  064C                     u590:
  1252  064C                     l1215:
  1253  064C  01F7               	clrf	___lwdiv@counter
  1254  064D  0AF7               	incf	___lwdiv@counter,f
  1255  064E  2E5A               	goto	l1221
  1256  064F                     l1217:
  1257  064F  3001               	movlw	1
  1258  0650                     u605:
  1259  0650  1003               	clrc
  1260  0651  0DF0               	rlf	___lwdiv@divisor,f
  1261  0652  0DF1               	rlf	___lwdiv@divisor+1,f
  1262  0653  3EFF               	addlw	-1
  1263  0654  1D03               	skipz
  1264  0655  2E50               	goto	u605
  1265  0656                     l1219:
  1266  0656  3001               	movlw	1
  1267  0657  00F4               	movwf	??___lwdiv
  1268  0658  0874               	movf	??___lwdiv,w
  1269  0659  07F7               	addwf	___lwdiv@counter,f
  1270  065A                     l1221:
  1271  065A  1FF1               	btfss	___lwdiv@divisor+1,7
  1272  065B  2E5D               	goto	u611
  1273  065C  2E5E               	goto	u610
  1274  065D                     u611:
  1275  065D  2E4F               	goto	l1217
  1276  065E                     u610:
  1277  065E                     l1223:
  1278  065E  3001               	movlw	1
  1279  065F                     u625:
  1280  065F  1003               	clrc
  1281  0660  0DF5               	rlf	___lwdiv@quotient,f
  1282  0661  0DF6               	rlf	___lwdiv@quotient+1,f
  1283  0662  3EFF               	addlw	-1
  1284  0663  1D03               	skipz
  1285  0664  2E5F               	goto	u625
  1286  0665  0871               	movf	___lwdiv@divisor+1,w
  1287  0666  0273               	subwf	___lwdiv@dividend+1,w
  1288  0667  1D03               	skipz
  1289  0668  2E6B               	goto	u635
  1290  0669  0870               	movf	___lwdiv@divisor,w
  1291  066A  0272               	subwf	___lwdiv@dividend,w
  1292  066B                     u635:
  1293  066B  1C03               	skipc
  1294  066C  2E6E               	goto	u631
  1295  066D  2E6F               	goto	u630
  1296  066E                     u631:
  1297  066E  2E76               	goto	l1229
  1298  066F                     u630:
  1299  066F                     l1225:
  1300  066F  0870               	movf	___lwdiv@divisor,w
  1301  0670  02F2               	subwf	___lwdiv@dividend,f
  1302  0671  0871               	movf	___lwdiv@divisor+1,w
  1303  0672  1C03               	skipc
  1304  0673  03F3               	decf	___lwdiv@dividend+1,f
  1305  0674  02F3               	subwf	___lwdiv@dividend+1,f
  1306  0675                     l1227:
  1307  0675  1475               	bsf	___lwdiv@quotient,0
  1308  0676                     l1229:
  1309  0676  3001               	movlw	1
  1310  0677                     u645:
  1311  0677  1003               	clrc
  1312  0678  0CF1               	rrf	___lwdiv@divisor+1,f
  1313  0679  0CF0               	rrf	___lwdiv@divisor,f
  1314  067A  3EFF               	addlw	-1
  1315  067B  1D03               	skipz
  1316  067C  2E77               	goto	u645
  1317  067D                     l1231:
  1318  067D  3001               	movlw	1
  1319  067E  02F7               	subwf	___lwdiv@counter,f
  1320  067F  1D03               	btfss	3,2
  1321  0680  2E82               	goto	u651
  1322  0681  2E83               	goto	u650
  1323  0682                     u651:
  1324  0682  2E5E               	goto	l1223
  1325  0683                     u650:
  1326  0683                     l1233:
  1327  0683  0876               	movf	___lwdiv@quotient+1,w
  1328  0684  00F1               	movwf	?___lwdiv+1
  1329  0685  0875               	movf	___lwdiv@quotient,w
  1330  0686  00F0               	movwf	?___lwdiv
  1331  0687                     l537:
  1332  0687  0008               	return
  1333  0688                     __end_of___lwdiv:
  1334                           
  1335                           	psect	text4
  1336  04CB                     __ptext4:	
  1337 ;; *************** function _LCD_String *****************
  1338 ;; Defined at:
  1339 ;;		line 201 in file "newmain.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  str             2    3[COMMON] PTR unsigned char 
  1342 ;;		 -> main@EE(5), STR_1(10), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  i               1    6[COMMON] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         2       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0
  1356 ;;      Temps:          1       0       0       0       0
  1357 ;;      Totals:         4       0       0       0       0
  1358 ;;Total ram usage:        4 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 1
  1361 ;; This function calls:
  1362 ;;		_LCD_Char
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;;		_LCD_GotoCursor_String
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _LCD_String
  1371  04CB                     _LCD_String:
  1372  04CB                     l1289:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1375                           
  1376                           
  1377                           ;newmain.c: 201: void LCD_String(char *str);newmain.c: 202: {;newmain.c: 203:  unsigned 
      +                          char i = 0;
  1378  04CB  01F6               	clrf	LCD_String@i
  1379                           
  1380                           ;newmain.c: 204:  while(str[i] != 0)
  1381  04CC  2CE2               	goto	l1295
  1382  04CD                     l1291:
  1383                           
  1384                           ;newmain.c: 205:  {;newmain.c: 206:   LCD_Char(str[i]);
  1385  04CD  0876               	movf	LCD_String@i,w
  1386  04CE  0773               	addwf	LCD_String@str,w
  1387  04CF  0084               	movwf	4
  1388  04D0  0874               	movf	LCD_String@str+1,w
  1389  04D1  1803               	skipnc
  1390  04D2  0A74               	incf	LCD_String@str+1,w
  1391  04D3  00FF               	movwf	btemp+1
  1392  04D4  120A  118A  2003  120A  118A  	fcall	stringtab
  1393  04D9  120A  118A  24AA  120A  118A  	fcall	_LCD_Char
  1394  04DE                     l1293:
  1395                           
  1396                           ;newmain.c: 207:   i++;
  1397  04DE  3001               	movlw	1
  1398  04DF  00F5               	movwf	??_LCD_String
  1399  04E0  0875               	movf	??_LCD_String,w
  1400  04E1  07F6               	addwf	LCD_String@i,f
  1401  04E2                     l1295:
  1402                           
  1403                           ;newmain.c: 204:  while(str[i] != 0)
  1404  04E2  0876               	movf	LCD_String@i,w
  1405  04E3  0773               	addwf	LCD_String@str,w
  1406  04E4  0084               	movwf	4
  1407  04E5  0874               	movf	LCD_String@str+1,w
  1408  04E6  1803               	skipnc
  1409  04E7  0A74               	incf	LCD_String@str+1,w
  1410  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1411  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1412  04EA  00FF               	movwf	btemp+1
  1413  04EB  120A  118A  2003  120A  118A  	fcall	stringtab
  1414  04F0  3A00               	xorlw	0
  1415  04F1  1D03               	skipz
  1416  04F2  2CF4               	goto	u721
  1417  04F3  2CF5               	goto	u720
  1418  04F4                     u721:
  1419  04F4  2CCD               	goto	l1291
  1420  04F5                     u720:
  1421  04F5                     l112:
  1422  04F5  0008               	return
  1423  04F6                     __end_of_LCD_String:
  1424                           
  1425                           	psect	text5
  1426  04AA                     __ptext5:	
  1427 ;; *************** function _LCD_Char *****************
  1428 ;; Defined at:
  1429 ;;		line 190 in file "newmain.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  c               1    wreg     unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  c               1    2[COMMON] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         0       0       0       0       0
  1444 ;;      Locals:         1       0       0       0       0
  1445 ;;      Temps:          2       0       0       0       0
  1446 ;;      Totals:         3       0       0       0       0
  1447 ;;Total ram usage:        3 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_LCD_String
  1453 ;;		_LCD_GotoCursor_Char
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _LCD_Char
  1459  04AA                     _LCD_Char:
  1460                           
  1461                           ;incstack = 0
  1462                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1463                           ;LCD_Char@c stored from wreg
  1464  04AA  00F2               	movwf	LCD_Char@c
  1465  04AB                     l1195:
  1466                           
  1467                           ;newmain.c: 190: void LCD_Char(unsigned char c);newmain.c: 191: {;newmain.c: 192:  PORTB
      +                          bits.RB0 = 1;
  1468  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1469  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1470  04AD  1406               	bsf	6,0	;volatile
  1471  04AE                     l1197:
  1472                           
  1473                           ;newmain.c: 193:  PORTB = c | 0x01;
  1474  04AE  0872               	movf	LCD_Char@c,w
  1475  04AF  3801               	iorlw	1
  1476  04B0  0086               	movwf	6	;volatile
  1477  04B1                     l1199:
  1478                           
  1479                           ;newmain.c: 194:  PORTBbits.RB1 = 1;
  1480  04B1  1486               	bsf	6,1	;volatile
  1481  04B2                     l1201:
  1482                           
  1483                           ;newmain.c: 195:  PORTBbits.RB1 = 0;
  1484  04B2  1086               	bcf	6,1	;volatile
  1485  04B3                     l1203:
  1486                           
  1487                           ;newmain.c: 196:     PORTB = (c << 4) | 0x01;
  1488  04B3  0872               	movf	LCD_Char@c,w
  1489  04B4  00F0               	movwf	??_LCD_Char
  1490  04B5  3003               	movlw	3
  1491  04B6                     u585:
  1492  04B6  1003               	clrc
  1493  04B7  0DF0               	rlf	??_LCD_Char,f
  1494  04B8  3EFF               	addlw	-1
  1495  04B9  1D03               	skipz
  1496  04BA  2CB6               	goto	u585
  1497  04BB  1003               	clrc
  1498  04BC  0D70               	rlf	??_LCD_Char,w
  1499  04BD  3801               	iorlw	1
  1500  04BE  0086               	movwf	6	;volatile
  1501  04BF                     l1205:
  1502                           
  1503                           ;newmain.c: 197:  PORTBbits.RB1 = 1;
  1504  04BF  1486               	bsf	6,1	;volatile
  1505  04C0                     l1207:
  1506                           
  1507                           ;newmain.c: 198:  PORTBbits.RB1 = 0;
  1508  04C0  1086               	bcf	6,1	;volatile
  1509  04C1                     l1209:
  1510                           
  1511                           ;newmain.c: 199:  _delay((unsigned long)((1)*(16000000/4000.0)));
  1512  04C1  3006               	movlw	6
  1513  04C2  00F1               	movwf	??_LCD_Char+1
  1514  04C3  3030               	movlw	48
  1515  04C4  00F0               	movwf	??_LCD_Char
  1516  04C5                     u877:
  1517  04C5  0BF0               	decfsz	??_LCD_Char,f
  1518  04C6  2CC5               	goto	u877
  1519  04C7  0BF1               	decfsz	??_LCD_Char+1,f
  1520  04C8  2CC5               	goto	u877
  1521  04C9  0000               	nop
  1522  04CA                     l106:
  1523  04CA  0008               	return
  1524  04CB                     __end_of_LCD_Char:
  1525                           
  1526                           	psect	text6
  1527  05C0                     __ptext6:	
  1528 ;; *************** function _LCD_Init *****************
  1529 ;; Defined at:
  1530 ;;		line 155 in file "newmain.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          2       0       0       0       0
  1547 ;;      Totals:         2       0       0       0       0
  1548 ;;Total ram usage:        2 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 1
  1551 ;; This function calls:
  1552 ;;		_LCD_Cmd
  1553 ;;		_LCD_Cmd_Init
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _LCD_Init
  1561  05C0                     _LCD_Init:
  1562  05C0                     l1269:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1565                           
  1566                           
  1567                           ;newmain.c: 157:     TRISB = 0;
  1568  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  1569  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  1570  05C2  0186               	clrf	6	;volatile
  1571  05C3                     l1271:
  1572                           
  1573                           ;newmain.c: 160:  LCD_Cmd_Init(0x30);
  1574  05C3  3030               	movlw	48
  1575  05C4  120A  118A  2439  120A  118A  	fcall	_LCD_Cmd_Init
  1576  05C9                     l1273:
  1577                           
  1578                           ;newmain.c: 161:  _delay((unsigned long)((5)*(16000000/4000.0)));
  1579  05C9  301A               	movlw	26
  1580  05CA  00F4               	movwf	??_LCD_Init+1
  1581  05CB  30F8               	movlw	248
  1582  05CC  00F3               	movwf	??_LCD_Init
  1583  05CD                     u887:
  1584  05CD  0BF3               	decfsz	??_LCD_Init,f
  1585  05CE  2DCD               	goto	u887
  1586  05CF  0BF4               	decfsz	??_LCD_Init+1,f
  1587  05D0  2DCD               	goto	u887
  1588  05D1  0000               	nop
  1589  05D2                     l1275:
  1590                           
  1591                           ;newmain.c: 162:  LCD_Cmd_Init(0x30);
  1592  05D2  3030               	movlw	48
  1593  05D3  120A  118A  2439  120A  118A  	fcall	_LCD_Cmd_Init
  1594  05D8                     l1277:
  1595                           
  1596                           ;newmain.c: 163:  _delay((unsigned long)((1)*(16000000/4000.0)));
  1597  05D8  3006               	movlw	6
  1598  05D9  00F4               	movwf	??_LCD_Init+1
  1599  05DA  3030               	movlw	48
  1600  05DB  00F3               	movwf	??_LCD_Init
  1601  05DC                     u897:
  1602  05DC  0BF3               	decfsz	??_LCD_Init,f
  1603  05DD  2DDC               	goto	u897
  1604  05DE  0BF4               	decfsz	??_LCD_Init+1,f
  1605  05DF  2DDC               	goto	u897
  1606  05E0  0000               	nop
  1607  05E1                     l1279:
  1608                           
  1609                           ;newmain.c: 164:  LCD_Cmd_Init(0x30);
  1610  05E1  3030               	movlw	48
  1611  05E2  120A  118A  2439  120A  118A  	fcall	_LCD_Cmd_Init
  1612  05E7                     l1281:
  1613                           
  1614                           ;newmain.c: 168:     LCD_Cmd_Init(0x28);
  1615  05E7  3028               	movlw	40
  1616  05E8  120A  118A  2439  120A  118A  	fcall	_LCD_Cmd_Init
  1617  05ED                     l1283:
  1618                           
  1619                           ;newmain.c: 171:  LCD_Cmd(0x28);
  1620  05ED  3028               	movlw	40
  1621  05EE  120A  118A  2522  120A  118A  	fcall	_LCD_Cmd
  1622  05F3                     l1285:
  1623                           
  1624                           ;newmain.c: 182:  LCD_Cmd(0x01);
  1625  05F3  3001               	movlw	1
  1626  05F4  120A  118A  2522  120A  118A  	fcall	_LCD_Cmd
  1627  05F9                     l1287:
  1628                           
  1629                           ;newmain.c: 188:     LCD_Cmd(0x0E);
  1630  05F9  300E               	movlw	14
  1631  05FA  120A  118A  2522  120A  118A  	fcall	_LCD_Cmd
  1632  05FF                     l103:
  1633  05FF  0008               	return
  1634  0600                     __end_of_LCD_Init:
  1635                           
  1636                           	psect	text7
  1637  0439                     __ptext7:	
  1638 ;; *************** function _LCD_Cmd_Init *****************
  1639 ;; Defined at:
  1640 ;;		line 147 in file "newmain.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  cmd             1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  cmd             1    1[COMMON] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0
  1656 ;;      Temps:          1       0       0       0       0
  1657 ;;      Totals:         2       0       0       0       0
  1658 ;;Total ram usage:        2 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_LCD_Init
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function _LCD_Cmd_Init
  1669  0439                     _LCD_Cmd_Init:
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _LCD_Cmd_Init: [wreg+status,2]
  1673                           ;LCD_Cmd_Init@cmd stored from wreg
  1674  0439  00F1               	movwf	LCD_Cmd_Init@cmd
  1675  043A                     l1185:
  1676                           
  1677                           ;newmain.c: 147: void LCD_Cmd_Init(unsigned char cmd);newmain.c: 148: {;newmain.c: 149: 
      +                           PORTBbits.RB0 = 0;
  1678  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1679  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1680  043C  1006               	bcf	6,0	;volatile
  1681  043D                     l1187:
  1682                           
  1683                           ;newmain.c: 150:  PORTB = cmd & 0xF0 ;
  1684  043D  0871               	movf	LCD_Cmd_Init@cmd,w
  1685  043E  39F0               	andlw	240
  1686  043F  0086               	movwf	6	;volatile
  1687  0440                     l1189:
  1688                           
  1689                           ;newmain.c: 151:  PORTBbits.RB1 = 1;
  1690  0440  1486               	bsf	6,1	;volatile
  1691  0441                     l1191:
  1692                           
  1693                           ;newmain.c: 152:  PORTBbits.RB1 = 0;
  1694  0441  1086               	bcf	6,1	;volatile
  1695  0442                     l1193:
  1696                           
  1697                           ;newmain.c: 153:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1698  0442  3035               	movlw	53
  1699  0443  00F0               	movwf	??_LCD_Cmd_Init
  1700  0444                     u907:
  1701  0444  0BF0               	decfsz	??_LCD_Cmd_Init,f
  1702  0445  2C44               	goto	u907
  1703  0446                     l100:
  1704  0446  0008               	return
  1705  0447                     __end_of_LCD_Cmd_Init:
  1706                           
  1707                           	psect	text8
  1708  0470                     __ptext8:	
  1709 ;; *************** function _LCD_GotoCursor *****************
  1710 ;; Defined at:
  1711 ;;		line 210 in file "newmain.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  row             1    wreg     unsigned char 
  1714 ;;  col             1    3[COMMON] unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  row             1    5[COMMON] unsigned char 
  1717 ;;  cmd             1    8[COMMON] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         1       0       0       0       0
  1728 ;;      Locals:         4       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0
  1730 ;;      Totals:         6       0       0       0       0
  1731 ;;Total ram usage:        6 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 1
  1734 ;; This function calls:
  1735 ;;		_LCD_Cmd
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _LCD_GotoCursor
  1743  0470                     _LCD_GotoCursor:
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _LCD_GotoCursor: [wreg+status,2+status,0+pclath+cstack]
  1747                           ;LCD_GotoCursor@row stored from wreg
  1748  0470  00F5               	movwf	LCD_GotoCursor@row
  1749  0471                     l1297:
  1750                           
  1751                           ;newmain.c: 210: void LCD_GotoCursor(unsigned char row, unsigned char col);newmain.c: 21
      +                          1: {;newmain.c: 212:  unsigned char cmd;;newmain.c: 213:  cmd = (row==1?0x80:0xC0) + col
      +                           - 1;
  1752  0471  0375               	decf	LCD_GotoCursor@row,w
  1753  0472  1903               	btfsc	3,2
  1754  0473  2C75               	goto	u731
  1755  0474  2C76               	goto	u730
  1756  0475                     u731:
  1757  0475  2C7B               	goto	l1301
  1758  0476                     u730:
  1759  0476                     l1299:
  1760  0476  30C0               	movlw	192
  1761  0477  00F6               	movwf	_LCD_GotoCursor$360
  1762  0478  3000               	movlw	0
  1763  0479  00F7               	movwf	_LCD_GotoCursor$360+1
  1764  047A  2C7F               	goto	l1303
  1765  047B                     l1301:
  1766  047B  3080               	movlw	128
  1767  047C  00F6               	movwf	_LCD_GotoCursor$360
  1768  047D  3000               	movlw	0
  1769  047E  00F7               	movwf	_LCD_GotoCursor$360+1
  1770  047F                     l1303:
  1771  047F  0873               	movf	LCD_GotoCursor@col,w
  1772  0480  0776               	addwf	_LCD_GotoCursor$360,w
  1773  0481  3EFF               	addlw	255
  1774  0482  00F4               	movwf	??_LCD_GotoCursor
  1775  0483  0874               	movf	??_LCD_GotoCursor,w
  1776  0484  00F8               	movwf	LCD_GotoCursor@cmd
  1777  0485                     l1305:
  1778                           
  1779                           ;newmain.c: 214:  LCD_Cmd(cmd);
  1780  0485  0878               	movf	LCD_GotoCursor@cmd,w
  1781  0486  120A  118A  2522  120A  118A  	fcall	_LCD_Cmd
  1782  048B                     l119:
  1783  048B  0008               	return
  1784  048C                     __end_of_LCD_GotoCursor:
  1785                           
  1786                           	psect	text9
  1787  0522                     __ptext9:	
  1788 ;; *************** function _LCD_Cmd *****************
  1789 ;; Defined at:
  1790 ;;		line 129 in file "newmain.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  cmd             1    wreg     unsigned char 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  cmd             1    2[COMMON] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       0       0       0       0
  1805 ;;      Locals:         1       0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0
  1807 ;;      Totals:         3       0       0       0       0
  1808 ;;Total ram usage:        3 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_LCD_Init
  1814 ;;		_LCD_GotoCursor
  1815 ;;		_LCD_GotoCursor_Char
  1816 ;;		_LCD_GotoCursor_String
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _LCD_Cmd
  1822  0522                     _LCD_Cmd:
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
  1826                           ;LCD_Cmd@cmd stored from wreg
  1827  0522  00F2               	movwf	LCD_Cmd@cmd
  1828  0523                     l1165:
  1829                           
  1830                           ;newmain.c: 129: void LCD_Cmd(unsigned char cmd);newmain.c: 130: {;newmain.c: 131:  PORT
      +                          Bbits.RB0 = 0;
  1831  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0525  1006               	bcf	6,0	;volatile
  1834  0526                     l1167:
  1835                           
  1836                           ;newmain.c: 132:  PORTB = cmd & 0xF0;
  1837  0526  0872               	movf	LCD_Cmd@cmd,w
  1838  0527  39F0               	andlw	240
  1839  0528  0086               	movwf	6	;volatile
  1840  0529                     l1169:
  1841                           
  1842                           ;newmain.c: 133:  PORTBbits.RB1 = 1;
  1843  0529  1486               	bsf	6,1	;volatile
  1844  052A                     l1171:
  1845                           
  1846                           ;newmain.c: 134:  PORTBbits.RB1 = 0;
  1847  052A  1086               	bcf	6,1	;volatile
  1848  052B                     l1173:
  1849                           
  1850                           ;newmain.c: 135:     PORTB = cmd << 4;
  1851  052B  0872               	movf	LCD_Cmd@cmd,w
  1852  052C  00F0               	movwf	??_LCD_Cmd
  1853  052D  3003               	movlw	3
  1854  052E                     u565:
  1855  052E  1003               	clrc
  1856  052F  0DF0               	rlf	??_LCD_Cmd,f
  1857  0530  3EFF               	addlw	-1
  1858  0531  1D03               	skipz
  1859  0532  2D2E               	goto	u565
  1860  0533  1003               	clrc
  1861  0534  0D70               	rlf	??_LCD_Cmd,w
  1862  0535  0086               	movwf	6	;volatile
  1863  0536                     l1175:
  1864                           
  1865                           ;newmain.c: 136:  PORTBbits.RB1 = 1;
  1866  0536  1486               	bsf	6,1	;volatile
  1867  0537                     l1177:
  1868                           
  1869                           ;newmain.c: 137:  PORTBbits.RB1 = 0;
  1870  0537  1086               	bcf	6,1	;volatile
  1871  0538                     l1179:
  1872                           
  1873                           ;newmain.c: 138:  if( cmd <= 0x02)
  1874  0538  3003               	movlw	3
  1875  0539  0272               	subwf	LCD_Cmd@cmd,w
  1876  053A  1803               	skipnc
  1877  053B  2D3D               	goto	u571
  1878  053C  2D3E               	goto	u570
  1879  053D                     u571:
  1880  053D  2D48               	goto	l1183
  1881  053E                     u570:
  1882  053E                     l1181:
  1883                           
  1884                           ;newmain.c: 139:  {;newmain.c: 140:   _delay((unsigned long)((2)*(16000000/4000.0)));
  1885  053E  300B               	movlw	11
  1886  053F  00F1               	movwf	??_LCD_Cmd+1
  1887  0540  3062               	movlw	98
  1888  0541  00F0               	movwf	??_LCD_Cmd
  1889  0542                     u917:
  1890  0542  0BF0               	decfsz	??_LCD_Cmd,f
  1891  0543  2D42               	goto	u917
  1892  0544  0BF1               	decfsz	??_LCD_Cmd+1,f
  1893  0545  2D42               	goto	u917
  1894  0546  0000               	nop
  1895                           
  1896                           ;newmain.c: 141:  }
  1897  0547  2D51               	goto	l97
  1898  0548                     l1183:
  1899                           
  1900                           ;newmain.c: 143:  {;newmain.c: 144:   _delay((unsigned long)((1)*(16000000/4000.0)));
  1901  0548  3006               	movlw	6
  1902  0549  00F1               	movwf	??_LCD_Cmd+1
  1903  054A  3030               	movlw	48
  1904  054B  00F0               	movwf	??_LCD_Cmd
  1905  054C                     u927:
  1906  054C  0BF0               	decfsz	??_LCD_Cmd,f
  1907  054D  2D4C               	goto	u927
  1908  054E  0BF1               	decfsz	??_LCD_Cmd+1,f
  1909  054F  2D4C               	goto	u927
  1910  0550  0000               	nop
  1911  0551                     l97:
  1912  0551  0008               	return
  1913  0552                     __end_of_LCD_Cmd:
  1914                           
  1915                           	psect	text10
  1916  048C                     __ptext10:	
  1917 ;; *************** function _I2C_Write24C04 *****************
  1918 ;; Defined at:
  1919 ;;		line 231 in file "newmain.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  StartAddress    1    wreg     unsigned char 
  1922 ;;  Data            1    4[COMMON] unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  StartAddress    1    5[COMMON] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         1       0       0       0       0
  1935 ;;      Locals:         1       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0
  1937 ;;      Totals:         2       0       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 2
  1941 ;; This function calls:
  1942 ;;		_I2C_Start
  1943 ;;		_I2C_Stop
  1944 ;;		_I2C_Write
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _I2C_Write24C04
  1952  048C                     _I2C_Write24C04:
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _I2C_Write24C04: [wreg+status,2+status,0+pclath+cstack]
  1956                           ;I2C_Write24C04@StartAddress stored from wreg
  1957  048C  00F5               	movwf	I2C_Write24C04@StartAddress
  1958  048D                     l1307:
  1959                           
  1960                           ;newmain.c: 231: void I2C_Write24C04(unsigned char StartAddress, unsigned char Data);new
      +                          main.c: 232: {;newmain.c: 233:     I2C_Start();
  1961  048D  120A  118A  241F  120A  118A  	fcall	_I2C_Start
  1962                           
  1963                           ;newmain.c: 234:     I2C_Write(0xA0);
  1964  0492  30A0               	movlw	160
  1965  0493  120A  118A  2456  120A  118A  	fcall	_I2C_Write
  1966                           
  1967                           ;newmain.c: 235:     I2C_Write(StartAddress);
  1968  0498  0875               	movf	I2C_Write24C04@StartAddress,w
  1969  0499  120A  118A  2456  120A  118A  	fcall	_I2C_Write
  1970                           
  1971                           ;newmain.c: 236:     I2C_Write(Data);
  1972  049E  0874               	movf	I2C_Write24C04@Data,w
  1973  049F  120A  118A  2456  120A  118A  	fcall	_I2C_Write
  1974                           
  1975                           ;newmain.c: 237:     I2C_Stop();
  1976  04A4  120A  118A  242C  120A  118A  	fcall	_I2C_Stop
  1977  04A9                     l136:
  1978  04A9  0008               	return
  1979  04AA                     __end_of_I2C_Write24C04:
  1980                           
  1981                           	psect	text11
  1982  0552                     __ptext11:	
  1983 ;; *************** function _I2C_Read24C04 *****************
  1984 ;; Defined at:
  1985 ;;		line 239 in file "newmain.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  ReadAddress     1    wreg     unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  ReadAddress     1    8[COMMON] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         1       0       0       0       0
  2001 ;;      Temps:          2       0       0       0       0
  2002 ;;      Totals:         3       0       0       0       0
  2003 ;;Total ram usage:        3 bytes
  2004 ;; Hardware stack levels used: 1
  2005 ;; Hardware stack levels required when called: 2
  2006 ;; This function calls:
  2007 ;;		_I2C_Read
  2008 ;;		_I2C_Restart
  2009 ;;		_I2C_Start
  2010 ;;		_I2C_Stop
  2011 ;;		_I2C_Write
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function _I2C_Read24C04
  2019  0552                     _I2C_Read24C04:
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _I2C_Read24C04: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2023                           ;I2C_Read24C04@ReadAddress stored from wreg
  2024  0552  00F8               	movwf	I2C_Read24C04@ReadAddress
  2025  0553                     l1309:
  2026                           
  2027                           ;newmain.c: 239: void I2C_Read24C04(unsigned char ReadAddress);newmain.c: 240: {;newmain
      +                          .c: 241:     I2C_Start();
  2028  0553  120A  118A  241F  120A  118A  	fcall	_I2C_Start
  2029                           
  2030                           ;newmain.c: 242:     I2C_Write(0xA0);
  2031  0558  30A0               	movlw	160
  2032  0559  120A  118A  2456  120A  118A  	fcall	_I2C_Write
  2033                           
  2034                           ;newmain.c: 243:     I2C_Write(ReadAddress);
  2035  055E  0878               	movf	I2C_Read24C04@ReadAddress,w
  2036  055F  120A  118A  2456  120A  118A  	fcall	_I2C_Write
  2037  0564                     l1311:
  2038                           
  2039                           ;newmain.c: 244:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2040  0564  3006               	movlw	6
  2041  0565  00F7               	movwf	??_I2C_Read24C04+1
  2042  0566  3030               	movlw	48
  2043  0567  00F6               	movwf	??_I2C_Read24C04
  2044  0568                     u937:
  2045  0568  0BF6               	decfsz	??_I2C_Read24C04,f
  2046  0569  2D68               	goto	u937
  2047  056A  0BF7               	decfsz	??_I2C_Read24C04+1,f
  2048  056B  2D68               	goto	u937
  2049  056C  0000               	nop
  2050  056D                     l1313:
  2051                           
  2052                           ;newmain.c: 246:     I2C_Restart();
  2053  056D  120A  118A  2412  120A  118A  	fcall	_I2C_Restart
  2054  0572                     l1315:
  2055                           
  2056                           ;newmain.c: 247:     I2C_Write(0xA1);
  2057  0572  30A1               	movlw	161
  2058  0573  120A  118A  2456  120A  118A  	fcall	_I2C_Write
  2059  0578                     l1317:
  2060                           
  2061                           ;newmain.c: 248:     I2C_Read(&Rvalue, 1);
  2062  0578  01F3               	clrf	I2C_Read@ACK
  2063  0579  0AF3               	incf	I2C_Read@ACK,f
  2064  057A  3035               	movlw	(low (_Rvalue| 0))& (0+255)
  2065  057B  120A  118A  24F6  120A  118A  	fcall	_I2C_Read
  2066  0580                     l1319:
  2067                           
  2068                           ;newmain.c: 249:     I2C_Stop();
  2069  0580  120A  118A  242C  120A  118A  	fcall	_I2C_Stop
  2070  0585                     l139:
  2071  0585  0008               	return
  2072  0586                     __end_of_I2C_Read24C04:
  2073                           
  2074                           	psect	text12
  2075  0456                     __ptext12:	
  2076 ;; *************** function _I2C_Write *****************
  2077 ;; Defined at:
  2078 ;;		line 110 in file "newmain.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  Tvalue          1    wreg     unsigned char 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  Tvalue          1    3[COMMON] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         1       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0
  2095 ;;      Totals:         1       0       0       0       0
  2096 ;;Total ram usage:        1 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 1
  2099 ;; This function calls:
  2100 ;;		_I2C_Idle
  2101 ;; This function is called by:
  2102 ;;		_I2C_Write24C04
  2103 ;;		_I2C_Read24C04
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _I2C_Write
  2109  0456                     _I2C_Write:
  2110                           
  2111                           ;incstack = 0
  2112                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2113                           ;I2C_Write@Tvalue stored from wreg
  2114  0456  00F3               	movwf	I2C_Write@Tvalue
  2115  0457                     l1155:
  2116                           
  2117                           ;newmain.c: 110: void I2C_Write(unsigned char Tvalue);newmain.c: 111: {;newmain.c: 113: 
      +                              I2C_Idle();
  2118  0457  120A  118A  2600  120A  118A  	fcall	_I2C_Idle
  2119  045C                     l1157:
  2120                           
  2121                           ;newmain.c: 115:     SSPCONbits.WCOL = 0;
  2122  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2123  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2124  045E  1394               	bcf	20,7	;volatile
  2125  045F                     l1159:
  2126                           
  2127                           ;newmain.c: 117:     SSPBUF = Tvalue;
  2128  045F  0873               	movf	I2C_Write@Tvalue,w
  2129  0460  0093               	movwf	19	;volatile
  2130  0461                     l1161:
  2131                           
  2132                           ;newmain.c: 119:     PIR1bits.SSPIF = 0;
  2133  0461  118C               	bcf	12,3	;volatile
  2134  0462                     l88:	
  2135                           ;newmain.c: 121:     while(PIR1bits.SSPIF == 0);
  2136                           
  2137  0462  1D8C               	btfss	12,3	;volatile
  2138  0463  2C65               	goto	u541
  2139  0464  2C66               	goto	u540
  2140  0465                     u541:
  2141  0465  2C62               	goto	l88
  2142  0466                     u540:
  2143  0466                     l90:
  2144                           
  2145                           ;newmain.c: 123:     if(SSPCON2bits.ACKSTAT == 1)
  2146  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2147  0467  1303               	bcf	3,6	;RP1=0, select bank1
  2148  0468  1F11               	btfss	17,6	;volatile
  2149  0469  2C6B               	goto	u551
  2150  046A  2C6C               	goto	u550
  2151  046B                     u551:
  2152  046B  2C6F               	goto	l92
  2153  046C                     u550:
  2154  046C                     l1163:
  2155                           
  2156                           ;newmain.c: 124:     {;newmain.c: 125:         PIR1bits.SSPIF = 0;
  2157  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2158  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2159  046E  118C               	bcf	12,3	;volatile
  2160  046F                     l92:
  2161  046F  0008               	return
  2162  0470                     __end_of_I2C_Write:
  2163                           
  2164                           	psect	text13
  2165  042C                     __ptext13:	
  2166 ;; *************** function _I2C_Stop *****************
  2167 ;; Defined at:
  2168 ;;		line 75 in file "newmain.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, pclath, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2182 ;;      Params:         0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0
  2185 ;;      Totals:         0       0       0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 1
  2189 ;; This function calls:
  2190 ;;		_I2C_Idle
  2191 ;; This function is called by:
  2192 ;;		_I2C_Write24C04
  2193 ;;		_I2C_Read24C04
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _I2C_Stop
  2199  042C                     _I2C_Stop:
  2200  042C                     l1131:	
  2201                           ;incstack = 0
  2202                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2203                           
  2204                           
  2205                           ;newmain.c: 77:     I2C_Idle();
  2206  042C  120A  118A  2600  120A  118A  	fcall	_I2C_Idle
  2207  0431                     l1133:
  2208                           
  2209                           ;newmain.c: 78:     SSPCON2bits.PEN = 1;
  2210  0431  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0432  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0433  1511               	bsf	17,2	;volatile
  2213  0434                     l72:	
  2214                           ;newmain.c: 79:     while(SSPCON2bits.PEN);
  2215                           
  2216  0434  1911               	btfsc	17,2	;volatile
  2217  0435  2C37               	goto	u501
  2218  0436  2C38               	goto	u500
  2219  0437                     u501:
  2220  0437  2C34               	goto	l72
  2221  0438                     u500:
  2222  0438                     l75:
  2223  0438  0008               	return
  2224  0439                     __end_of_I2C_Stop:
  2225                           
  2226                           	psect	text14
  2227  041F                     __ptext14:	
  2228 ;; *************** function _I2C_Start *****************
  2229 ;; Defined at:
  2230 ;;		line 61 in file "newmain.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 1
  2251 ;; This function calls:
  2252 ;;		_I2C_Idle
  2253 ;; This function is called by:
  2254 ;;		_I2C_Write24C04
  2255 ;;		_I2C_Read24C04
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _I2C_Start
  2261  041F                     _I2C_Start:
  2262  041F                     l1123:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2265                           
  2266                           
  2267                           ;newmain.c: 63:     I2C_Idle();
  2268  041F  120A  118A  2600  120A  118A  	fcall	_I2C_Idle
  2269  0424                     l1125:
  2270                           
  2271                           ;newmain.c: 64:     SSPCON2bits.SEN = 1;
  2272  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0426  1411               	bsf	17,0	;volatile
  2275  0427                     l60:	
  2276                           ;newmain.c: 65:     while(SSPCON2bits.SEN);
  2277                           
  2278  0427  1811               	btfsc	17,0	;volatile
  2279  0428  2C2A               	goto	u481
  2280  0429  2C2B               	goto	u480
  2281  042A                     u481:
  2282  042A  2C27               	goto	l60
  2283  042B                     u480:
  2284  042B                     l63:
  2285  042B  0008               	return
  2286  042C                     __end_of_I2C_Start:
  2287                           
  2288                           	psect	text15
  2289  0412                     __ptext15:	
  2290 ;; *************** function _I2C_Restart *****************
  2291 ;; Defined at:
  2292 ;;		line 68 in file "newmain.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         0       0       0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 1
  2313 ;; This function calls:
  2314 ;;		_I2C_Idle
  2315 ;; This function is called by:
  2316 ;;		_I2C_Read24C04
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _I2C_Restart
  2322  0412                     _I2C_Restart:
  2323  0412                     l1127:	
  2324                           ;incstack = 0
  2325                           ; Regs used in _I2C_Restart: [wreg+status,2+status,0+pclath+cstack]
  2326                           
  2327                           
  2328                           ;newmain.c: 70:     I2C_Idle();
  2329  0412  120A  118A  2600  120A  118A  	fcall	_I2C_Idle
  2330  0417                     l1129:
  2331                           
  2332                           ;newmain.c: 71:     SSPCON2bits.RSEN = 1;
  2333  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2334  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2335  0419  1491               	bsf	17,1	;volatile
  2336  041A                     l66:	
  2337                           ;newmain.c: 72:     while(SSPCON2bits.RSEN);
  2338                           
  2339  041A  1891               	btfsc	17,1	;volatile
  2340  041B  2C1D               	goto	u491
  2341  041C  2C1E               	goto	u490
  2342  041D                     u491:
  2343  041D  2C1A               	goto	l66
  2344  041E                     u490:
  2345  041E                     l69:
  2346  041E  0008               	return
  2347  041F                     __end_of_I2C_Restart:
  2348                           
  2349                           	psect	text16
  2350  04F6                     __ptext16:	
  2351 ;; *************** function _I2C_Read *****************
  2352 ;; Defined at:
  2353 ;;		line 82 in file "newmain.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  Rvalue          1    wreg     PTR unsigned char 
  2356 ;;		 -> Rvalue(1), 
  2357 ;;  ACK             1    3[COMMON] unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  Rvalue          1    5[COMMON] PTR unsigned char 
  2360 ;;		 -> Rvalue(1), 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2370 ;;      Params:         1       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0
  2372 ;;      Temps:          1       0       0       0       0
  2373 ;;      Totals:         3       0       0       0       0
  2374 ;;Total ram usage:        3 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 1
  2377 ;; This function calls:
  2378 ;;		_I2C_Idle
  2379 ;; This function is called by:
  2380 ;;		_I2C_Read24C04
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _I2C_Read
  2386  04F6                     _I2C_Read:
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _I2C_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2390                           ;I2C_Read@Rvalue stored from wreg
  2391  04F6  00F5               	movwf	I2C_Read@Rvalue
  2392  04F7                     l1135:
  2393                           
  2394                           ;newmain.c: 82: void I2C_Read(unsigned char *Rvalue, unsigned char ACK);newmain.c: 83: {
      +                          ;newmain.c: 85:     I2C_Idle();
  2395  04F7  120A  118A  2600  120A  118A  	fcall	_I2C_Idle
  2396  04FC                     l1137:
  2397                           
  2398                           ;newmain.c: 87:     SSPCONbits.SSPOV = 0;
  2399  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2400  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2401  04FE  1314               	bcf	20,6	;volatile
  2402  04FF                     l1139:
  2403                           
  2404                           ;newmain.c: 88:     PIR1bits.SSPIF = 0;
  2405  04FF  118C               	bcf	12,3	;volatile
  2406  0500                     l1141:
  2407                           
  2408                           ;newmain.c: 90:     SSPCON2bits.RCEN = 1;
  2409  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0502  1591               	bsf	17,3	;volatile
  2412  0503                     l78:	
  2413                           ;newmain.c: 92:     while(SSPCON2bits.RCEN);
  2414                           
  2415  0503  1991               	btfsc	17,3	;volatile
  2416  0504  2D06               	goto	u511
  2417  0505  2D07               	goto	u510
  2418  0506                     u511:
  2419  0506  2D03               	goto	l78
  2420  0507                     u510:
  2421  0507                     l1143:
  2422                           
  2423                           ;newmain.c: 94:     SSPCON2bits.ACKDT = ACK;
  2424  0507  0C73               	rrf	I2C_Read@ACK,w
  2425  0508  1C03               	skipc
  2426  0509  1291               	bcf	17,5	;volatile
  2427  050A  1803               	skipnc
  2428  050B  1691               	bsf	17,5	;volatile
  2429  050C                     l1145:
  2430                           
  2431                           ;newmain.c: 96:     SSPCON2bits.ACKEN = 1;
  2432  050C  1611               	bsf	17,4	;volatile
  2433  050D                     l1147:
  2434                           
  2435                           ;newmain.c: 98:     PIR1bits.SSPIF = 0;
  2436  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2437  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2438  050F  118C               	bcf	12,3	;volatile
  2439  0510                     l81:	
  2440                           ;newmain.c: 100:     while(PIR1bits.SSPIF == 0);
  2441                           
  2442  0510  1D8C               	btfss	12,3	;volatile
  2443  0511  2D13               	goto	u521
  2444  0512  2D14               	goto	u520
  2445  0513                     u521:
  2446  0513  2D10               	goto	l81
  2447  0514                     u520:
  2448  0514                     l1149:
  2449                           
  2450                           ;newmain.c: 102:     *Rvalue = SSPBUF;
  2451  0514  0813               	movf	19,w	;volatile
  2452  0515  00F4               	movwf	??_I2C_Read
  2453  0516  0875               	movf	I2C_Read@Rvalue,w
  2454  0517  0084               	movwf	4
  2455  0518  0874               	movf	??_I2C_Read,w
  2456  0519  1383               	bcf	3,7	;select IRP bank0
  2457  051A  0080               	movwf	0
  2458  051B                     l1151:
  2459                           
  2460                           ;newmain.c: 104:     if(ACK == 1)
  2461  051B  0373               	decf	I2C_Read@ACK,w
  2462  051C  1D03               	btfss	3,2
  2463  051D  2D1F               	goto	u531
  2464  051E  2D20               	goto	u530
  2465  051F                     u531:
  2466  051F  2D21               	goto	l85
  2467  0520                     u530:
  2468  0520                     l1153:
  2469                           
  2470                           ;newmain.c: 105:     {;newmain.c: 106:         PIR1bits.SSPIF = 0;
  2471  0520  118C               	bcf	12,3	;volatile
  2472  0521                     l85:
  2473  0521  0008               	return
  2474  0522                     __end_of_I2C_Read:
  2475                           
  2476                           	psect	text17
  2477  0600                     __ptext17:	
  2478 ;; *************** function _I2C_Idle *****************
  2479 ;; Defined at:
  2480 ;;		line 52 in file "newmain.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0
  2496 ;;      Temps:          3       0       0       0       0
  2497 ;;      Totals:         3       0       0       0       0
  2498 ;;Total ram usage:        3 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_I2C_Start
  2504 ;;		_I2C_Restart
  2505 ;;		_I2C_Stop
  2506 ;;		_I2C_Read
  2507 ;;		_I2C_Write
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _I2C_Idle
  2513  0600                     _I2C_Idle:
  2514  0600                     l1111:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _I2C_Idle: [wreg+status,2+status,0]
  2517                           
  2518  0600                     l1113:	
  2519                           ;newmain.c: 54:     while(SSPSTATbits.R_W | SSPCON2bits.SEN);
  2520                           
  2521  0600  1683               	bsf	3,5	;RP0=1, select bank1
  2522  0601  1303               	bcf	3,6	;RP1=0, select bank1
  2523  0602  0811               	movf	17,w	;volatile
  2524  0603  3901               	andlw	1
  2525  0604  00F0               	movwf	??_I2C_Idle
  2526  0605  0C14               	rrf	20,w	;volatile
  2527  0606  00F1               	movwf	??_I2C_Idle+1
  2528  0607  0C71               	rrf	??_I2C_Idle+1,w
  2529  0608  3901               	andlw	1
  2530  0609  0470               	iorwf	??_I2C_Idle,w
  2531  060A  1D03               	btfss	3,2
  2532  060B  2E0D               	goto	u431
  2533  060C  2E0E               	goto	u430
  2534  060D                     u431:
  2535  060D  2E00               	goto	l1113
  2536  060E                     u430:
  2537  060E                     l1115:
  2538  060E  0C11               	rrf	17,w	;volatile
  2539  060F  3901               	andlw	1
  2540  0610  00F0               	movwf	??_I2C_Idle
  2541  0611  0C14               	rrf	20,w	;volatile
  2542  0612  00F1               	movwf	??_I2C_Idle+1
  2543  0613  0C71               	rrf	??_I2C_Idle+1,w
  2544  0614  3901               	andlw	1
  2545  0615  0470               	iorwf	??_I2C_Idle,w
  2546  0616  1D03               	btfss	3,2
  2547  0617  2E19               	goto	u441
  2548  0618  2E1A               	goto	u440
  2549  0619                     u441:
  2550  0619  2E0E               	goto	l1115
  2551  061A                     u440:
  2552  061A                     l1117:
  2553  061A  0C11               	rrf	17,w	;volatile
  2554  061B  00F0               	movwf	??_I2C_Idle
  2555  061C  0C70               	rrf	??_I2C_Idle,w
  2556  061D  3901               	andlw	1
  2557  061E  00F1               	movwf	??_I2C_Idle+1
  2558  061F  0C14               	rrf	20,w	;volatile
  2559  0620  00F2               	movwf	??_I2C_Idle+2
  2560  0621  0C72               	rrf	??_I2C_Idle+2,w
  2561  0622  3901               	andlw	1
  2562  0623  0471               	iorwf	??_I2C_Idle+1,w
  2563  0624  1D03               	btfss	3,2
  2564  0625  2E27               	goto	u451
  2565  0626  2E28               	goto	u450
  2566  0627                     u451:
  2567  0627  2E1A               	goto	l1117
  2568  0628                     u450:
  2569  0628                     l1119:
  2570  0628  0C11               	rrf	17,w	;volatile
  2571  0629  00F0               	movwf	??_I2C_Idle
  2572  062A  0CF0               	rrf	??_I2C_Idle,f
  2573  062B  0C70               	rrf	??_I2C_Idle,w
  2574  062C  3901               	andlw	1
  2575  062D  00F1               	movwf	??_I2C_Idle+1
  2576  062E  0C14               	rrf	20,w	;volatile
  2577  062F  00F2               	movwf	??_I2C_Idle+2
  2578  0630  0C72               	rrf	??_I2C_Idle+2,w
  2579  0631  3901               	andlw	1
  2580  0632  0471               	iorwf	??_I2C_Idle+1,w
  2581  0633  1D03               	btfss	3,2
  2582  0634  2E36               	goto	u461
  2583  0635  2E37               	goto	u460
  2584  0636                     u461:
  2585  0636  2E28               	goto	l1119
  2586  0637                     u460:
  2587  0637                     l1121:
  2588  0637  0E11               	swapf	17,w	;volatile
  2589  0638  3901               	andlw	1
  2590  0639  00F0               	movwf	??_I2C_Idle
  2591  063A  0C14               	rrf	20,w	;volatile
  2592  063B  00F1               	movwf	??_I2C_Idle+1
  2593  063C  0C71               	rrf	??_I2C_Idle+1,w
  2594  063D  3901               	andlw	1
  2595  063E  0470               	iorwf	??_I2C_Idle,w
  2596  063F  1D03               	btfss	3,2
  2597  0640  2E42               	goto	u471
  2598  0641  2E43               	goto	u470
  2599  0642                     u471:
  2600  0642  2E37               	goto	l1121
  2601  0643                     u470:
  2602  0643                     l57:
  2603  0643  0008               	return
  2604  0644                     __end_of_I2C_Idle:
  2605                           
  2606                           	psect	text18
  2607  0447                     __ptext18:	
  2608 ;; *************** function _I2C_Init *****************
  2609 ;; Defined at:
  2610 ;;		line 38 in file "newmain.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0
  2627 ;;      Totals:         0       0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _I2C_Init
  2639  0447                     _I2C_Init:
  2640  0447                     l1259:	
  2641                           ;incstack = 0
  2642                           ; Regs used in _I2C_Init: [wreg+status,2]
  2643                           
  2644                           
  2645                           ;newmain.c: 42:     TRISCbits.TRISC3 = 1;
  2646  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2647  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2648  0449  1587               	bsf	7,3	;volatile
  2649                           
  2650                           ;newmain.c: 43:     TRISCbits.TRISC4 = 1;
  2651  044A  1607               	bsf	7,4	;volatile
  2652  044B                     l1261:
  2653                           
  2654                           ;newmain.c: 45:     SSPCON = 0x28;
  2655  044B  3028               	movlw	40
  2656  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2657  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2658  044E  0094               	movwf	20	;volatile
  2659  044F                     l1263:
  2660                           
  2661                           ;newmain.c: 46:     SSPCON2 = 0x00;
  2662  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0450  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0451  0191               	clrf	17	;volatile
  2665  0452                     l1265:
  2666                           
  2667                           ;newmain.c: 47:     SSPSTATbits.SMP = 1;
  2668  0452  1794               	bsf	20,7	;volatile
  2669  0453                     l1267:
  2670                           
  2671                           ;newmain.c: 49:     SSPADD = 0x0D;
  2672  0453  300D               	movlw	13
  2673  0454  0093               	movwf	19	;volatile
  2674  0455                     l39:
  2675  0455  0008               	return
  2676  0456                     __end_of_I2C_Init:
  2677  007E                     btemp	set	126	;btemp
  2678  007E                     wtemp0	set	126
  2679                           
  2680                           	psect	config
  2681                           
  2682                           ;Config register CONFIG @ 0x2007
  2683                           ;	Oscillator Selection bits
  2684                           ;	FOSC = HS, HS oscillator
  2685                           ;	Watchdog Timer Enable bit
  2686                           ;	WDTE = OFF, WDT disabled
  2687                           ;	Power-up Timer Enable bit
  2688                           ;	PWRTE = OFF, PWRT disabled
  2689                           ;	Brown-out Reset Enable bit
  2690                           ;	BOREN = OFF, BOR disabled
  2691                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2692                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2693                           ;	Data EEPROM Memory Code Protection bit
  2694                           ;	CPD = OFF, Data EEPROM code protection off
  2695                           ;	Flash Program Memory Write Enable bits
  2696                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2697                           ;	In-Circuit Debugger Mode bit
  2698                           ;	DEBUG = 0x1, unprogrammed default
  2699                           ;	Flash Program Memory Code Protection bit
  2700                           ;	CP = OFF, Code protection off
  2701  2007                     	org	8199
  2702  2007  3F3A               	dw	16186

Data Sizes:
    Strings     20
    Constant    10
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> main@EE(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_String@str	PTR unsigned char  size(2) Largest target is 10
		 -> main@EE(BANK0[5]), STR_1(CODE[10]), 

    I2C_Read@Rvalue	PTR unsigned char  size(1) Largest target is 1
		 -> Rvalue(BANK0[1]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Cmd
    _LCD_GotoCursor->_LCD_Cmd
    _I2C_Write24C04->_I2C_Write
    _I2C_Read24C04->_I2C_Read
    _I2C_Write->_I2C_Idle
    _I2C_Stop->_I2C_Idle
    _I2C_Start->_I2C_Idle
    _I2C_Restart->_I2C_Idle
    _I2C_Read->_I2C_Idle

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2385
                                             13 BANK0      8     8      0
                           _I2C_Init
                      _I2C_Read24C04
                     _I2C_Write24C04
                     _LCD_GotoCursor
                           _LCD_Init
                         _LCD_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           4     2      2     362
                                              3 COMMON     4     2      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      88
                                              3 COMMON     2     2      0
                            _LCD_Cmd
                       _LCD_Cmd_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd_Init                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_GotoCursor                                       6     5      1     233
                                              3 COMMON     6     5      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      66
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write24C04                                       2     1      1     218
                                              4 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Read24C04                                        3     3      0     219
                                              6 COMMON     3     3      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              3 COMMON     1     1      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     2      1     175
                                              3 COMMON     3     2      1
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Idle                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read24C04
     _I2C_Read
       _I2C_Idle
     _I2C_Restart
       _I2C_Idle
     _I2C_Start
       _I2C_Idle
     _I2C_Stop
       _I2C_Idle
     _I2C_Write
       _I2C_Idle
   _I2C_Write24C04
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _LCD_GotoCursor
     _LCD_Cmd
   _LCD_Init
     _LCD_Cmd
     _LCD_Cmd_Init
   _LCD_String
     _LCD_Char
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 03 23:01:53 2022

                         pc 0002               ?_LCD_Cmd_Init 0070          __size_of_I2C_Start 000D  
               _SSPSTATbits 0094          __size_of_I2C_Write 001A                          l60 0427  
                        l39 0455                          l63 042B                          l72 0434  
                        l57 0643                          l81 0510                          l66 041A  
                        l90 0466                          l75 0438                          l92 046F  
                        l85 0521                          l69 041E                          l78 0503  
                        l88 0462                          l97 0551                          fsr 0004  
               ?_LCD_String 0073                         l100 0446                         l103 05FF  
                       l112 04F5                         l106 04CA                         l119 048B  
                       l136 04A9                         l146 06C1                         l139 0585  
                       l261 07F4                         l537 0687                         l547 05BF  
                       u500 0438                         u501 0437                         u430 060E  
                       u510 0507                         u431 060D                         u511 0506  
                       u440 061A                         u520 0514                         u441 0619  
                       u521 0513                         u450 0628                         u530 0520  
                       u610 065E                         u451 0627                         u531 051F  
                       u611 065D                         u460 0637                         u540 0466  
                       u461 0636                         u541 0465                         u605 0650  
                       u470 0643                         u550 046C                         u630 066F  
                       u710 05BB                         u471 0642                         u551 046B  
                       u631 066E                         u711 05BA                         u480 042B  
                       u720 04F5                         u800 07F0                         u481 042A  
                       u721 04F4                         u625 065F                         u705 05AF  
                       u801 07EF                         u490 041E                         u570 053E  
                       u730 0476                         u650 0683                         u491 041D  
                       u571 053D                         u731 0475                         u651 0682  
                       u635 066B                         u660 058C                         u740 071B  
                       u565 052E                         u645 0677                         u661 058B  
                       u741 071A                         u590 064C                         u750 0755  
                       u830 06A7                         u591 064B                         u751 0754  
                       u831 06A6                         u680 059E                         u760 077B  
                       u840 06C7                         u585 04B6                         u681 059D  
                       u761 077A                         u841 06C6                         u690 05A8  
                       u770 0786                         u907 0444                         u691 05A7  
                       u675 0590                         u771 0785                         u780 078C  
                       u917 0542                         u781 078B                         u765 0777  
                       u790 07DE                         u927 054C                         u695 05A4  
                       u791 07DD                         u937 0568                         u857 06B1  
                       u867 0702                         u877 04C5                         u887 05CD  
                       u897 05DC                         fsr0 0004                         indf 0000  
      __size_of_I2C_Restart 000D             __end_of_LCD_Cmd 0552                        l1111 0600  
                      l1121 0637                        l1113 0600                        l1201 04B2  
                      l1115 060E                        l1123 041F                        l1131 042C  
                      l1203 04B3                        l1211 0644                        l1117 061A  
                      l1141 0500                        l1125 0424                        l1133 0431  
                      l1301 047B                        l1205 04BF                        l1221 065A  
                      l1213 0646                        l1119 0628                        l1151 051B  
                      l1143 0507                        l1135 04F7                        l1127 0412  
                      l1311 0564                        l1303 047F                        l1207 04C0  
                      l1231 067D                        l1223 065E                        l1215 064C  
                      l1153 0520                        l1145 050C                        l1137 04FC  
                      l1129 0417                        l1161 0461                        l1313 056D  
                      l1305 0485                        l1209 04C1                        l1225 066F  
                      l1217 064F                        l1233 0683                        l1241 058F  
                      l1321 0710                        l1147 050D                        l1139 04FF  
                      l1163 046C                        l1155 0457                        l1315 0572  
                      l1307 048D                        l1171 052A                        l1227 0675  
                      l1219 0656                        l1251 05AE                        l1243 0596  
                      l1323 0715                        l1411 06A1                        l1261 044B  
                      l1149 0514                        l1157 045C                        l1317 0578  
                      l1309 0553                        l1181 053E                        l1173 052B  
                      l1165 0523                        l1229 0676                        l1253 05B5  
                      l1245 059A                        l1237 0586                        l1341 0755  
                      l1333 0728                        l1325 071B                        l1421 06CF  
                      l1413 06A7                        l1263 044F                        l1159 045F  
                      l1319 0580                        l1183 0548                        l1175 0536  
                      l1167 0526                        l1191 0441                        l1271 05C3  
                      l1247 059E                        l1239 058C                        l1255 05BB  
                      l1351 0760                        l1343 0759                        l1335 0745  
                      l1327 0722                        l1423 06D5                        l1415 06AB  
                      l1407 0688                        l1265 0452                        l1177 0537  
                      l1169 0529                        l1193 0442                        l1185 043A  
                      l1281 05E7                        l1273 05C9                        l1249 05A8  
                      l1361 0793                        l1345 075E                        l1337 074D  
                      l1329 0727                        l1425 06DE                        l1417 06B5  
                      l1409 068B                        l1267 0453                        l1259 0447  
                      l1179 0538                        l1187 043D                        l1283 05ED  
                      l1275 05D2                        l1195 04AB                        l1291 04CD  
                      l1371 07D5                        l1363 0797                        l1355 077C  
                      l1339 0751                        l1451 073A                        l1427 06F1  
                      l1419 06C7                        l1189 0440                        l1285 05F3  
                      l1277 05D8                        l1269 05C0                        l1197 04AE  
                      l1293 04DE                        l1365 079C                        l1357 0786  
                      l1373 07DE                        l1429 06FA                        l1287 05F9  
                      l1279 05E1                        l1199 04B1                        l1295 04E2  
                      l1367 07CA                        l1359 078C                        l1375 07F0  
                      l1297 0471                        l1289 04CB                        l1369 07D1  
                      l1299 0476                        _DATA 0036                        STR_1 0027  
                      STR_2 001D                        _main 0688            __end_of_I2C_Idle 0644  
          __end_of_I2C_Init 0456            __end_of_I2C_Read 0522                        btemp 007E  
          __end_of_I2C_Stop 0439      __end_of_LCD_GotoCursor 048C                        start 0000  
            ??_LCD_Cmd_Init 0070            __end_of_LCD_Char 04CB            __end_of_LCD_Init 0600  
    __size_of_I2C_Read24C04 0034                       ?_main 0070             __end_of___lwdiv 0688  
           __end_of___lwmod 05C0                       _PORTB 0006                       _TRISB 0086  
               LCD_String@i 0076             __end_of_dpowers 001D           __end_of_I2C_Start 042C  
         __end_of_I2C_Write 0470                       pclath 000A                       status 0003  
                     wtemp0 007E         __size_of_LCD_String 002B             __end_of_sprintf 07F5  
           ?_LCD_GotoCursor 0073             __initialization 07F5                __end_of_main 070D  
                    ??_main 002D                   ??_LCD_Cmd 0070               _I2C_Read24C04 0552  
                    _SSPADD 0093                      _SSPCON 0014                      _SSPBUF 0013  
                    _Rvalue 0035                   ??___lwdiv 0074                   ??___lwmod 007C  
                    main@EE 0030                   ?_I2C_Idle 0070                   ?_I2C_Init 0070  
                 ?_I2C_Read 0073                   ?_I2C_Stop 0070             I2C_Write@Tvalue 0073  
                 ??_sprintf 0023        __end_of_LCD_Cmd_Init 0447              ?_I2C_Read24C04 0070  
                 ?_LCD_Char 0070     __end_of__initialization 07FC                   ?_LCD_Init 0070  
                 LCD_Char@c 0072              __pcstackCOMMON 0070                __pidataBANK0 0411  
              ??_LCD_String 0075                  ??_I2C_Idle 0070                  ??_I2C_Init 0070  
                ??_I2C_Read 0074           LCD_GotoCursor@cmd 0078           LCD_GotoCursor@col 0073  
         LCD_GotoCursor@row 0075                  ??_I2C_Stop 0073                  __pbssBANK0 0035  
                ??_LCD_Char 0070                  ??_LCD_Init 0073          __end_of_LCD_String 04F6  
   __size_of_I2C_Write24C04 001E              I2C_Read@Rvalue 0075                  __pmaintext 0688  
             ??_I2C_Restart 0073                     _LCD_Cmd 0522             ??_I2C_Read24C04 0076  
                   _SSPCON2 0091          I2C_Write24C04@Data 0074            ??_LCD_GotoCursor 0074  
                __stringtab 0003                   _I2C_Start 041F                   _I2C_Write 0456  
             LCD_String@str 0073                     ___lwdiv 0644                     ___lwmod 0586  
                   __ptext1 070D                     __ptext2 0586                     __ptext3 0644  
                   __ptext4 04CB                     __ptext5 04AA                     __ptext6 05C0  
                   __ptext7 0439                     __ptext8 0470                     __ptext9 0522  
                   _dpowers 0013       __size_of_LCD_Cmd_Init 000E                     _sprintf 070D  
       __end_of_I2C_Restart 041F        end_of_initialization 07FC                  ?_I2C_Start 0070  
                ?_I2C_Write 0070                _LCD_Cmd_Init 0439                   _PORTBbits 0006  
                 _PORTDbits 0008                   _TRISCbits 0087                   _TRISDbits 0088  
         __size_of_I2C_Idle 0044           __size_of_I2C_Init 000F           __size_of_I2C_Read 002C  
         __size_of_I2C_Stop 000D                  LCD_Cmd@cmd 0072              _I2C_Write24C04 048C  
         __size_of_LCD_Char 0021           __size_of_LCD_Init 0040                 _I2C_Restart 0412  
       start_initialization 07F5      __end_of_I2C_Write24C04 04AA                 ??_I2C_Start 0073  
               ??_I2C_Write 0073                 __pdataBANK0 0036                    ?_LCD_Cmd 0070  
                 ___latbits 0002               __pcstackBANK0 0020             ?_I2C_Write24C04 0074  
               sprintf@flag 0027                 sprintf@prec 0028                 I2C_Read@ACK 0073  
          ___lwdiv@dividend 0072                    ?___lwdiv 0070                    ?___lwmod 0078  
                 __pstrings 0003                    _I2C_Idle 0600                    _I2C_Init 0447  
                  _I2C_Read 04F6                    _I2C_Stop 042C             LCD_Cmd_Init@cmd 0071  
          ___lwdiv@quotient 0075                    ?_sprintf 0020       __end_of_I2C_Read24C04 0586  
                  _LCD_Char 04AA                    _LCD_Init 05C0                    _PIR1bits 000C  
               __stringbase 0012            __size_of_LCD_Cmd 0030     __size_of_LCD_GotoCursor 001C  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 0013  
  I2C_Read24C04@ReadAddress 0078                ?_I2C_Restart 0070                  sprintf@val 0029  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 048C  
                  __ptext11 0552                    __ptext12 0456                    __ptext13 042C  
                  __ptext14 041F                    __ptext15 0412                    __ptext16 04F6  
                  __ptext17 0600                    __ptext18 0447            __size_of_sprintf 00E8  
I2C_Write24C04@StartAddress 0075               __size_of_main 0085                  _LCD_String 04CB  
          ??_I2C_Write24C04 0075                   sprintf@ap 0026                   sprintf@sp 002B  
          ___lwmod@dividend 007A                   stringcode 000D                    sprintf@c 002C  
                  sprintf@f 0020             ___lwmod@divisor 0078             ___lwmod@counter 007D  
        _LCD_GotoCursor$360 0076                    stringdir 000D                    stringtab 0003  
               _SSPCON2bits 0091                  _SSPCONbits 0014              _LCD_GotoCursor 0470  

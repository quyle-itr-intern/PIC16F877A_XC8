Version 4.0 HI-TECH Software Intermediate Code
"347 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 347:     struct {
[s S12 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S12 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"346
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 346: typedef union {
[u S11 `S12 1 ]
[n S11 . . ]
"358
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 358: extern volatile PORTDbits_t PORTDbits __attribute__((address(0x008)));
[v _PORTDbits `VS11 ~T0 @X0 0 e@8 ]
"151 ./MPU6050.h
[; ;./MPU6050.h: 151: void PWM1_Set_Duty(unsigned int duty);
[v _PWM1_Set_Duty `(v ~T0 @X0 0 ef1`ui ]
"110 D:\File Install MBLAB IDE\XC8\pic\include\c90\stdlib.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\c90\stdlib.h: 110: extern int abs(int);
[v _abs `(i ~T0 @X0 0 ef1`i ]
"153 ./MPU6050.h
[; ;./MPU6050.h: 153: void PWM2_Set_Duty(unsigned int duty);
[v _PWM2_Set_Duty `(v ~T0 @X0 0 ef1`ui ]
[p mainexit ]
"145
[; ;./MPU6050.h: 145: void MPU6050_Init();
[v _MPU6050_Init `(v ~T0 @X0 0 e? ]
"150
[; ;./MPU6050.h: 150: void PWM1_Init();
[v _PWM1_Init `(v ~T0 @X0 0 e? ]
"152
[; ;./MPU6050.h: 152: void PWM2_Init();
[v _PWM2_Init `(v ~T0 @X0 0 e? ]
"146
[; ;./MPU6050.h: 146: int MPU6050_GetAngle();
[v _MPU6050_GetAngle `(i ~T0 @X0 0 e? ]
"155
[; ;./MPU6050.h: 155: int16_t constrain(float a, int min, int max);
[v _constrain `(i ~T0 @X0 0 ef3`f`i`i ]
[v F36 `(v ~T0 @X0 1 tf1`ul ]
"12 D:\File Install MBLAB IDE\XC8\pic\include\builtins.h
[v __delay `JF36 ~T0 @X0 0 e ]
[p i __delay ]
"19 ./main.h
[p x FOSC  =  HS         ]
"20
[p x WDTE  =  OFF        ]
"21
[p x PWRTE  =  OFF       ]
"22
[p x BOREN  =  OFF       ]
"23
[p x LVP  =  OFF         ]
"24
[p x CPD  =  OFF         ]
"25
[p x WRT  =  OFF         ]
"26
[p x CP  =  OFF          ]
"55 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"219
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 219: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"281
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 281: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"343
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 343: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"405
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 405: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"437
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 437: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"457
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 457: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"535
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 535: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"597
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 597: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"637
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 637: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"644
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 644: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"651
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 651: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"658
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 658: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"733
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 733: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"740
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 740: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"811
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 811: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"818
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 818: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"888
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 888: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"895
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 895: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"902
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 902: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"909
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 909: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"967
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 967: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1062
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1062: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1069
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1069: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1076
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1076: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1083
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1083: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1090
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1090: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1097
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1097: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1155
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1155: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1162
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1162: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1258
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1258: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1328
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1328: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1378
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1378: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1440
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1440: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1502
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1502: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1564
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1564: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1621
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1621: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1683
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1683: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1723
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1723: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1757
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1757: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1819
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1819: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1826
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1826: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1833
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1833: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2002
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2002: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2083
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2083: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2090
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2090: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2160
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2160: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2225
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2225: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2232
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2232: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2291
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2291: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2298
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2298: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2305
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2305: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2312
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2312: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2319
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2319: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2364
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2364: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"21 ./UART.h
[; ;./UART.h: 21: char RX_Buffer[10];
[v _RX_Buffer `uc ~T0 @X0 -> 10 `i e ]
"22
[; ;./UART.h: 22: char rx_index = 0;
[v _rx_index `uc ~T0 @X0 1 e ]
[i _rx_index
-> -> 0 `i `uc
]
"143 ./MPU6050.h
[; ;./MPU6050.h: 143: long PWM_Frequency = 5000;
[v _PWM_Frequency `l ~T0 @X0 1 e ]
[i _PWM_Frequency
-> -> 5000 `i `l
]
"13 main.c
[; ;main.c: 13: void Speed_L(int speed)
[v _Speed_L `(v ~T0 @X0 1 ef1`i ]
"14
[; ;main.c: 14: {
{
[e :U _Speed_L ]
"13
[; ;main.c: 13: void Speed_L(int speed)
[v _speed `i ~T0 @X0 1 r1 ]
"14
[; ;main.c: 14: {
[f ]
"15
[; ;main.c: 15:     if(speed > 0)
[e $ ! > _speed -> 0 `i 101  ]
"16
[; ;main.c: 16:     {
{
"17
[; ;main.c: 17:         PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"18
[; ;main.c: 18:         PORTDbits.RD6 = 0;
[e = . . _PORTDbits 0 6 -> -> 0 `i `uc ]
"19
[; ;main.c: 19:     }
}
[e $U 102  ]
"20
[; ;main.c: 20:     else if(speed < 0)
[e :U 101 ]
[e $ ! < _speed -> 0 `i 103  ]
"21
[; ;main.c: 21:     {
{
"22
[; ;main.c: 22:         PORTDbits.RD7 = 0;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
"23
[; ;main.c: 23:         PORTDbits.RD6 = 1;
[e = . . _PORTDbits 0 6 -> -> 1 `i `uc ]
"24
[; ;main.c: 24:     }
}
[e :U 103 ]
[e :U 102 ]
"25
[; ;main.c: 25:     PWM1_Set_Duty(abs(speed));
[e ( _PWM1_Set_Duty (1 -> ( _abs (1 _speed `ui ]
"26
[; ;main.c: 26: }
[e :UE 100 ]
}
"27
[; ;main.c: 27: void Speed_R(int speed)
[v _Speed_R `(v ~T0 @X0 1 ef1`i ]
"28
[; ;main.c: 28: {
{
[e :U _Speed_R ]
"27
[; ;main.c: 27: void Speed_R(int speed)
[v _speed `i ~T0 @X0 1 r1 ]
"28
[; ;main.c: 28: {
[f ]
"29
[; ;main.c: 29:     if(speed > 0)
[e $ ! > _speed -> 0 `i 105  ]
"30
[; ;main.c: 30:     {
{
"31
[; ;main.c: 31:         PORTDbits.RD3 = 1;
[e = . . _PORTDbits 0 3 -> -> 1 `i `uc ]
"32
[; ;main.c: 32:         PORTDbits.RD2 = 0;
[e = . . _PORTDbits 0 2 -> -> 0 `i `uc ]
"33
[; ;main.c: 33:     }
}
[e $U 106  ]
"34
[; ;main.c: 34:     else if(speed < 0)
[e :U 105 ]
[e $ ! < _speed -> 0 `i 107  ]
"35
[; ;main.c: 35:     {
{
"36
[; ;main.c: 36:         PORTDbits.RD3 = 0;
[e = . . _PORTDbits 0 3 -> -> 0 `i `uc ]
"37
[; ;main.c: 37:         PORTDbits.RD2 = 1;
[e = . . _PORTDbits 0 2 -> -> 1 `i `uc ]
"38
[; ;main.c: 38:     }
}
[e :U 107 ]
[e :U 106 ]
"39
[; ;main.c: 39:     PWM2_Set_Duty(abs(speed));
[e ( _PWM2_Set_Duty (1 -> ( _abs (1 _speed `ui ]
"40
[; ;main.c: 40: }
[e :UE 104 ]
}
"42
[; ;main.c: 42: int16_t inputL, inputR, Offset, Output, I_L, I_R, input_lastL, input_lastR, OutputL, OutputR, MotorL, MotorR, Vgo, Vgo_L, Vgo_R;
[v _inputL `i ~T0 @X0 1 e ]
[v _inputR `i ~T0 @X0 1 e ]
[v _Offset `i ~T0 @X0 1 e ]
[v _Output `i ~T0 @X0 1 e ]
[v _I_L `i ~T0 @X0 1 e ]
[v _I_R `i ~T0 @X0 1 e ]
[v _input_lastL `i ~T0 @X0 1 e ]
[v _input_lastR `i ~T0 @X0 1 e ]
[v _OutputL `i ~T0 @X0 1 e ]
[v _OutputR `i ~T0 @X0 1 e ]
[v _MotorL `i ~T0 @X0 1 e ]
[v _MotorR `i ~T0 @X0 1 e ]
[v _Vgo `i ~T0 @X0 1 e ]
[v _Vgo_L `i ~T0 @X0 1 e ]
[v _Vgo_R `i ~T0 @X0 1 e ]
"43
[; ;main.c: 43: float Kp = 38;
[v _Kp `f ~T0 @X0 1 e ]
[i _Kp
-> -> 38 `i `f
]
"44
[; ;main.c: 44: float Ki = 0.5;
[v _Ki `f ~T0 @X0 1 e ]
[i _Ki
-> .0.5 `f
]
"45
[; ;main.c: 45: float Kd = 0;
[v _Kd `f ~T0 @X0 1 e ]
[i _Kd
-> -> 0 `i `f
]
[v $root$_main `(v ~T0 @X0 0 e ]
"48
[; ;main.c: 48: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"49
[; ;main.c: 49: {
{
[e :U _main ]
[f ]
"51
[; ;main.c: 51:     MPU6050_Init();
[e ( _MPU6050_Init ..  ]
"52
[; ;main.c: 52:     PWM1_Init();
[e ( _PWM1_Init ..  ]
"53
[; ;main.c: 53:     PWM2_Init();
[e ( _PWM2_Init ..  ]
"55
[; ;main.c: 55:     int Angle;
[v _Angle `i ~T0 @X0 1 a ]
"58
[; ;main.c: 58:     while(1)
[e :U 110 ]
"59
[; ;main.c: 59:     {
{
"60
[; ;main.c: 60:         Angle = MPU6050_GetAngle();
[e = _Angle ( _MPU6050_GetAngle ..  ]
"61
[; ;main.c: 61:         Offset = 0;
[e = _Offset -> 0 `i ]
"62
[; ;main.c: 62:         Vgo=0;
[e = _Vgo -> 0 `i ]
"63
[; ;main.c: 63:         Vgo_L = 0;
[e = _Vgo_L -> 0 `i ]
"64
[; ;main.c: 64:         Vgo_R = 0;
[e = _Vgo_R -> 0 `i ]
"65
[; ;main.c: 65:         inputL = Angle + Offset - Vgo_L;
[e = _inputL - + _Angle _Offset _Vgo_L ]
"66
[; ;main.c: 66:         I_L += inputL;
[e =+ _I_L _inputL ]
"67
[; ;main.c: 67:         OutputL = Kp * inputL + Ki * I_L + Kd * (inputL - input_lastL);
[e = _OutputL -> + + * _Kp -> _inputL `f * _Ki -> _I_L `f * _Kd -> - _inputL _input_lastL `f `i ]
"68
[; ;main.c: 68:         input_lastL = inputL;
[e = _input_lastL _inputL ]
"69
[; ;main.c: 69:         if (OutputL > -100 && OutputL < 100) OutputL = 0;
[e $ ! && > _OutputL -U -> 100 `i < _OutputL -> 100 `i 112  ]
[e = _OutputL -> 0 `i ]
[e :U 112 ]
"70
[; ;main.c: 70:         OutputL = constrain(OutputL, -1023, 1023);
[e = _OutputL ( _constrain (3 , , -> _OutputL `f -U -> 1023 `i -> 1023 `i ]
"72
[; ;main.c: 72:         inputR = Angle + Offset - Vgo_R;
[e = _inputR - + _Angle _Offset _Vgo_R ]
"73
[; ;main.c: 73:         I_R += inputR;
[e =+ _I_R _inputR ]
"74
[; ;main.c: 74:         OutputR = Kp * inputR + Ki * I_R + Kd * (inputR - input_lastR);
[e = _OutputR -> + + * _Kp -> _inputR `f * _Ki -> _I_R `f * _Kd -> - _inputR _input_lastR `f `i ]
"75
[; ;main.c: 75:         input_lastR = inputR;
[e = _input_lastR _inputR ]
"76
[; ;main.c: 76:         if (OutputR > -100 && OutputR < 100) OutputR = 0;
[e $ ! && > _OutputR -U -> 100 `i < _OutputR -> 100 `i 113  ]
[e = _OutputR -> 0 `i ]
[e :U 113 ]
"77
[; ;main.c: 77:         OutputR = constrain(OutputR, -1023, 1023);
[e = _OutputR ( _constrain (3 , , -> _OutputR `f -U -> 1023 `i -> 1023 `i ]
"90
[; ;main.c: 90:         Speed_L(OutputL);
[e ( _Speed_L (1 _OutputL ]
"91
[; ;main.c: 91:         Speed_R(OutputR);
[e ( _Speed_R (1 _OutputR ]
"94
[; ;main.c: 94:         _delay((unsigned long)((80)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 80 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"95
[; ;main.c: 95:     }
}
[e :U 109 ]
[e $U 110  ]
[e :U 111 ]
"96
[; ;main.c: 96:     return;
[e $UE 108  ]
"97
[; ;main.c: 97: }
[e :UE 108 ]
}

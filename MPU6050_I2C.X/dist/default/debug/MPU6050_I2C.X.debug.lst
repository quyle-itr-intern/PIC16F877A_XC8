

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 18 08:15:39 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.32
    45                           ; Generated 02/02/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  0087                     	;# 
   238  0088                     	;# 
   239  0089                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0094                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000E                     	;# 
   275  000F                     	;# 
   276  0010                     	;# 
   277  0011                     	;# 
   278  0012                     	;# 
   279  0013                     	;# 
   280  0014                     	;# 
   281  0015                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0017                     	;# 
   285  0018                     	;# 
   286  0019                     	;# 
   287  001A                     	;# 
   288  001B                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  001D                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  0081                     	;# 
   295  0085                     	;# 
   296  0086                     	;# 
   297  0087                     	;# 
   298  0088                     	;# 
   299  0089                     	;# 
   300  008C                     	;# 
   301  008D                     	;# 
   302  008E                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0094                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379                           
   380                           	psect	idataBANK1
   381  01D5                     __pidataBANK1:
   382                           
   383                           ;initializer for _PWM_Frequency
   384  01D5  3488               	retlw	136
   385  01D6  3413               	retlw	19
   386  01D7  3400               	retlw	0
   387  01D8  3400               	retlw	0
   388                           
   389                           	psect	strings
   390  0011                     __pstrings:
   391  0011                     stringtab:
   392  0011                     __stringtab:
   393  0011                     stringcode:	
   394                           ;	String table - string pointers are 1 byte each
   395                           
   396  0011                     stringdir:
   397  0011  3000               	movlw	high stringdir
   398  0012  008A               	movwf	10
   399  0013  0804               	movf	4,w
   400  0014  0A84               	incf	4,f
   401  0015  0782               	addwf	2,f
   402  0016                     __stringbase:
   403  0016  3400               	retlw	0
   404  0017                     __end_of__stringtab:
   405  0017                     _dpowers:
   406  0017  3401               	retlw	1
   407  0018  3400               	retlw	0
   408  0019  340A               	retlw	10
   409  001A  3400               	retlw	0
   410  001B  3464               	retlw	100
   411  001C  3400               	retlw	0
   412  001D  34E8               	retlw	232
   413  001E  3403               	retlw	3
   414  001F  3410               	retlw	16
   415  0020  3427               	retlw	39
   416  0021                     __end_of_dpowers:
   417  0021                     _K:
   418  0021  3427               	retlw	39
   419  0022  3431               	retlw	49
   420  0023  3408               	retlw	8
   421  0024  3440               	retlw	64
   422  0025                     __end_of_K:
   423  0025                     _Kd:
   424  0025  3400               	retlw	0
   425  0026  3400               	retlw	0
   426  0027  3400               	retlw	0
   427  0028  3400               	retlw	0
   428  0029                     __end_of_Kd:
   429  0029                     _Ki:
   430  0029  3400               	retlw	0
   431  002A  3400               	retlw	0
   432  002B  3400               	retlw	0
   433  002C  3440               	retlw	64
   434  002D                     __end_of_Ki:
   435  002D                     _Kp:
   436  002D  3400               	retlw	0
   437  002E  3400               	retlw	0
   438  002F  3420               	retlw	32
   439  0030  3442               	retlw	66
   440  0031                     __end_of_Kp:
   441  0008                     _PORTDbits	set	8
   442  001B                     _CCPR2L	set	27
   443  0015                     _CCPR1L	set	21
   444  001D                     _CCP2CONbits	set	29
   445  0011                     _TMR2	set	17
   446  0012                     _T2CONbits	set	18
   447  0017                     _CCP1CONbits	set	23
   448  0013                     _SSPBUF	set	19
   449  000C                     _PIR1bits	set	12
   450  0014                     _SSPCONbits	set	20
   451  0014                     _SSPCON	set	20
   452  001A                     _RCREG	set	26
   453  0019                     _TXREG	set	25
   454  000B                     _INTCONbits	set	11
   455  00EC                     _CCP2Y	set	236
   456  00ED                     _CCP2X	set	237
   457  00BC                     _CCP1Y	set	188
   458  00BD                     _CCP1X	set	189
   459  0065                     _RCIF	set	101
   460  00C4                     _CREN	set	196
   461  00C7                     _SPEN	set	199
   462  0092                     _PR2	set	146
   463  0088                     _TRISDbits	set	136
   464  0091                     _SSPCON2bits	set	145
   465  0093                     _SSPADD	set	147
   466  0094                     _SSPSTATbits	set	148
   467  0091                     _SSPCON2	set	145
   468  0099                     _SPBRG	set	153
   469  0087                     _TRISCbits	set	135
   470  04C1                     _TRMT	set	1217
   471  0465                     _RCIE	set	1125
   472  04C5                     _TXEN	set	1221
   473  0031                     STR_1:
   474  0031  3420               	retlw	32	;' '
   475  0032  3441               	retlw	65	;'A'
   476  0033  3478               	retlw	120	;'x'
   477  0034  3420               	retlw	32	;' '
   478  0035  343D               	retlw	61	;'='
   479  0036  3420               	retlw	32	;' '
   480  0037  3425               	retlw	37	;'%'
   481  0038  3464               	retlw	100	;'d'
   482  0039  3420               	retlw	32	;' '
   483  003A  3420               	retlw	32	;' '
   484  003B  3420               	retlw	32	;' '
   485  003C  3420               	retlw	32	;' '
   486  003D  340A               	retlw	10
   487  003E  3400               	retlw	0
   488                           
   489                           	psect	cinit
   490  07D2                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07D2                     __initialization:
   494                           
   495                           ; Initialize objects allocated to BANK1
   496  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   497  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   498  07D4  120A  118A  21D5  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   499  07D9  00EA               	movwf	__pdataBANK1& (0+127)
   500  07DA  120A  118A  21D6  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   501  07DF  00EB               	movwf	(__pdataBANK1+1)& (0+127)
   502  07E0  120A  118A  21D7  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   503  07E5  00EC               	movwf	(__pdataBANK1+2)& (0+127)
   504  07E6  120A  118A  21D8  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   505  07EB  00ED               	movwf	(__pdataBANK1+3)& (0+127)
   506                           
   507                           ; Clear objects allocated to BANK1
   508  07EC  1383               	bcf	3,7	;select IRP bank0
   509  07ED  30A0               	movlw	low __pbssBANK1
   510  07EE  0084               	movwf	4
   511  07EF  30EA               	movlw	low (__pbssBANK1+74)
   512  07F0  120A  118A  21E1  120A  118A  	fcall	clear_ram0
   513                           
   514                           ; Clear objects allocated to BANK0
   515  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   516  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   517  07F7  01EC               	clrf	__pbssBANK0& (0+127)
   518  07F8  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   519  07F9  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   520  07FA  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   521                           
   522                           ; Clear objects allocated to COMMON
   523  07FB  01FB               	clrf	__pbssCOMMON& (0+127)
   524  07FC                     end_of_initialization:	
   525                           ;End of C runtime variable initialization code
   526                           
   527  07FC                     __end_of__initialization:
   528  07FC  0183               	clrf	3
   529  07FD  120A  118A  2AE0   	ljmp	_main	;jump to C main() function
   530                           
   531                           	psect	bssCOMMON
   532  007B                     __pbssCOMMON:
   533  007B                     _rx_index:
   534  007B                     	ds	1
   535                           
   536                           	psect	bssBANK0
   537  006C                     __pbssBANK0:
   538  006C                     _speed:
   539  006C                     	ds	4
   540                           
   541                           	psect	bssBANK1
   542  00A0                     __pbssBANK1:
   543  00A0                     _error:
   544  00A0                     	ds	4
   545  00A4                     _last_error:
   546  00A4                     	ds	4
   547  00A8                     _integrated_error:
   548  00A8                     	ds	4
   549  00AC                     _dTerm:
   550  00AC                     	ds	4
   551  00B0                     _iTerm:
   552  00B0                     	ds	4
   553  00B4                     _pTerm:
   554  00B4                     	ds	4
   555  00B8                     _RX_Buffer:
   556  00B8                     	ds	50
   557                           
   558                           	psect	dataBANK1
   559  00EA                     __pdataBANK1:
   560  00EA                     _PWM_Frequency:
   561  00EA                     	ds	4
   562                           
   563                           	psect	clrtext
   564  01E1                     clear_ram0:	
   565                           ;	Called with FSR containing the base address, and
   566                           ;	W with the last address+1
   567                           
   568  01E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   569  01E2                     clrloop0:
   570  01E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   571  01E3  0A84               	incf	4,f	;increment pointer
   572  01E4  0604               	xorwf	4,w	;XOR with final address
   573  01E5  1903               	btfsc	3,2	;have we reached the end yet?
   574  01E6  3400               	retlw	0	;all done for this memory range, return
   575  01E7  0604               	xorwf	4,w	;XOR again to restore value
   576  01E8  29E2               	goto	clrloop0	;do the next byte
   577                           
   578                           	psect	cstackCOMMON
   579  0071                     __pcstackCOMMON:
   580  0071                     ?_UART_Init:
   581  0071                     ?_MPU6050_Init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0071                     ?_PWM1_Init:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0071                     ?_PWM2_Init:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0071                     ?_MPU6050_Readvalue:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0071                     ?_HandleData:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0071                     ?_ClearRX_Buffer:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0071                     ??_ClearRX_Buffer:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0071                     ?_main:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0071                     ?_UART_Transmit:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0071                     ?_UART_Transmit_Text:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0071                     ?_isr1:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0071                     ?_I2C_Init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0071                     ?_I2C_Idle:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0071                     ?_I2C_Start:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0071                     ?_I2C_Restart:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0071                     ?_I2C_Stop:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0071                     ?_I2C_Read:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0071                     ?_I2C_Write:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0071                     ?i1_UART_Transmit:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0071                     ??i1_UART_Transmit:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0071                     ?i1_UART_Transmit_Text:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0071                     i1UART_Transmit@c:	
   645                           ; 1 bytes @ 0x0
   646                           
   647                           
   648                           ; 1 bytes @ 0x0
   649  0071                     	ds	1
   650  0072                     ??i1_UART_Transmit_Text:
   651  0072                     ClearRX_Buffer@i:	
   652                           ; 1 bytes @ 0x1
   653                           
   654                           
   655                           ; 1 bytes @ 0x1
   656  0072                     	ds	1
   657  0073                     i1UART_Transmit_Text@str:
   658                           
   659                           ; 1 bytes @ 0x2
   660  0073                     	ds	1
   661  0074                     i1UART_Transmit_Text@i:
   662                           
   663                           ; 1 bytes @ 0x3
   664  0074                     	ds	1
   665  0075                     ??_HandleData:
   666  0075                     HandleData@RX:	
   667                           ; 1 bytes @ 0x4
   668                           
   669                           
   670                           ; 1 bytes @ 0x4
   671  0075                     	ds	1
   672  0076                     ??_isr1:
   673                           
   674                           ; 1 bytes @ 0x5
   675  0076                     	ds	4
   676  007A                     isr1@ReceivedData:
   677                           
   678                           ; 1 bytes @ 0x9
   679  007A                     	ds	1
   680                           
   681                           	psect	cstackBANK0
   682  0020                     __pcstackBANK0:
   683  0020                     ??_UART_Init:
   684  0020                     ??_UART_Transmit:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0020                     ??_I2C_Init:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     ??_I2C_Idle:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0020                     ?___awdiv:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0020                     ?___lwdiv:	
   697                           ; 2 bytes @ 0x0
   698                           
   699  0020                     ?___aldiv:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0020                     UART_Transmit@c:	
   703                           ; 4 bytes @ 0x0
   704                           
   705  0020                     ___awdiv@divisor:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     ___lwdiv@divisor:	
   709                           ; 2 bytes @ 0x0
   710                           
   711  0020                     ___aldiv@divisor:	
   712                           ; 2 bytes @ 0x0
   713                           
   714                           
   715                           ; 4 bytes @ 0x0
   716  0020                     	ds	1
   717  0021                     ??_UART_Transmit_Text:
   718                           
   719                           ; 1 bytes @ 0x1
   720  0021                     	ds	1
   721  0022                     UART_Transmit_Text@i:
   722  0022                     ___awdiv@dividend:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0022                     ___lwdiv@dividend:	
   726                           ; 2 bytes @ 0x2
   727                           
   728                           
   729                           ; 2 bytes @ 0x2
   730  0022                     	ds	1
   731  0023                     ??_I2C_Start:
   732  0023                     ??_I2C_Restart:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0023                     ??_I2C_Stop:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0023                     ??_I2C_Read:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0023                     ??_I2C_Write:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0023                     UART_Transmit_Text@str:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0023                     I2C_Write@Tvalue:	
   748                           ; 1 bytes @ 0x3
   749                           
   750                           
   751                           ; 1 bytes @ 0x3
   752  0023                     	ds	1
   753  0024                     ?_MPU6050_Write:
   754  0024                     ??___awdiv:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0024                     ??___lwdiv:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0024                     I2C_Read@Rvalue:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0024                     MPU6050_Write@data:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0024                     ___aldiv@dividend:	
   767                           ; 1 bytes @ 0x4
   768                           
   769                           
   770                           ; 4 bytes @ 0x4
   771  0024                     	ds	1
   772  0025                     ??_MPU6050_Write:
   773  0025                     I2C_Read@ACK:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0025                     MPU6050_Write@add:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0025                     ___awdiv@counter:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0025                     ___lwdiv@quotient:	
   783                           ; 1 bytes @ 0x5
   784                           
   785                           
   786                           ; 2 bytes @ 0x5
   787  0025                     	ds	1
   788  0026                     ??_MPU6050_Init:
   789  0026                     ___awdiv@sign:	
   790                           ; 1 bytes @ 0x6
   791                           
   792                           
   793                           ; 1 bytes @ 0x6
   794  0026                     	ds	1
   795  0027                     ___lwdiv@counter:
   796  0027                     ___awdiv@quotient:	
   797                           ; 1 bytes @ 0x7
   798                           
   799                           
   800                           ; 2 bytes @ 0x7
   801  0027                     	ds	1
   802  0028                     ??___aldiv:
   803  0028                     ?___lwmod:	
   804                           ; 1 bytes @ 0x8
   805                           
   806  0028                     ___lwmod@divisor:	
   807                           ; 2 bytes @ 0x8
   808                           
   809                           
   810                           ; 2 bytes @ 0x8
   811  0028                     	ds	1
   812  0029                     ___aldiv@counter:
   813                           
   814                           ; 1 bytes @ 0x9
   815  0029                     	ds	1
   816  002A                     ___aldiv@sign:
   817  002A                     ___lwmod@dividend:	
   818                           ; 1 bytes @ 0xA
   819                           
   820                           
   821                           ; 2 bytes @ 0xA
   822  002A                     	ds	1
   823  002B                     ___aldiv@quotient:
   824                           
   825                           ; 4 bytes @ 0xB
   826  002B                     	ds	1
   827  002C                     ??___lwmod:
   828                           
   829                           ; 1 bytes @ 0xC
   830  002C                     	ds	1
   831  002D                     ___lwmod@counter:
   832                           
   833                           ; 1 bytes @ 0xD
   834  002D                     	ds	1
   835  002E                     ?_sprintf:
   836  002E                     sprintf@f:	
   837                           ; 2 bytes @ 0xE
   838                           
   839                           
   840                           ; 1 bytes @ 0xE
   841  002E                     	ds	1
   842  002F                     ??_PWM1_Init:
   843  002F                     ??_PWM2_Init:	
   844                           ; 1 bytes @ 0xF
   845                           
   846                           
   847                           ; 1 bytes @ 0xF
   848  002F                     	ds	2
   849  0031                     ??_sprintf:
   850                           
   851                           ; 1 bytes @ 0x11
   852  0031                     	ds	3
   853  0034                     sprintf@ap:
   854                           
   855                           ; 1 bytes @ 0x14
   856  0034                     	ds	1
   857  0035                     sprintf@flag:
   858                           
   859                           ; 1 bytes @ 0x15
   860  0035                     	ds	1
   861  0036                     sprintf@prec:
   862                           
   863                           ; 1 bytes @ 0x16
   864  0036                     	ds	1
   865  0037                     sprintf@val:
   866                           
   867                           ; 2 bytes @ 0x17
   868  0037                     	ds	2
   869  0039                     sprintf@sp:
   870                           
   871                           ; 1 bytes @ 0x19
   872  0039                     	ds	1
   873  003A                     sprintf@c:
   874                           
   875                           ; 1 bytes @ 0x1A
   876  003A                     	ds	1
   877  003B                     ??_MPU6050_Readvalue:
   878                           
   879                           ; 1 bytes @ 0x1B
   880  003B                     	ds	4
   881  003F                     MPU6050_Readvalue@buffer:
   882                           
   883                           ; 40 bytes @ 0x1F
   884  003F                     	ds	40
   885  0067                     MPU6050_Readvalue@Ax:
   886                           
   887                           ; 2 bytes @ 0x47
   888  0067                     	ds	2
   889  0069                     ??_main:
   890                           
   891                           ; 1 bytes @ 0x49
   892  0069                     	ds	3
   893                           
   894                           	psect	maintext
   895  02E0                     __pmaintext:	
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 12 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : B00/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0
   917 ;;      Temps:          0       3       0       0       0
   918 ;;      Totals:         0       3       0       0       0
   919 ;;Total ram usage:        3 bytes
   920 ;; Hardware stack levels required when called: 8
   921 ;; This function calls:
   922 ;;		_MPU6050_Init
   923 ;;		_MPU6050_Readvalue
   924 ;;		_PWM1_Init
   925 ;;		_PWM2_Init
   926 ;;		_UART_Init
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  02E0                     _main:
   935  02E0                     l2048:	
   936                           ;incstack = 0
   937                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   938                           
   939                           
   940                           ;main.c: 14:     UART_Init();
   941  02E0  120A  118A  224B  120A  118A  	fcall	_UART_Init
   942                           
   943                           ;main.c: 15:     MPU6050_Init();
   944  02E5  120A  118A  249C  120A  118A  	fcall	_MPU6050_Init
   945                           
   946                           ;main.c: 16:     PWM1_Init();
   947  02EA  120A  118A  23F4  120A  118A  	fcall	_PWM1_Init
   948                           
   949                           ;main.c: 17:     PWM2_Init();
   950  02EF  120A  118A  2448  120A  118A  	fcall	_PWM2_Init
   951  02F4                     l2050:
   952                           
   953                           ;main.c: 20:     {;main.c: 21:         MPU6050_Readvalue();
   954  02F4  120A  118A  25D2  120A  118A  	fcall	_MPU6050_Readvalue
   955  02F9                     l2052:
   956                           
   957                           ;main.c: 23:         _delay((unsigned long)((50)*(20000000/4000.0)));
   958  02F9  3002               	movlw	2
   959  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   960  02FB  1303               	bcf	3,6	;RP1=0, select bank0
   961  02FC  00EB               	movwf	??_main+2
   962  02FD  3045               	movlw	69
   963  02FE  00EA               	movwf	??_main+1
   964  02FF  30A9               	movlw	169
   965  0300  00E9               	movwf	??_main
   966  0301                     u3147:
   967  0301  0BE9               	decfsz	??_main,f
   968  0302  2B01               	goto	u3147
   969  0303  0BEA               	decfsz	??_main+1,f
   970  0304  2B01               	goto	u3147
   971  0305  0BEB               	decfsz	??_main+2,f
   972  0306  2B01               	goto	u3147
   973  0307  2AF4               	goto	l2050
   974  0308  120A  118A  280E   	ljmp	start
   975  030B                     __end_of_main:
   976                           
   977                           	psect	text1
   978  024B                     __ptext1:	
   979 ;; *************** function _UART_Init *****************
   980 ;; Defined at:
   981 ;;		line 9 in file "UART.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0
   998 ;;      Totals:         0       0       0       0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 4
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _UART_Init
  1011  024B                     _UART_Init:
  1012  024B                     l1716:	
  1013                           ;incstack = 0
  1014                           ; Regs used in _UART_Init: [wreg]
  1015                           
  1016                           
  1017                           ;UART.c: 11:     TRISCbits.TRISC6 = 0;
  1018  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1019  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1020  024D  1307               	bcf	7,6	;volatile
  1021                           
  1022                           ;UART.c: 12:     TRISCbits.TRISC7 = 1;
  1023  024E  1787               	bsf	7,7	;volatile
  1024  024F                     l1718:
  1025                           
  1026                           ;UART.c: 14:     SPBRG = 32;
  1027  024F  3020               	movlw	32
  1028  0250  0099               	movwf	25	;volatile
  1029  0251                     l1720:
  1030                           
  1031                           ;UART.c: 15:     SPEN = 1;
  1032  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0253  1798               	bsf	24,7	;volatile
  1035  0254                     l1722:
  1036                           
  1037                           ;UART.c: 16:     TXEN = 1;
  1038  0254  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0255  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0256  1698               	bsf	24,5	;volatile
  1041  0257                     l1724:
  1042                           
  1043                           ;UART.c: 17:     CREN = 1;
  1044  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0259  1618               	bsf	24,4	;volatile
  1047  025A                     l1726:
  1048                           
  1049                           ;UART.c: 18:     RCIE = 1;
  1050  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1051  025B  1303               	bcf	3,6	;RP1=0, select bank1
  1052  025C  168C               	bsf	12,5	;volatile
  1053  025D                     l1728:
  1054                           
  1055                           ;UART.c: 19:     INTCONbits.GIE = 1;
  1056  025D  178B               	bsf	11,7	;volatile
  1057  025E                     l1730:
  1058                           
  1059                           ;UART.c: 20:     INTCONbits.PEIE = 1;
  1060  025E  170B               	bsf	11,6	;volatile
  1061  025F                     l59:
  1062  025F  0008               	return
  1063  0260                     __end_of_UART_Init:
  1064                           
  1065                           	psect	text2
  1066  0448                     __ptext2:	
  1067 ;; *************** function _PWM2_Init *****************
  1068 ;; Defined at:
  1069 ;;		line 81 in file "MPU6050.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0
  1085 ;;      Temps:          0       4       0       0       0
  1086 ;;      Totals:         0       4       0       0       0
  1087 ;;Total ram usage:        4 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 5
  1090 ;; This function calls:
  1091 ;;		___aldiv
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           
  1098                           ;psect for function _PWM2_Init
  1099  0448                     _PWM2_Init:
  1100  0448                     l1764:	
  1101                           ;incstack = 0
  1102                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
  1103                           
  1104                           
  1105                           ;MPU6050.c: 83:     TRISDbits.TRISD3 = 0;
  1106  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1108  044A  1188               	bcf	8,3	;volatile
  1109                           
  1110                           ;MPU6050.c: 84:     TRISDbits.TRISD2 = 0;
  1111  044B  1108               	bcf	8,2	;volatile
  1112  044C                     l1766:
  1113                           
  1114                           ;MPU6050.c: 85:     PR2 = 20000000/(4*PWM_Frequency*4) - 1;
  1115  044C  086A               	movf	_PWM_Frequency^(0+128),w
  1116  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1117  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1118  044F  00AF               	movwf	??_PWM2_Init
  1119  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1120  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0452  086B               	movf	(_PWM_Frequency+1)^(0+128),w
  1122  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0455  00B0               	movwf	??_PWM2_Init+1
  1125  0456  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0457  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0458  086C               	movf	(_PWM_Frequency+2)^(0+128),w
  1128  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1129  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1130  045B  00B1               	movwf	??_PWM2_Init+2
  1131  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1132  045D  1303               	bcf	3,6	;RP1=0, select bank1
  1133  045E  086D               	movf	(_PWM_Frequency+3)^(0+128),w
  1134  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0461  00B2               	movwf	??_PWM2_Init+3
  1137  0462  3002               	movlw	2
  1138  0463                     u1415:
  1139  0463  1003               	clrc
  1140  0464  0DAF               	rlf	??_PWM2_Init,f
  1141  0465  0DB0               	rlf	??_PWM2_Init+1,f
  1142  0466  0DB1               	rlf	??_PWM2_Init+2,f
  1143  0467  0DB2               	rlf	??_PWM2_Init+3,f
  1144  0468                     u1410:
  1145  0468  3EFF               	addlw	-1
  1146  0469  1D03               	skipz
  1147  046A  2C63               	goto	u1415
  1148  046B  3002               	movlw	2
  1149  046C                     u1425:
  1150  046C  1003               	clrc
  1151  046D  0DAF               	rlf	??_PWM2_Init,f
  1152  046E  0DB0               	rlf	??_PWM2_Init+1,f
  1153  046F  0DB1               	rlf	??_PWM2_Init+2,f
  1154  0470  0DB2               	rlf	??_PWM2_Init+3,f
  1155  0471                     u1420:
  1156  0471  3EFF               	addlw	-1
  1157  0472  1D03               	skipz
  1158  0473  2C6C               	goto	u1425
  1159  0474  0832               	movf	??_PWM2_Init+3,w
  1160  0475  00A3               	movwf	___aldiv@divisor+3
  1161  0476  0831               	movf	??_PWM2_Init+2,w
  1162  0477  00A2               	movwf	___aldiv@divisor+2
  1163  0478  0830               	movf	??_PWM2_Init+1,w
  1164  0479  00A1               	movwf	___aldiv@divisor+1
  1165  047A  082F               	movf	??_PWM2_Init,w
  1166  047B  00A0               	movwf	___aldiv@divisor
  1167  047C  3001               	movlw	1
  1168  047D  00A7               	movwf	___aldiv@dividend+3
  1169  047E  3031               	movlw	49
  1170  047F  00A6               	movwf	___aldiv@dividend+2
  1171  0480  302D               	movlw	45
  1172  0481  00A5               	movwf	___aldiv@dividend+1
  1173  0482  3000               	movlw	0
  1174  0483  00A4               	movwf	___aldiv@dividend
  1175  0484  120A  118A  264B  120A  118A  	fcall	___aldiv
  1176  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1177  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1178  048B  0820               	movf	?___aldiv,w
  1179  048C  3EFF               	addlw	255
  1180  048D  1683               	bsf	3,5	;RP0=1, select bank1
  1181  048E  1303               	bcf	3,6	;RP1=0, select bank1
  1182  048F  0092               	movwf	18	;volatile
  1183  0490                     l1768:
  1184                           
  1185                           ;MPU6050.c: 86:     CCP2CONbits.CCP2M3 = 1;
  1186  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0492  159D               	bsf	29,3	;volatile
  1189  0493                     l1770:
  1190                           
  1191                           ;MPU6050.c: 87:     CCP2CONbits.CCP2M2 = 1;
  1192  0493  151D               	bsf	29,2	;volatile
  1193  0494                     l263:	
  1194                           ;MPU6050.c: 93:     if(4 == 4)
  1195                           
  1196                           
  1197                           ;MPU6050.c: 94:     {;MPU6050.c: 95:         T2CONbits.T2CKPS1 = 0;
  1198  0494  1092               	bcf	18,1	;volatile
  1199                           
  1200                           ;MPU6050.c: 96:         T2CONbits.T2CKPS0 = 1;
  1201  0495  1412               	bsf	18,0	;volatile
  1202  0496                     l1776:
  1203                           
  1204                           ;MPU6050.c: 103:     TMR2 = 0;
  1205  0496  0191               	clrf	17	;volatile
  1206  0497                     l1778:
  1207                           
  1208                           ;MPU6050.c: 104:     T2CONbits.TMR2ON = 1;
  1209  0497  1512               	bsf	18,2	;volatile
  1210  0498                     l1780:
  1211                           
  1212                           ;MPU6050.c: 105:     TRISCbits.TRISC1 = 0;
  1213  0498  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0499  1303               	bcf	3,6	;RP1=0, select bank1
  1215  049A  1087               	bcf	7,1	;volatile
  1216  049B                     l266:
  1217  049B  0008               	return
  1218  049C                     __end_of_PWM2_Init:
  1219                           
  1220                           	psect	text3
  1221  03F4                     __ptext3:	
  1222 ;; *************** function _PWM1_Init *****************
  1223 ;; Defined at:
  1224 ;;		line 54 in file "MPU6050.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0
  1240 ;;      Temps:          0       4       0       0       0
  1241 ;;      Totals:         0       4       0       0       0
  1242 ;;Total ram usage:        4 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 5
  1245 ;; This function calls:
  1246 ;;		___aldiv
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _PWM1_Init
  1254  03F4                     _PWM1_Init:
  1255  03F4                     l1746:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
  1258                           
  1259                           
  1260                           ;MPU6050.c: 56:     TRISDbits.TRISD7 = 0;
  1261  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1262  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1263  03F6  1388               	bcf	8,7	;volatile
  1264                           
  1265                           ;MPU6050.c: 57:     TRISDbits.TRISD6 = 0;
  1266  03F7  1308               	bcf	8,6	;volatile
  1267  03F8                     l1748:
  1268                           
  1269                           ;MPU6050.c: 58:     PR2 = 20000000/(4*PWM_Frequency*4) - 1;
  1270  03F8  086A               	movf	_PWM_Frequency^(0+128),w
  1271  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1272  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1273  03FB  00AF               	movwf	??_PWM1_Init
  1274  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1275  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1276  03FE  086B               	movf	(_PWM_Frequency+1)^(0+128),w
  1277  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0401  00B0               	movwf	??_PWM1_Init+1
  1280  0402  1683               	bsf	3,5	;RP0=1, select bank1
  1281  0403  1303               	bcf	3,6	;RP1=0, select bank1
  1282  0404  086C               	movf	(_PWM_Frequency+2)^(0+128),w
  1283  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0407  00B1               	movwf	??_PWM1_Init+2
  1286  0408  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0409  1303               	bcf	3,6	;RP1=0, select bank1
  1288  040A  086D               	movf	(_PWM_Frequency+3)^(0+128),w
  1289  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1290  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1291  040D  00B2               	movwf	??_PWM1_Init+3
  1292  040E  3002               	movlw	2
  1293  040F                     u1395:
  1294  040F  1003               	clrc
  1295  0410  0DAF               	rlf	??_PWM1_Init,f
  1296  0411  0DB0               	rlf	??_PWM1_Init+1,f
  1297  0412  0DB1               	rlf	??_PWM1_Init+2,f
  1298  0413  0DB2               	rlf	??_PWM1_Init+3,f
  1299  0414                     u1390:
  1300  0414  3EFF               	addlw	-1
  1301  0415  1D03               	skipz
  1302  0416  2C0F               	goto	u1395
  1303  0417  3002               	movlw	2
  1304  0418                     u1405:
  1305  0418  1003               	clrc
  1306  0419  0DAF               	rlf	??_PWM1_Init,f
  1307  041A  0DB0               	rlf	??_PWM1_Init+1,f
  1308  041B  0DB1               	rlf	??_PWM1_Init+2,f
  1309  041C  0DB2               	rlf	??_PWM1_Init+3,f
  1310  041D                     u1400:
  1311  041D  3EFF               	addlw	-1
  1312  041E  1D03               	skipz
  1313  041F  2C18               	goto	u1405
  1314  0420  0832               	movf	??_PWM1_Init+3,w
  1315  0421  00A3               	movwf	___aldiv@divisor+3
  1316  0422  0831               	movf	??_PWM1_Init+2,w
  1317  0423  00A2               	movwf	___aldiv@divisor+2
  1318  0424  0830               	movf	??_PWM1_Init+1,w
  1319  0425  00A1               	movwf	___aldiv@divisor+1
  1320  0426  082F               	movf	??_PWM1_Init,w
  1321  0427  00A0               	movwf	___aldiv@divisor
  1322  0428  3001               	movlw	1
  1323  0429  00A7               	movwf	___aldiv@dividend+3
  1324  042A  3031               	movlw	49
  1325  042B  00A6               	movwf	___aldiv@dividend+2
  1326  042C  302D               	movlw	45
  1327  042D  00A5               	movwf	___aldiv@dividend+1
  1328  042E  3000               	movlw	0
  1329  042F  00A4               	movwf	___aldiv@dividend
  1330  0430  120A  118A  264B  120A  118A  	fcall	___aldiv
  1331  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0437  0820               	movf	?___aldiv,w
  1334  0438  3EFF               	addlw	255
  1335  0439  1683               	bsf	3,5	;RP0=1, select bank1
  1336  043A  1303               	bcf	3,6	;RP1=0, select bank1
  1337  043B  0092               	movwf	18	;volatile
  1338  043C                     l1750:
  1339                           
  1340                           ;MPU6050.c: 59:     CCP1CONbits.CCP1M3 = 1;
  1341  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1342  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1343  043E  1597               	bsf	23,3	;volatile
  1344  043F                     l1752:
  1345                           
  1346                           ;MPU6050.c: 60:     CCP1CONbits.CCP1M2 = 1;
  1347  043F  1517               	bsf	23,2	;volatile
  1348  0440                     l257:	
  1349                           ;MPU6050.c: 66:     if(4 == 4)
  1350                           
  1351                           
  1352                           ;MPU6050.c: 67:     {;MPU6050.c: 68:         T2CONbits.T2CKPS1 = 0;
  1353  0440  1092               	bcf	18,1	;volatile
  1354                           
  1355                           ;MPU6050.c: 69:         T2CONbits.T2CKPS0 = 1;
  1356  0441  1412               	bsf	18,0	;volatile
  1357  0442                     l1758:
  1358                           
  1359                           ;MPU6050.c: 76:     TMR2 = 0;
  1360  0442  0191               	clrf	17	;volatile
  1361  0443                     l1760:
  1362                           
  1363                           ;MPU6050.c: 77:     T2CONbits.TMR2ON = 1;
  1364  0443  1512               	bsf	18,2	;volatile
  1365  0444                     l1762:
  1366                           
  1367                           ;MPU6050.c: 78:     TRISCbits.TRISC2 = 0;
  1368  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1369  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0446  1107               	bcf	7,2	;volatile
  1371  0447                     l260:
  1372  0447  0008               	return
  1373  0448                     __end_of_PWM1_Init:
  1374                           
  1375                           	psect	text4
  1376  064B                     __ptext4:	
  1377 ;; *************** function ___aldiv *****************
  1378 ;; Defined at:
  1379 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\aldiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  divisor         4    0[BANK0 ] long 
  1382 ;;  dividend        4    4[BANK0 ] long 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  quotient        4   11[BANK0 ] long 
  1385 ;;  sign            1   10[BANK0 ] unsigned char 
  1386 ;;  counter         1    9[BANK0 ] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  4    0[BANK0 ] long 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       8       0       0       0
  1397 ;;      Locals:         0       6       0       0       0
  1398 ;;      Temps:          0       1       0       0       0
  1399 ;;      Totals:         0      15       0       0       0
  1400 ;;Total ram usage:       15 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 4
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_PWM1_Init
  1407 ;;		_PWM2_Init
  1408 ;;		_map
  1409 ;;		_PWM1_Set_Duty
  1410 ;;		_PWM2_Set_Duty
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function ___aldiv
  1416  064B                     ___aldiv:
  1417  064B                     l1624:	
  1418                           ;incstack = 0
  1419                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1420                           
  1421  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1422  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1423  064D  01AA               	clrf	___aldiv@sign
  1424  064E                     l1626:
  1425  064E  1FA3               	btfss	___aldiv@divisor+3,7
  1426  064F  2E51               	goto	u1181
  1427  0650  2E52               	goto	u1180
  1428  0651                     u1181:
  1429  0651  2E5F               	goto	l473
  1430  0652                     u1180:
  1431  0652                     l1628:
  1432  0652  09A0               	comf	___aldiv@divisor,f
  1433  0653  09A1               	comf	___aldiv@divisor+1,f
  1434  0654  09A2               	comf	___aldiv@divisor+2,f
  1435  0655  09A3               	comf	___aldiv@divisor+3,f
  1436  0656  0AA0               	incf	___aldiv@divisor,f
  1437  0657  1903               	skipnz
  1438  0658  0AA1               	incf	___aldiv@divisor+1,f
  1439  0659  1903               	skipnz
  1440  065A  0AA2               	incf	___aldiv@divisor+2,f
  1441  065B  1903               	skipnz
  1442  065C  0AA3               	incf	___aldiv@divisor+3,f
  1443  065D  01AA               	clrf	___aldiv@sign
  1444  065E  0AAA               	incf	___aldiv@sign,f
  1445  065F                     l473:
  1446  065F  1FA7               	btfss	___aldiv@dividend+3,7
  1447  0660  2E62               	goto	u1191
  1448  0661  2E63               	goto	u1190
  1449  0662                     u1191:
  1450  0662  2E72               	goto	l1634
  1451  0663                     u1190:
  1452  0663                     l1630:
  1453  0663  09A4               	comf	___aldiv@dividend,f
  1454  0664  09A5               	comf	___aldiv@dividend+1,f
  1455  0665  09A6               	comf	___aldiv@dividend+2,f
  1456  0666  09A7               	comf	___aldiv@dividend+3,f
  1457  0667  0AA4               	incf	___aldiv@dividend,f
  1458  0668  1903               	skipnz
  1459  0669  0AA5               	incf	___aldiv@dividend+1,f
  1460  066A  1903               	skipnz
  1461  066B  0AA6               	incf	___aldiv@dividend+2,f
  1462  066C  1903               	skipnz
  1463  066D  0AA7               	incf	___aldiv@dividend+3,f
  1464  066E                     l1632:
  1465  066E  3001               	movlw	1
  1466  066F  00A8               	movwf	??___aldiv
  1467  0670  0828               	movf	??___aldiv,w
  1468  0671  06AA               	xorwf	___aldiv@sign,f
  1469  0672                     l1634:
  1470  0672  3000               	movlw	0
  1471  0673  00AE               	movwf	___aldiv@quotient+3
  1472  0674  3000               	movlw	0
  1473  0675  00AD               	movwf	___aldiv@quotient+2
  1474  0676  3000               	movlw	0
  1475  0677  00AC               	movwf	___aldiv@quotient+1
  1476  0678  3000               	movlw	0
  1477  0679  00AB               	movwf	___aldiv@quotient
  1478  067A                     l1636:
  1479  067A  0823               	movf	___aldiv@divisor+3,w
  1480  067B  0422               	iorwf	___aldiv@divisor+2,w
  1481  067C  0421               	iorwf	___aldiv@divisor+1,w
  1482  067D  0420               	iorwf	___aldiv@divisor,w
  1483  067E  1903               	skipnz
  1484  067F  2E81               	goto	u1201
  1485  0680  2E82               	goto	u1200
  1486  0681                     u1201:
  1487  0681  2ECF               	goto	l1656
  1488  0682                     u1200:
  1489  0682                     l1638:
  1490  0682  01A9               	clrf	___aldiv@counter
  1491  0683  0AA9               	incf	___aldiv@counter,f
  1492  0684  2E92               	goto	l1642
  1493  0685                     l1640:
  1494  0685  3001               	movlw	1
  1495  0686  00A8               	movwf	??___aldiv
  1496  0687                     u1215:
  1497  0687  1003               	clrc
  1498  0688  0DA0               	rlf	___aldiv@divisor,f
  1499  0689  0DA1               	rlf	___aldiv@divisor+1,f
  1500  068A  0DA2               	rlf	___aldiv@divisor+2,f
  1501  068B  0DA3               	rlf	___aldiv@divisor+3,f
  1502  068C  0BA8               	decfsz	??___aldiv,f
  1503  068D  2E87               	goto	u1215
  1504  068E  3001               	movlw	1
  1505  068F  00A8               	movwf	??___aldiv
  1506  0690  0828               	movf	??___aldiv,w
  1507  0691  07A9               	addwf	___aldiv@counter,f
  1508  0692                     l1642:
  1509  0692  1FA3               	btfss	___aldiv@divisor+3,7
  1510  0693  2E95               	goto	u1221
  1511  0694  2E96               	goto	u1220
  1512  0695                     u1221:
  1513  0695  2E85               	goto	l1640
  1514  0696                     u1220:
  1515  0696                     l1644:
  1516  0696  3001               	movlw	1
  1517  0697  00A8               	movwf	??___aldiv
  1518  0698                     u1235:
  1519  0698  1003               	clrc
  1520  0699  0DAB               	rlf	___aldiv@quotient,f
  1521  069A  0DAC               	rlf	___aldiv@quotient+1,f
  1522  069B  0DAD               	rlf	___aldiv@quotient+2,f
  1523  069C  0DAE               	rlf	___aldiv@quotient+3,f
  1524  069D  0BA8               	decfsz	??___aldiv,f
  1525  069E  2E98               	goto	u1235
  1526  069F                     l1646:
  1527  069F  0823               	movf	___aldiv@divisor+3,w
  1528  06A0  0227               	subwf	___aldiv@dividend+3,w
  1529  06A1  1D03               	skipz
  1530  06A2  2EAD               	goto	u1245
  1531  06A3  0822               	movf	___aldiv@divisor+2,w
  1532  06A4  0226               	subwf	___aldiv@dividend+2,w
  1533  06A5  1D03               	skipz
  1534  06A6  2EAD               	goto	u1245
  1535  06A7  0821               	movf	___aldiv@divisor+1,w
  1536  06A8  0225               	subwf	___aldiv@dividend+1,w
  1537  06A9  1D03               	skipz
  1538  06AA  2EAD               	goto	u1245
  1539  06AB  0820               	movf	___aldiv@divisor,w
  1540  06AC  0224               	subwf	___aldiv@dividend,w
  1541  06AD                     u1245:
  1542  06AD  1C03               	skipc
  1543  06AE  2EB0               	goto	u1241
  1544  06AF  2EB1               	goto	u1240
  1545  06B0                     u1241:
  1546  06B0  2EC0               	goto	l1652
  1547  06B1                     u1240:
  1548  06B1                     l1648:
  1549  06B1  0820               	movf	___aldiv@divisor,w
  1550  06B2  02A4               	subwf	___aldiv@dividend,f
  1551  06B3  0821               	movf	___aldiv@divisor+1,w
  1552  06B4  1C03               	skipc
  1553  06B5  0F21               	incfsz	___aldiv@divisor+1,w
  1554  06B6  02A5               	subwf	___aldiv@dividend+1,f
  1555  06B7  0822               	movf	___aldiv@divisor+2,w
  1556  06B8  1C03               	skipc
  1557  06B9  0F22               	incfsz	___aldiv@divisor+2,w
  1558  06BA  02A6               	subwf	___aldiv@dividend+2,f
  1559  06BB  0823               	movf	___aldiv@divisor+3,w
  1560  06BC  1C03               	skipc
  1561  06BD  0F23               	incfsz	___aldiv@divisor+3,w
  1562  06BE  02A7               	subwf	___aldiv@dividend+3,f
  1563  06BF                     l1650:
  1564  06BF  142B               	bsf	___aldiv@quotient,0
  1565  06C0                     l1652:
  1566  06C0  3001               	movlw	1
  1567  06C1                     u1255:
  1568  06C1  1003               	clrc
  1569  06C2  0CA3               	rrf	___aldiv@divisor+3,f
  1570  06C3  0CA2               	rrf	___aldiv@divisor+2,f
  1571  06C4  0CA1               	rrf	___aldiv@divisor+1,f
  1572  06C5  0CA0               	rrf	___aldiv@divisor,f
  1573  06C6  3EFF               	addlw	-1
  1574  06C7  1D03               	skipz
  1575  06C8  2EC1               	goto	u1255
  1576  06C9                     l1654:
  1577  06C9  3001               	movlw	1
  1578  06CA  02A9               	subwf	___aldiv@counter,f
  1579  06CB  1D03               	btfss	3,2
  1580  06CC  2ECE               	goto	u1261
  1581  06CD  2ECF               	goto	u1260
  1582  06CE                     u1261:
  1583  06CE  2E96               	goto	l1644
  1584  06CF                     u1260:
  1585  06CF                     l1656:
  1586  06CF  082A               	movf	___aldiv@sign,w
  1587  06D0  1903               	btfsc	3,2
  1588  06D1  2ED3               	goto	u1271
  1589  06D2  2ED4               	goto	u1270
  1590  06D3                     u1271:
  1591  06D3  2EDF               	goto	l1660
  1592  06D4                     u1270:
  1593  06D4                     l1658:
  1594  06D4  09AB               	comf	___aldiv@quotient,f
  1595  06D5  09AC               	comf	___aldiv@quotient+1,f
  1596  06D6  09AD               	comf	___aldiv@quotient+2,f
  1597  06D7  09AE               	comf	___aldiv@quotient+3,f
  1598  06D8  0AAB               	incf	___aldiv@quotient,f
  1599  06D9  1903               	skipnz
  1600  06DA  0AAC               	incf	___aldiv@quotient+1,f
  1601  06DB  1903               	skipnz
  1602  06DC  0AAD               	incf	___aldiv@quotient+2,f
  1603  06DD  1903               	skipnz
  1604  06DE  0AAE               	incf	___aldiv@quotient+3,f
  1605  06DF                     l1660:
  1606  06DF  082E               	movf	___aldiv@quotient+3,w
  1607  06E0  00A3               	movwf	?___aldiv+3
  1608  06E1  082D               	movf	___aldiv@quotient+2,w
  1609  06E2  00A2               	movwf	?___aldiv+2
  1610  06E3  082C               	movf	___aldiv@quotient+1,w
  1611  06E4  00A1               	movwf	?___aldiv+1
  1612  06E5  082B               	movf	___aldiv@quotient,w
  1613  06E6  00A0               	movwf	?___aldiv
  1614  06E7                     l483:
  1615  06E7  0008               	return
  1616  06E8                     __end_of___aldiv:
  1617                           
  1618                           	psect	text5
  1619  05D2                     __ptext5:	
  1620 ;; *************** function _MPU6050_Readvalue *****************
  1621 ;; Defined at:
  1622 ;;		line 217 in file "MPU6050.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  buffer         40   31[BANK0 ] unsigned char [40]
  1627 ;;  Ax              2   71[BANK0 ] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         0      42       0       0       0
  1639 ;;      Temps:          0       4       0       0       0
  1640 ;;      Totals:         0      46       0       0       0
  1641 ;;Total ram usage:       46 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 6
  1644 ;; This function calls:
  1645 ;;		_I2C_Read
  1646 ;;		_I2C_Restart
  1647 ;;		_I2C_Start
  1648 ;;		_I2C_Stop
  1649 ;;		_I2C_Write
  1650 ;;		_UART_Transmit_Text
  1651 ;;		___awdiv
  1652 ;;		_sprintf
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _MPU6050_Readvalue
  1660  05D2                     _MPU6050_Readvalue:
  1661  05D2                     l1782:	
  1662                           ;incstack = 0
  1663                           ; Regs used in _MPU6050_Readvalue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1664                           
  1665                           
  1666                           ;MPU6050.c: 219:   char buffer[40];;MPU6050.c: 220:   int Ax;;MPU6050.c: 222:   I2C_Star
      +                          t();
  1667  05D2  120A  118A  21F5  120A  118A  	fcall	_I2C_Start
  1668                           
  1669                           ;MPU6050.c: 223:   I2C_Write(0xD0);
  1670  05D7  30D0               	movlw	208
  1671  05D8  120A  118A  2260  120A  118A  	fcall	_I2C_Write
  1672                           
  1673                           ;MPU6050.c: 224:   I2C_Write(0x3B);
  1674  05DD  303B               	movlw	59
  1675  05DE  120A  118A  2260  120A  118A  	fcall	_I2C_Write
  1676                           
  1677                           ;MPU6050.c: 225:   I2C_Stop();
  1678  05E3  120A  118A  2202  120A  118A  	fcall	_I2C_Stop
  1679                           
  1680                           ;MPU6050.c: 226:   I2C_Restart();
  1681  05E8  120A  118A  220F  120A  118A  	fcall	_I2C_Restart
  1682                           
  1683                           ;MPU6050.c: 227:   I2C_Write(0xD1);
  1684  05ED  30D1               	movlw	209
  1685  05EE  120A  118A  2260  120A  118A  	fcall	_I2C_Write
  1686                           
  1687                           ;MPU6050.c: 228:   I2C_Read(0);
  1688  05F3  3000               	movlw	0
  1689  05F4  120A  118A  230B  120A  118A  	fcall	_I2C_Read
  1690  05F9                     l1784:
  1691                           
  1692                           ;MPU6050.c: 229:   Ax = ((int)I2C_Read(0)<<8)|(int)I2C_Read(0);
  1693  05F9  3000               	movlw	0
  1694  05FA  120A  118A  230B  120A  118A  	fcall	_I2C_Read
  1695  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0601  00BB               	movwf	??_MPU6050_Readvalue
  1698  0602  01BC               	clrf	??_MPU6050_Readvalue+1
  1699  0603  3000               	movlw	0
  1700  0604  120A  118A  230B  120A  118A  	fcall	_I2C_Read
  1701  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1702  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1703  060B  00BD               	movwf	??_MPU6050_Readvalue+2
  1704  060C  01BE               	clrf	??_MPU6050_Readvalue+3
  1705  060D  083D               	movf	??_MPU6050_Readvalue+2,w
  1706  060E  00BE               	movwf	??_MPU6050_Readvalue+3
  1707  060F  01BD               	clrf	??_MPU6050_Readvalue+2
  1708  0610  083B               	movf	??_MPU6050_Readvalue,w
  1709  0611  043D               	iorwf	??_MPU6050_Readvalue+2,w
  1710  0612  00E7               	movwf	MPU6050_Readvalue@Ax
  1711  0613  083C               	movf	??_MPU6050_Readvalue+1,w
  1712  0614  043E               	iorwf	??_MPU6050_Readvalue+3,w
  1713  0615  00E8               	movwf	MPU6050_Readvalue@Ax+1
  1714  0616                     l1786:
  1715                           
  1716                           ;MPU6050.c: 230:   I2C_Read(1);
  1717  0616  3001               	movlw	1
  1718  0617  120A  118A  230B  120A  118A  	fcall	_I2C_Read
  1719  061C                     l1788:
  1720                           
  1721                           ;MPU6050.c: 231:   I2C_Stop();
  1722  061C  120A  118A  2202  120A  118A  	fcall	_I2C_Stop
  1723  0621                     l1790:
  1724                           
  1725                           ;MPU6050.c: 233:   Ax /= 180;
  1726  0621  30B4               	movlw	180
  1727  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0624  00A0               	movwf	___awdiv@divisor
  1730  0625  3000               	movlw	0
  1731  0626  00A1               	movwf	___awdiv@divisor+1
  1732  0627  0868               	movf	MPU6050_Readvalue@Ax+1,w
  1733  0628  00A3               	movwf	___awdiv@dividend+1
  1734  0629  0867               	movf	MPU6050_Readvalue@Ax,w
  1735  062A  00A2               	movwf	___awdiv@dividend
  1736  062B  120A  118A  24FF  120A  118A  	fcall	___awdiv
  1737  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0632  0821               	movf	?___awdiv+1,w
  1740  0633  00E8               	movwf	MPU6050_Readvalue@Ax+1
  1741  0634  0820               	movf	?___awdiv,w
  1742  0635  00E7               	movwf	MPU6050_Readvalue@Ax
  1743  0636                     l1792:
  1744                           
  1745                           ;MPU6050.c: 262:   sprintf(buffer," Ax = %d    \n",Ax);
  1746  0636  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1747  0637  00BB               	movwf	??_MPU6050_Readvalue
  1748  0638  083B               	movf	??_MPU6050_Readvalue,w
  1749  0639  00AE               	movwf	sprintf@f
  1750  063A  0868               	movf	MPU6050_Readvalue@Ax+1,w
  1751  063B  00B0               	movwf	?_sprintf+2
  1752  063C  0867               	movf	MPU6050_Readvalue@Ax,w
  1753  063D  00AF               	movwf	?_sprintf+1
  1754  063E  303F               	movlw	(low (MPU6050_Readvalue@buffer| 0))& (0+255)
  1755  063F  120A  118A  26E8  120A  118A  	fcall	_sprintf
  1756  0644                     l1794:
  1757                           
  1758                           ;MPU6050.c: 263:   UART_Transmit_Text(buffer);
  1759  0644  303F               	movlw	(low (MPU6050_Readvalue@buffer| 0))& (0+255)
  1760  0645  120A  118A  229A  120A  118A  	fcall	_UART_Transmit_Text
  1761  064A                     l294:
  1762  064A  0008               	return
  1763  064B                     __end_of_MPU6050_Readvalue:
  1764                           
  1765                           	psect	text6
  1766  06E8                     __ptext6:	
  1767 ;; *************** function _sprintf *****************
  1768 ;; Defined at:
  1769 ;;		line 505 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  sp              1    wreg     PTR unsigned char 
  1772 ;;		 -> MPU6050_Readvalue@buffer(40), 
  1773 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1774 ;;		 -> STR_1(14), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1777 ;;		 -> MPU6050_Readvalue@buffer(40), 
  1778 ;;  tmpval          4    0        struct .
  1779 ;;  val             2   23[BANK0 ] unsigned int 
  1780 ;;  cp              2    0        PTR const unsigned char 
  1781 ;;  len             2    0        unsigned int 
  1782 ;;  c               1   26[BANK0 ] unsigned char 
  1783 ;;  prec            1   22[BANK0 ] char 
  1784 ;;  flag            1   21[BANK0 ] unsigned char 
  1785 ;;  ap              1   20[BANK0 ] PTR void [1]
  1786 ;;		 -> ?_sprintf(2), 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   14[BANK0 ] int 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         0       3       0       0       0
  1797 ;;      Locals:         0       7       0       0       0
  1798 ;;      Temps:          0       3       0       0       0
  1799 ;;      Totals:         0      13       0       0       0
  1800 ;;Total ram usage:       13 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 5
  1803 ;; This function calls:
  1804 ;;		___lwdiv
  1805 ;;		___lwmod
  1806 ;; This function is called by:
  1807 ;;		_MPU6050_Readvalue
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _sprintf
  1813  06E8                     _sprintf:
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1817                           ;sprintf@sp stored from wreg
  1818  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1819  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1820  06EA  00B9               	movwf	sprintf@sp
  1821  06EB                     l1562:
  1822                           
  1823                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, 
      +                          const char * f, ...);D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 506:
      +                           {;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\F
      +                          ile Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 521:  signed char prec;;D:\File Install 
      +                          MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1824  06EB  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1825  06EC  00B1               	movwf	??_sprintf
  1826  06ED  0831               	movf	??_sprintf,w
  1827  06EE  00B4               	movwf	sprintf@ap
  1828                           
  1829                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1830  06EF  2FBB               	goto	l1614
  1831  06F0                     l1564:
  1832                           
  1833                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1834  06F0  3025               	movlw	37
  1835  06F1  063A               	xorwf	sprintf@c,w
  1836  06F2  1903               	btfsc	3,2
  1837  06F3  2EF5               	goto	u1111
  1838  06F4  2EF6               	goto	u1110
  1839  06F5                     u1111:
  1840  06F5  2F02               	goto	l1570
  1841  06F6                     u1110:
  1842  06F6                     l1566:
  1843                           
  1844                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 557:   {;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1845  06F6  083A               	movf	sprintf@c,w
  1846  06F7  00B1               	movwf	??_sprintf
  1847  06F8  0839               	movf	sprintf@sp,w
  1848  06F9  0084               	movwf	4
  1849  06FA  0831               	movf	??_sprintf,w
  1850  06FB  1383               	bcf	3,7	;select IRP bank0
  1851  06FC  0080               	movwf	0
  1852  06FD                     l1568:
  1853  06FD  3001               	movlw	1
  1854  06FE  00B1               	movwf	??_sprintf
  1855  06FF  0831               	movf	??_sprintf,w
  1856  0700  07B9               	addwf	sprintf@sp,f
  1857                           
  1858                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 559:    continue;
  1859  0701  2FBB               	goto	l1614
  1860  0702                     l1570:
  1861                           
  1862                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1863  0702  01B5               	clrf	sprintf@flag
  1864  0703                     l1574:	
  1865                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) 
      +                          {
  1866                           
  1867  0703  3001               	movlw	1
  1868  0704  07AE               	addwf	sprintf@f,f
  1869  0705  30FF               	movlw	-1
  1870  0706  072E               	addwf	sprintf@f,w
  1871  0707  0084               	movwf	4
  1872  0708  120A  118A  2011  120A  118A  	fcall	stringdir
  1873  070D  00BA               	movwf	sprintf@c
  1874  070E  00B1               	movwf	??_sprintf
  1875  070F  01B2               	clrf	??_sprintf+1
  1876                           
  1877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1878                           ; Switch size 1, requested type "simple"
  1879                           ; Number of cases is 1, Range of values is 0 to 0
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; simple_byte            4     3 (average)
  1883                           ; direct_byte           11     8 (fixed)
  1884                           ; jumptable            260     6 (fixed)
  1885                           ;	Chosen strategy is simple_byte
  1886  0710  0832               	movf	??_sprintf+1,w
  1887  0711  3A00               	xorlw	0	; case 0
  1888  0712  1903               	skipnz
  1889  0713  2F15               	goto	l2556
  1890  0714  2FBB               	goto	l1614
  1891  0715                     l2556:
  1892                           
  1893                           ; Switch size 1, requested type "simple"
  1894                           ; Number of cases is 3, Range of values is 0 to 105
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte           10     6 (average)
  1898                           ; jumptable            260     6 (fixed)
  1899                           ;	Chosen strategy is simple_byte
  1900  0715  0831               	movf	??_sprintf,w
  1901  0716  3A00               	xorlw	0	; case 0
  1902  0717  1903               	skipnz
  1903  0718  2FCD               	goto	l1616
  1904  0719  3A64               	xorlw	100	; case 100
  1905  071A  1903               	skipnz
  1906  071B  2F20               	goto	l1576
  1907  071C  3A0D               	xorlw	13	; case 105
  1908  071D  1903               	skipnz
  1909  071E  2F20               	goto	l1576
  1910  071F  2FBB               	goto	l1614
  1911  0720                     l1576:
  1912                           
  1913                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)
      +                          __va_arg((*(int **)ap), (int)0));
  1914  0720  0834               	movf	sprintf@ap,w
  1915  0721  0084               	movwf	4
  1916  0722  1383               	bcf	3,7	;select IRP bank0
  1917  0723  0800               	movf	0,w
  1918  0724  00B7               	movwf	sprintf@val
  1919  0725  0A84               	incf	4,f
  1920  0726  0800               	movf	0,w
  1921  0727  00B8               	movwf	sprintf@val+1
  1922  0728                     l1578:
  1923  0728  3002               	movlw	2
  1924  0729  00B1               	movwf	??_sprintf
  1925  072A  0831               	movf	??_sprintf,w
  1926  072B  07B4               	addwf	sprintf@ap,f
  1927  072C                     l1580:
  1928                           
  1929                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0
      +                          ) {
  1930  072C  1FB8               	btfss	sprintf@val+1,7
  1931  072D  2F2F               	goto	u1121
  1932  072E  2F30               	goto	u1120
  1933  072F                     u1121:
  1934  072F  2F39               	goto	l1586
  1935  0730                     u1120:
  1936  0730                     l1582:
  1937                           
  1938                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1939  0730  3003               	movlw	3
  1940  0731  00B1               	movwf	??_sprintf
  1941  0732  0831               	movf	??_sprintf,w
  1942  0733  04B5               	iorwf	sprintf@flag,f
  1943  0734                     l1584:
  1944                           
  1945                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1946  0734  09B7               	comf	sprintf@val,f
  1947  0735  09B8               	comf	sprintf@val+1,f
  1948  0736  0AB7               	incf	sprintf@val,f
  1949  0737  1903               	skipnz
  1950  0738  0AB8               	incf	sprintf@val+1,f
  1951  0739                     l1586:
  1952                           
  1953                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1292:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpower
      +                          s/sizeof dpowers[0] ; c++)
  1954  0739  01BA               	clrf	sprintf@c
  1955  073A  0ABA               	incf	sprintf@c,f
  1956  073B                     l1592:
  1957                           
  1958                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowe
      +                          rs[c])
  1959  073B  083A               	movf	sprintf@c,w
  1960  073C  00B1               	movwf	??_sprintf
  1961  073D  0731               	addwf	??_sprintf,w
  1962  073E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1963  073F  0084               	movwf	4
  1964  0740  120A  118A  2011  120A  118A  	fcall	stringdir
  1965  0745  00B2               	movwf	??_sprintf+1
  1966  0746  120A  118A  2011  120A  118A  	fcall	stringdir
  1967  074B  00B3               	movwf	??_sprintf+2
  1968  074C  0833               	movf	??_sprintf+2,w
  1969  074D  0238               	subwf	sprintf@val+1,w
  1970  074E  1D03               	skipz
  1971  074F  2F52               	goto	u1135
  1972  0750  0832               	movf	??_sprintf+1,w
  1973  0751  0237               	subwf	sprintf@val,w
  1974  0752                     u1135:
  1975  0752  1803               	skipnc
  1976  0753  2F55               	goto	u1131
  1977  0754  2F56               	goto	u1130
  1978  0755                     u1131:
  1979  0755  2F57               	goto	l1596
  1980  0756                     u1130:
  1981  0756  2F61               	goto	l1598
  1982  0757                     l1596:
  1983  0757  3001               	movlw	1
  1984  0758  00B1               	movwf	??_sprintf
  1985  0759  0831               	movf	??_sprintf,w
  1986  075A  07BA               	addwf	sprintf@c,f
  1987  075B  3005               	movlw	5
  1988  075C  063A               	xorwf	sprintf@c,w
  1989  075D  1D03               	btfss	3,2
  1990  075E  2F60               	goto	u1141
  1991  075F  2F61               	goto	u1140
  1992  0760                     u1141:
  1993  0760  2F3B               	goto	l1592
  1994  0761                     u1140:
  1995  0761                     l1598:
  1996                           
  1997                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1998  0761  0835               	movf	sprintf@flag,w
  1999  0762  3903               	andlw	3
  2000  0763  1903               	btfsc	3,2
  2001  0764  2F66               	goto	u1151
  2002  0765  2F67               	goto	u1150
  2003  0766                     u1151:
  2004  0766  2F72               	goto	l1604
  2005  0767                     u1150:
  2006  0767                     l1600:
  2007                           
  2008                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-'
      +                          )));
  2009  0767  302D               	movlw	45
  2010  0768  00B1               	movwf	??_sprintf
  2011  0769  0839               	movf	sprintf@sp,w
  2012  076A  0084               	movwf	4
  2013  076B  0831               	movf	??_sprintf,w
  2014  076C  1383               	bcf	3,7	;select IRP bank0
  2015  076D  0080               	movwf	0
  2016  076E                     l1602:
  2017  076E  3001               	movlw	1
  2018  076F  00B1               	movwf	??_sprintf
  2019  0770  0831               	movf	??_sprintf,w
  2020  0771  07B9               	addwf	sprintf@sp,f
  2021  0772                     l1604:
  2022                           
  2023                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1495:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2024  0772  083A               	movf	sprintf@c,w
  2025  0773  00B1               	movwf	??_sprintf
  2026  0774  0831               	movf	??_sprintf,w
  2027  0775  00B6               	movwf	sprintf@prec
  2028                           
  2029                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  2030  0776  2FB2               	goto	l1612
  2031  0777                     l1606:
  2032                           
  2033                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned
      +                           char)prec]) % 10 + '0';
  2034  0777  300A               	movlw	10
  2035  0778  00A8               	movwf	___lwmod@divisor
  2036  0779  3000               	movlw	0
  2037  077A  00A9               	movwf	___lwmod@divisor+1
  2038  077B  0836               	movf	sprintf@prec,w
  2039  077C  00B1               	movwf	??_sprintf
  2040  077D  0731               	addwf	??_sprintf,w
  2041  077E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2042  077F  0084               	movwf	4
  2043  0780  120A  118A  2011  120A  118A  	fcall	stringdir
  2044  0785  00A0               	movwf	___lwdiv@divisor
  2045  0786  120A  118A  2011  120A  118A  	fcall	stringdir
  2046  078B  00A1               	movwf	___lwdiv@divisor+1
  2047  078C  0838               	movf	sprintf@val+1,w
  2048  078D  00A3               	movwf	___lwdiv@dividend+1
  2049  078E  0837               	movf	sprintf@val,w
  2050  078F  00A2               	movwf	___lwdiv@dividend
  2051  0790  120A  118A  23AE  120A  118A  	fcall	___lwdiv
  2052  0795  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0796  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0797  0821               	movf	?___lwdiv+1,w
  2055  0798  00AB               	movwf	___lwmod@dividend+1
  2056  0799  0820               	movf	?___lwdiv,w
  2057  079A  00AA               	movwf	___lwmod@dividend
  2058  079B  120A  118A  2372  120A  118A  	fcall	___lwmod
  2059  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  2060  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  2061  07A2  0828               	movf	?___lwmod,w
  2062  07A3  3E30               	addlw	48
  2063  07A4  00B2               	movwf	??_sprintf+1
  2064  07A5  0832               	movf	??_sprintf+1,w
  2065  07A6  00BA               	movwf	sprintf@c
  2066  07A7                     l1608:
  2067                           
  2068                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1549:    };D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  2069  07A7  083A               	movf	sprintf@c,w
  2070  07A8  00B1               	movwf	??_sprintf
  2071  07A9  0839               	movf	sprintf@sp,w
  2072  07AA  0084               	movwf	4
  2073  07AB  0831               	movf	??_sprintf,w
  2074  07AC  1383               	bcf	3,7	;select IRP bank0
  2075  07AD  0080               	movwf	0
  2076  07AE                     l1610:
  2077  07AE  3001               	movlw	1
  2078  07AF  00B1               	movwf	??_sprintf
  2079  07B0  0831               	movf	??_sprintf,w
  2080  07B1  07B9               	addwf	sprintf@sp,f
  2081  07B2                     l1612:
  2082                           
  2083                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  2084  07B2  30FF               	movlw	255
  2085  07B3  00B1               	movwf	??_sprintf
  2086  07B4  0831               	movf	??_sprintf,w
  2087  07B5  07B6               	addwf	sprintf@prec,f
  2088  07B6  0A36               	incf	sprintf@prec,w
  2089  07B7  1D03               	btfss	3,2
  2090  07B8  2FBA               	goto	u1161
  2091  07B9  2FBB               	goto	u1160
  2092  07BA                     u1161:
  2093  07BA  2F77               	goto	l1606
  2094  07BB                     u1160:
  2095  07BB                     l1614:
  2096                           
  2097                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  2098  07BB  3001               	movlw	1
  2099  07BC  07AE               	addwf	sprintf@f,f
  2100  07BD  30FF               	movlw	-1
  2101  07BE  072E               	addwf	sprintf@f,w
  2102  07BF  0084               	movwf	4
  2103  07C0  120A  118A  2011  120A  118A  	fcall	stringdir
  2104  07C5  00B1               	movwf	??_sprintf
  2105  07C6  0831               	movf	??_sprintf,w
  2106  07C7  00BA               	movwf	sprintf@c
  2107  07C8  083A               	movf	sprintf@c,w
  2108  07C9  1D03               	btfss	3,2
  2109  07CA  2FCC               	goto	u1171
  2110  07CB  2FCD               	goto	u1170
  2111  07CC                     u1171:
  2112  07CC  2EF0               	goto	l1564
  2113  07CD                     u1170:
  2114  07CD                     l1616:
  2115                           
  2116                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2117  07CD  0839               	movf	sprintf@sp,w
  2118  07CE  0084               	movwf	4
  2119  07CF  1383               	bcf	3,7	;select IRP bank0
  2120  07D0  0180               	clrf	0
  2121  07D1                     l404:
  2122  07D1  0008               	return
  2123  07D2                     __end_of_sprintf:
  2124                           
  2125                           	psect	text7
  2126  0372                     __ptext7:	
  2127 ;; *************** function ___lwmod *****************
  2128 ;; Defined at:
  2129 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  divisor         2    8[BANK0 ] unsigned int 
  2132 ;;  dividend        2   10[BANK0 ] unsigned int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  counter         1   13[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  2    8[BANK0 ] unsigned int 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       4       0       0       0
  2145 ;;      Locals:         0       1       0       0       0
  2146 ;;      Temps:          0       1       0       0       0
  2147 ;;      Totals:         0       6       0       0       0
  2148 ;;Total ram usage:        6 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 4
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_sprintf
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function ___lwmod
  2160  0372                     ___lwmod:
  2161  0372                     l1488:	
  2162                           ;incstack = 0
  2163                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2164                           
  2165  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0374  0828               	movf	___lwmod@divisor,w
  2168  0375  0429               	iorwf	___lwmod@divisor+1,w
  2169  0376  1903               	btfsc	3,2
  2170  0377  2B79               	goto	u991
  2171  0378  2B7A               	goto	u990
  2172  0379                     u991:
  2173  0379  2BA9               	goto	l1506
  2174  037A                     u990:
  2175  037A                     l1490:
  2176  037A  01AD               	clrf	___lwmod@counter
  2177  037B  0AAD               	incf	___lwmod@counter,f
  2178  037C  2B88               	goto	l1496
  2179  037D                     l1492:
  2180  037D  3001               	movlw	1
  2181  037E                     u1005:
  2182  037E  1003               	clrc
  2183  037F  0DA8               	rlf	___lwmod@divisor,f
  2184  0380  0DA9               	rlf	___lwmod@divisor+1,f
  2185  0381  3EFF               	addlw	-1
  2186  0382  1D03               	skipz
  2187  0383  2B7E               	goto	u1005
  2188  0384                     l1494:
  2189  0384  3001               	movlw	1
  2190  0385  00AC               	movwf	??___lwmod
  2191  0386  082C               	movf	??___lwmod,w
  2192  0387  07AD               	addwf	___lwmod@counter,f
  2193  0388                     l1496:
  2194  0388  1FA9               	btfss	___lwmod@divisor+1,7
  2195  0389  2B8B               	goto	u1011
  2196  038A  2B8C               	goto	u1010
  2197  038B                     u1011:
  2198  038B  2B7D               	goto	l1492
  2199  038C                     u1010:
  2200  038C                     l1498:
  2201  038C  0829               	movf	___lwmod@divisor+1,w
  2202  038D  022B               	subwf	___lwmod@dividend+1,w
  2203  038E  1D03               	skipz
  2204  038F  2B92               	goto	u1025
  2205  0390  0828               	movf	___lwmod@divisor,w
  2206  0391  022A               	subwf	___lwmod@dividend,w
  2207  0392                     u1025:
  2208  0392  1C03               	skipc
  2209  0393  2B95               	goto	u1021
  2210  0394  2B96               	goto	u1020
  2211  0395                     u1021:
  2212  0395  2B9C               	goto	l1502
  2213  0396                     u1020:
  2214  0396                     l1500:
  2215  0396  0828               	movf	___lwmod@divisor,w
  2216  0397  02AA               	subwf	___lwmod@dividend,f
  2217  0398  0829               	movf	___lwmod@divisor+1,w
  2218  0399  1C03               	skipc
  2219  039A  03AB               	decf	___lwmod@dividend+1,f
  2220  039B  02AB               	subwf	___lwmod@dividend+1,f
  2221  039C                     l1502:
  2222  039C  3001               	movlw	1
  2223  039D                     u1035:
  2224  039D  1003               	clrc
  2225  039E  0CA9               	rrf	___lwmod@divisor+1,f
  2226  039F  0CA8               	rrf	___lwmod@divisor,f
  2227  03A0  3EFF               	addlw	-1
  2228  03A1  1D03               	skipz
  2229  03A2  2B9D               	goto	u1035
  2230  03A3                     l1504:
  2231  03A3  3001               	movlw	1
  2232  03A4  02AD               	subwf	___lwmod@counter,f
  2233  03A5  1D03               	btfss	3,2
  2234  03A6  2BA8               	goto	u1041
  2235  03A7  2BA9               	goto	u1040
  2236  03A8                     u1041:
  2237  03A8  2B8C               	goto	l1498
  2238  03A9                     u1040:
  2239  03A9                     l1506:
  2240  03A9  082B               	movf	___lwmod@dividend+1,w
  2241  03AA  00A9               	movwf	?___lwmod+1
  2242  03AB  082A               	movf	___lwmod@dividend,w
  2243  03AC  00A8               	movwf	?___lwmod
  2244  03AD                     l690:
  2245  03AD  0008               	return
  2246  03AE                     __end_of___lwmod:
  2247                           
  2248                           	psect	text8
  2249  03AE                     __ptext8:	
  2250 ;; *************** function ___lwdiv *****************
  2251 ;; Defined at:
  2252 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  divisor         2    0[BANK0 ] unsigned int 
  2255 ;;  dividend        2    2[BANK0 ] unsigned int 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  quotient        2    5[BANK0 ] unsigned int 
  2258 ;;  counter         1    7[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    0[BANK0 ] unsigned int 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       4       0       0       0
  2269 ;;      Locals:         0       3       0       0       0
  2270 ;;      Temps:          0       1       0       0       0
  2271 ;;      Totals:         0       8       0       0       0
  2272 ;;Total ram usage:        8 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 4
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_sprintf
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function ___lwdiv
  2284  03AE                     ___lwdiv:
  2285  03AE                     l1462:	
  2286                           ;incstack = 0
  2287                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2288                           
  2289  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2290  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2291  03B0  01A5               	clrf	___lwdiv@quotient
  2292  03B1  01A6               	clrf	___lwdiv@quotient+1
  2293  03B2                     l1464:
  2294  03B2  0820               	movf	___lwdiv@divisor,w
  2295  03B3  0421               	iorwf	___lwdiv@divisor+1,w
  2296  03B4  1903               	btfsc	3,2
  2297  03B5  2BB7               	goto	u921
  2298  03B6  2BB8               	goto	u920
  2299  03B7                     u921:
  2300  03B7  2BEF               	goto	l1484
  2301  03B8                     u920:
  2302  03B8                     l1466:
  2303  03B8  01A7               	clrf	___lwdiv@counter
  2304  03B9  0AA7               	incf	___lwdiv@counter,f
  2305  03BA  2BC6               	goto	l1472
  2306  03BB                     l1468:
  2307  03BB  3001               	movlw	1
  2308  03BC                     u935:
  2309  03BC  1003               	clrc
  2310  03BD  0DA0               	rlf	___lwdiv@divisor,f
  2311  03BE  0DA1               	rlf	___lwdiv@divisor+1,f
  2312  03BF  3EFF               	addlw	-1
  2313  03C0  1D03               	skipz
  2314  03C1  2BBC               	goto	u935
  2315  03C2                     l1470:
  2316  03C2  3001               	movlw	1
  2317  03C3  00A4               	movwf	??___lwdiv
  2318  03C4  0824               	movf	??___lwdiv,w
  2319  03C5  07A7               	addwf	___lwdiv@counter,f
  2320  03C6                     l1472:
  2321  03C6  1FA1               	btfss	___lwdiv@divisor+1,7
  2322  03C7  2BC9               	goto	u941
  2323  03C8  2BCA               	goto	u940
  2324  03C9                     u941:
  2325  03C9  2BBB               	goto	l1468
  2326  03CA                     u940:
  2327  03CA                     l1474:
  2328  03CA  3001               	movlw	1
  2329  03CB                     u955:
  2330  03CB  1003               	clrc
  2331  03CC  0DA5               	rlf	___lwdiv@quotient,f
  2332  03CD  0DA6               	rlf	___lwdiv@quotient+1,f
  2333  03CE  3EFF               	addlw	-1
  2334  03CF  1D03               	skipz
  2335  03D0  2BCB               	goto	u955
  2336  03D1  0821               	movf	___lwdiv@divisor+1,w
  2337  03D2  0223               	subwf	___lwdiv@dividend+1,w
  2338  03D3  1D03               	skipz
  2339  03D4  2BD7               	goto	u965
  2340  03D5  0820               	movf	___lwdiv@divisor,w
  2341  03D6  0222               	subwf	___lwdiv@dividend,w
  2342  03D7                     u965:
  2343  03D7  1C03               	skipc
  2344  03D8  2BDA               	goto	u961
  2345  03D9  2BDB               	goto	u960
  2346  03DA                     u961:
  2347  03DA  2BE2               	goto	l1480
  2348  03DB                     u960:
  2349  03DB                     l1476:
  2350  03DB  0820               	movf	___lwdiv@divisor,w
  2351  03DC  02A2               	subwf	___lwdiv@dividend,f
  2352  03DD  0821               	movf	___lwdiv@divisor+1,w
  2353  03DE  1C03               	skipc
  2354  03DF  03A3               	decf	___lwdiv@dividend+1,f
  2355  03E0  02A3               	subwf	___lwdiv@dividend+1,f
  2356  03E1                     l1478:
  2357  03E1  1425               	bsf	___lwdiv@quotient,0
  2358  03E2                     l1480:
  2359  03E2  3001               	movlw	1
  2360  03E3                     u975:
  2361  03E3  1003               	clrc
  2362  03E4  0CA1               	rrf	___lwdiv@divisor+1,f
  2363  03E5  0CA0               	rrf	___lwdiv@divisor,f
  2364  03E6  3EFF               	addlw	-1
  2365  03E7  1D03               	skipz
  2366  03E8  2BE3               	goto	u975
  2367  03E9                     l1482:
  2368  03E9  3001               	movlw	1
  2369  03EA  02A7               	subwf	___lwdiv@counter,f
  2370  03EB  1D03               	btfss	3,2
  2371  03EC  2BEE               	goto	u981
  2372  03ED  2BEF               	goto	u980
  2373  03EE                     u981:
  2374  03EE  2BCA               	goto	l1474
  2375  03EF                     u980:
  2376  03EF                     l1484:
  2377  03EF  0826               	movf	___lwdiv@quotient+1,w
  2378  03F0  00A1               	movwf	?___lwdiv+1
  2379  03F1  0825               	movf	___lwdiv@quotient,w
  2380  03F2  00A0               	movwf	?___lwdiv
  2381  03F3                     l680:
  2382  03F3  0008               	return
  2383  03F4                     __end_of___lwdiv:
  2384                           
  2385                           	psect	text9
  2386  04FF                     __ptext9:	
  2387 ;; *************** function ___awdiv *****************
  2388 ;; Defined at:
  2389 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  divisor         2    0[BANK0 ] int 
  2392 ;;  dividend        2    2[BANK0 ] int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  quotient        2    7[BANK0 ] int 
  2395 ;;  sign            1    6[BANK0 ] unsigned char 
  2396 ;;  counter         1    5[BANK0 ] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  2    0[BANK0 ] int 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       4       0       0       0
  2407 ;;      Locals:         0       4       0       0       0
  2408 ;;      Temps:          0       1       0       0       0
  2409 ;;      Totals:         0       9       0       0       0
  2410 ;;Total ram usage:        9 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 4
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_MPU6050_Readvalue
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function ___awdiv
  2422  04FF                     ___awdiv:
  2423  04FF                     l1664:	
  2424                           ;incstack = 0
  2425                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2426                           
  2427  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0501  01A6               	clrf	___awdiv@sign
  2430  0502                     l1666:
  2431  0502  1FA1               	btfss	___awdiv@divisor+1,7
  2432  0503  2D05               	goto	u1281
  2433  0504  2D06               	goto	u1280
  2434  0505                     u1281:
  2435  0505  2D0D               	goto	l1672
  2436  0506                     u1280:
  2437  0506                     l1668:
  2438  0506  09A0               	comf	___awdiv@divisor,f
  2439  0507  09A1               	comf	___awdiv@divisor+1,f
  2440  0508  0AA0               	incf	___awdiv@divisor,f
  2441  0509  1903               	skipnz
  2442  050A  0AA1               	incf	___awdiv@divisor+1,f
  2443  050B                     l1670:
  2444  050B  01A6               	clrf	___awdiv@sign
  2445  050C  0AA6               	incf	___awdiv@sign,f
  2446  050D                     l1672:
  2447  050D  1FA3               	btfss	___awdiv@dividend+1,7
  2448  050E  2D10               	goto	u1291
  2449  050F  2D11               	goto	u1290
  2450  0510                     u1291:
  2451  0510  2D1A               	goto	l1678
  2452  0511                     u1290:
  2453  0511                     l1674:
  2454  0511  09A2               	comf	___awdiv@dividend,f
  2455  0512  09A3               	comf	___awdiv@dividend+1,f
  2456  0513  0AA2               	incf	___awdiv@dividend,f
  2457  0514  1903               	skipnz
  2458  0515  0AA3               	incf	___awdiv@dividend+1,f
  2459  0516                     l1676:
  2460  0516  3001               	movlw	1
  2461  0517  00A4               	movwf	??___awdiv
  2462  0518  0824               	movf	??___awdiv,w
  2463  0519  06A6               	xorwf	___awdiv@sign,f
  2464  051A                     l1678:
  2465  051A  01A7               	clrf	___awdiv@quotient
  2466  051B  01A8               	clrf	___awdiv@quotient+1
  2467  051C                     l1680:
  2468  051C  0820               	movf	___awdiv@divisor,w
  2469  051D  0421               	iorwf	___awdiv@divisor+1,w
  2470  051E  1903               	btfsc	3,2
  2471  051F  2D21               	goto	u1301
  2472  0520  2D22               	goto	u1300
  2473  0521                     u1301:
  2474  0521  2D59               	goto	l1700
  2475  0522                     u1300:
  2476  0522                     l1682:
  2477  0522  01A5               	clrf	___awdiv@counter
  2478  0523  0AA5               	incf	___awdiv@counter,f
  2479  0524  2D30               	goto	l1688
  2480  0525                     l1684:
  2481  0525  3001               	movlw	1
  2482  0526                     u1315:
  2483  0526  1003               	clrc
  2484  0527  0DA0               	rlf	___awdiv@divisor,f
  2485  0528  0DA1               	rlf	___awdiv@divisor+1,f
  2486  0529  3EFF               	addlw	-1
  2487  052A  1D03               	skipz
  2488  052B  2D26               	goto	u1315
  2489  052C                     l1686:
  2490  052C  3001               	movlw	1
  2491  052D  00A4               	movwf	??___awdiv
  2492  052E  0824               	movf	??___awdiv,w
  2493  052F  07A5               	addwf	___awdiv@counter,f
  2494  0530                     l1688:
  2495  0530  1FA1               	btfss	___awdiv@divisor+1,7
  2496  0531  2D33               	goto	u1321
  2497  0532  2D34               	goto	u1320
  2498  0533                     u1321:
  2499  0533  2D25               	goto	l1684
  2500  0534                     u1320:
  2501  0534                     l1690:
  2502  0534  3001               	movlw	1
  2503  0535                     u1335:
  2504  0535  1003               	clrc
  2505  0536  0DA7               	rlf	___awdiv@quotient,f
  2506  0537  0DA8               	rlf	___awdiv@quotient+1,f
  2507  0538  3EFF               	addlw	-1
  2508  0539  1D03               	skipz
  2509  053A  2D35               	goto	u1335
  2510  053B  0821               	movf	___awdiv@divisor+1,w
  2511  053C  0223               	subwf	___awdiv@dividend+1,w
  2512  053D  1D03               	skipz
  2513  053E  2D41               	goto	u1345
  2514  053F  0820               	movf	___awdiv@divisor,w
  2515  0540  0222               	subwf	___awdiv@dividend,w
  2516  0541                     u1345:
  2517  0541  1C03               	skipc
  2518  0542  2D44               	goto	u1341
  2519  0543  2D45               	goto	u1340
  2520  0544                     u1341:
  2521  0544  2D4C               	goto	l1696
  2522  0545                     u1340:
  2523  0545                     l1692:
  2524  0545  0820               	movf	___awdiv@divisor,w
  2525  0546  02A2               	subwf	___awdiv@dividend,f
  2526  0547  0821               	movf	___awdiv@divisor+1,w
  2527  0548  1C03               	skipc
  2528  0549  03A3               	decf	___awdiv@dividend+1,f
  2529  054A  02A3               	subwf	___awdiv@dividend+1,f
  2530  054B                     l1694:
  2531  054B  1427               	bsf	___awdiv@quotient,0
  2532  054C                     l1696:
  2533  054C  3001               	movlw	1
  2534  054D                     u1355:
  2535  054D  1003               	clrc
  2536  054E  0CA1               	rrf	___awdiv@divisor+1,f
  2537  054F  0CA0               	rrf	___awdiv@divisor,f
  2538  0550  3EFF               	addlw	-1
  2539  0551  1D03               	skipz
  2540  0552  2D4D               	goto	u1355
  2541  0553                     l1698:
  2542  0553  3001               	movlw	1
  2543  0554  02A5               	subwf	___awdiv@counter,f
  2544  0555  1D03               	btfss	3,2
  2545  0556  2D58               	goto	u1361
  2546  0557  2D59               	goto	u1360
  2547  0558                     u1361:
  2548  0558  2D34               	goto	l1690
  2549  0559                     u1360:
  2550  0559                     l1700:
  2551  0559  0826               	movf	___awdiv@sign,w
  2552  055A  1903               	btfsc	3,2
  2553  055B  2D5D               	goto	u1371
  2554  055C  2D5E               	goto	u1370
  2555  055D                     u1371:
  2556  055D  2D63               	goto	l1704
  2557  055E                     u1370:
  2558  055E                     l1702:
  2559  055E  09A7               	comf	___awdiv@quotient,f
  2560  055F  09A8               	comf	___awdiv@quotient+1,f
  2561  0560  0AA7               	incf	___awdiv@quotient,f
  2562  0561  1903               	skipnz
  2563  0562  0AA8               	incf	___awdiv@quotient+1,f
  2564  0563                     l1704:
  2565  0563  0828               	movf	___awdiv@quotient+1,w
  2566  0564  00A1               	movwf	?___awdiv+1
  2567  0565  0827               	movf	___awdiv@quotient,w
  2568  0566  00A0               	movwf	?___awdiv
  2569  0567                     l561:
  2570  0567  0008               	return
  2571  0568                     __end_of___awdiv:
  2572                           
  2573                           	psect	text10
  2574  029A                     __ptext10:	
  2575 ;; *************** function _UART_Transmit_Text *****************
  2576 ;; Defined at:
  2577 ;;		line 27 in file "UART.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  str             1    wreg     PTR unsigned char 
  2580 ;;		 -> MPU6050_Readvalue@buffer(40), RX_Buffer(50), 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  str             1    3[BANK0 ] PTR unsigned char 
  2583 ;;		 -> MPU6050_Readvalue@buffer(40), RX_Buffer(50), 
  2584 ;;  i               1    2[BANK0 ] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0       2       0       0       0
  2596 ;;      Temps:          0       1       0       0       0
  2597 ;;      Totals:         0       3       0       0       0
  2598 ;;Total ram usage:        3 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 5
  2601 ;; This function calls:
  2602 ;;		_UART_Transmit
  2603 ;; This function is called by:
  2604 ;;		_MPU6050_Readvalue
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function _UART_Transmit_Text
  2610  029A                     _UART_Transmit_Text:
  2611                           
  2612                           ;incstack = 0
  2613                           ; Regs used in _UART_Transmit_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2614                           ;UART_Transmit_Text@str stored from wreg
  2615  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2616  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2617  029C  00A3               	movwf	UART_Transmit_Text@str
  2618  029D                     l1514:
  2619                           
  2620                           ;UART.c: 27: void UART_Transmit_Text(char *str);UART.c: 28: {;UART.c: 29:     unsigned c
      +                          har i=0;
  2621  029D  01A2               	clrf	UART_Transmit_Text@i
  2622                           
  2623                           ;UART.c: 30:     while(str[i] != 0)
  2624  029E  2AB0               	goto	l1520
  2625  029F                     l1516:
  2626                           
  2627                           ;UART.c: 31:     {;UART.c: 32:         UART_Transmit(str[i]);
  2628  029F  0822               	movf	UART_Transmit_Text@i,w
  2629  02A0  0723               	addwf	UART_Transmit_Text@str,w
  2630  02A1  00A1               	movwf	??_UART_Transmit_Text
  2631  02A2  0821               	movf	??_UART_Transmit_Text,w
  2632  02A3  0084               	movwf	4
  2633  02A4  0800               	movf	0,w
  2634  02A5  120A  118A  221C  120A  118A  	fcall	_UART_Transmit
  2635  02AA                     l1518:
  2636                           
  2637                           ;UART.c: 33:         i++;
  2638  02AA  3001               	movlw	1
  2639  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2640  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2641  02AD  00A1               	movwf	??_UART_Transmit_Text
  2642  02AE  0821               	movf	??_UART_Transmit_Text,w
  2643  02AF  07A2               	addwf	UART_Transmit_Text@i,f
  2644  02B0                     l1520:
  2645                           
  2646                           ;UART.c: 30:     while(str[i] != 0)
  2647  02B0  0822               	movf	UART_Transmit_Text@i,w
  2648  02B1  0723               	addwf	UART_Transmit_Text@str,w
  2649  02B2  00A1               	movwf	??_UART_Transmit_Text
  2650  02B3  0821               	movf	??_UART_Transmit_Text,w
  2651  02B4  0084               	movwf	4
  2652  02B5  1383               	bcf	3,7	;select IRP bank0
  2653  02B6  0800               	movf	0,w
  2654  02B7  1D03               	btfss	3,2
  2655  02B8  2ABA               	goto	u1061
  2656  02B9  2ABB               	goto	u1060
  2657  02BA                     u1061:
  2658  02BA  2A9F               	goto	l1516
  2659  02BB                     u1060:
  2660  02BB                     l71:
  2661  02BB  0008               	return
  2662  02BC                     __end_of_UART_Transmit_Text:
  2663                           
  2664                           	psect	text11
  2665  021C                     __ptext11:	
  2666 ;; *************** function _UART_Transmit *****************
  2667 ;; Defined at:
  2668 ;;		line 22 in file "UART.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  c               1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  c               1    0[BANK0 ] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         0       0       0       0       0
  2683 ;;      Locals:         0       1       0       0       0
  2684 ;;      Temps:          0       0       0       0       0
  2685 ;;      Totals:         0       1       0       0       0
  2686 ;;Total ram usage:        1 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 4
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_UART_Transmit_Text
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           
  2697                           ;psect for function _UART_Transmit
  2698  021C                     _UART_Transmit:
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _UART_Transmit: [wreg]
  2702                           ;UART_Transmit@c stored from wreg
  2703  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2704  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2705  021E  00A0               	movwf	UART_Transmit@c
  2706  021F                     l1440:
  2707  021F                     l62:	
  2708                           ;UART.c: 22: void UART_Transmit(char c);UART.c: 23: {;UART.c: 24:     while(!TRMT);
  2709                           
  2710  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2712  0221  1C98               	btfss	24,1	;volatile
  2713  0222  2A24               	goto	u871
  2714  0223  2A25               	goto	u870
  2715  0224                     u871:
  2716  0224  2A1F               	goto	l62
  2717  0225                     u870:
  2718  0225                     l1442:
  2719                           
  2720                           ;UART.c: 25:     TXREG = c;
  2721  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0227  0820               	movf	UART_Transmit@c,w
  2724  0228  0099               	movwf	25	;volatile
  2725  0229                     l65:
  2726  0229  0008               	return
  2727  022A                     __end_of_UART_Transmit:
  2728                           
  2729                           	psect	text12
  2730  020F                     __ptext12:	
  2731 ;; *************** function _I2C_Restart *****************
  2732 ;; Defined at:
  2733 ;;		line 39 in file "I2C.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 5
  2754 ;; This function calls:
  2755 ;;		_I2C_Idle
  2756 ;; This function is called by:
  2757 ;;		_MPU6050_Readvalue
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           
  2762                           ;psect for function _I2C_Restart
  2763  020F                     _I2C_Restart:
  2764  020F                     l1532:	
  2765                           ;incstack = 0
  2766                           ; Regs used in _I2C_Restart: [wreg+status,2+status,0+pclath+cstack]
  2767                           
  2768                           
  2769                           ;I2C.c: 41:     I2C_Idle();
  2770  020F  120A  118A  2568  120A  118A  	fcall	_I2C_Idle
  2771  0214                     l1534:
  2772                           
  2773                           ;I2C.c: 42:     SSPCON2bits.RSEN = 1;
  2774  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2776  0216  1491               	bsf	17,1	;volatile
  2777  0217                     l142:	
  2778                           ;I2C.c: 43:     while(SSPCON2bits.RSEN);
  2779                           
  2780  0217  1891               	btfsc	17,1	;volatile
  2781  0218  2A1A               	goto	u1071
  2782  0219  2A1B               	goto	u1070
  2783  021A                     u1071:
  2784  021A  2A17               	goto	l142
  2785  021B                     u1070:
  2786  021B                     l145:
  2787  021B  0008               	return
  2788  021C                     __end_of_I2C_Restart:
  2789                           
  2790                           	psect	text13
  2791  030B                     __ptext13:	
  2792 ;; *************** function _I2C_Read *****************
  2793 ;; Defined at:
  2794 ;;		line 53 in file "I2C.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  ACK             1    wreg     unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  ACK             1    5[BANK0 ] unsigned char 
  2799 ;;  Rvalue          1    4[BANK0 ] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      unsigned char 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         0       0       0       0       0
  2810 ;;      Locals:         0       2       0       0       0
  2811 ;;      Temps:          0       1       0       0       0
  2812 ;;      Totals:         0       3       0       0       0
  2813 ;;Total ram usage:        3 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 5
  2816 ;; This function calls:
  2817 ;;		_I2C_Idle
  2818 ;; This function is called by:
  2819 ;;		_MPU6050_Readvalue
  2820 ;;		_MPU6050_Read
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _I2C_Read
  2826  030B                     _I2C_Read:
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2830                           ;I2C_Read@ACK stored from wreg
  2831  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2832  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2833  030D  00A5               	movwf	I2C_Read@ACK
  2834  030E                     l1536:
  2835                           
  2836                           ;I2C.c: 53: unsigned char I2C_Read(unsigned char ACK);I2C.c: 54: {;I2C.c: 55:     unsign
      +                          ed char Rvalue;;I2C.c: 57:     I2C_Idle();
  2837  030E  120A  118A  2568  120A  118A  	fcall	_I2C_Idle
  2838  0313                     l1538:
  2839                           
  2840                           ;I2C.c: 59:     SSPCONbits.SSPOV = 0;
  2841  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0315  1314               	bcf	20,6	;volatile
  2844  0316                     l1540:
  2845                           
  2846                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  2847  0316  118C               	bcf	12,3	;volatile
  2848  0317                     l1542:
  2849                           
  2850                           ;I2C.c: 62:     SSPCON2bits.RCEN = 1;
  2851  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2852  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2853  0319  1591               	bsf	17,3	;volatile
  2854  031A                     l154:	
  2855                           ;I2C.c: 64:     while(SSPCON2bits.RCEN);
  2856                           
  2857  031A  1991               	btfsc	17,3	;volatile
  2858  031B  2B1D               	goto	u1081
  2859  031C  2B1E               	goto	u1080
  2860  031D                     u1081:
  2861  031D  2B1A               	goto	l154
  2862  031E                     u1080:
  2863  031E                     l1544:
  2864                           
  2865                           ;I2C.c: 66:     SSPCON2bits.ACKDT = ACK;
  2866  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2867  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0320  0C25               	rrf	I2C_Read@ACK,w
  2869  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2870  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0323  1C03               	skipc
  2872  0324  1291               	bcf	17,5	;volatile
  2873  0325  1803               	skipnc
  2874  0326  1691               	bsf	17,5	;volatile
  2875  0327                     l1546:
  2876                           
  2877                           ;I2C.c: 68:     SSPCON2bits.ACKEN = 1;
  2878  0327  1611               	bsf	17,4	;volatile
  2879  0328                     l1548:
  2880                           
  2881                           ;I2C.c: 70:     PIR1bits.SSPIF = 0;
  2882  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2884  032A  118C               	bcf	12,3	;volatile
  2885  032B                     l157:	
  2886                           ;I2C.c: 72:     while(PIR1bits.SSPIF == 0);
  2887                           
  2888  032B  1D8C               	btfss	12,3	;volatile
  2889  032C  2B2E               	goto	u1091
  2890  032D  2B2F               	goto	u1090
  2891  032E                     u1091:
  2892  032E  2B2B               	goto	l157
  2893  032F                     u1090:
  2894  032F                     l1550:
  2895                           
  2896                           ;I2C.c: 74:     Rvalue = SSPBUF;
  2897  032F  0813               	movf	19,w	;volatile
  2898  0330  00A3               	movwf	??_I2C_Read
  2899  0331  0823               	movf	??_I2C_Read,w
  2900  0332  00A4               	movwf	I2C_Read@Rvalue
  2901  0333                     l1552:
  2902                           
  2903                           ;I2C.c: 76:     if(ACK == 1)
  2904  0333  0325               	decf	I2C_Read@ACK,w
  2905  0334  1D03               	btfss	3,2
  2906  0335  2B37               	goto	u1101
  2907  0336  2B38               	goto	u1100
  2908  0337                     u1101:
  2909  0337  2B39               	goto	l1556
  2910  0338                     u1100:
  2911  0338                     l1554:
  2912                           
  2913                           ;I2C.c: 77:     {;I2C.c: 78:         PIR1bits.SSPIF = 0;
  2914  0338  118C               	bcf	12,3	;volatile
  2915  0339                     l1556:
  2916                           
  2917                           ;I2C.c: 80:     return Rvalue;
  2918  0339  0824               	movf	I2C_Read@Rvalue,w
  2919  033A                     l161:
  2920  033A  0008               	return
  2921  033B                     __end_of_I2C_Read:
  2922                           
  2923                           	psect	text14
  2924  049C                     __ptext14:	
  2925 ;; *************** function _MPU6050_Init *****************
  2926 ;; Defined at:
  2927 ;;		line 150 in file "MPU6050.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0
  2943 ;;      Temps:          0       3       0       0       0
  2944 ;;      Totals:         0       3       0       0       0
  2945 ;;Total ram usage:        3 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 7
  2948 ;; This function calls:
  2949 ;;		_I2C_Init
  2950 ;;		_MPU6050_Write
  2951 ;; This function is called by:
  2952 ;;		_main
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           
  2957                           ;psect for function _MPU6050_Init
  2958  049C                     _MPU6050_Init:
  2959  049C                     l1732:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2962                           
  2963                           
  2964                           ;MPU6050.c: 153:   _delay((unsigned long)((100)*(20000000/4000.0)));
  2965  049C  3003               	movlw	3
  2966  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2967  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2968  049F  00A8               	movwf	??_MPU6050_Init+2
  2969  04A0  308A               	movlw	138
  2970  04A1  00A7               	movwf	??_MPU6050_Init+1
  2971  04A2  3055               	movlw	85
  2972  04A3  00A6               	movwf	??_MPU6050_Init
  2973  04A4                     u3157:
  2974  04A4  0BA6               	decfsz	??_MPU6050_Init,f
  2975  04A5  2CA4               	goto	u3157
  2976  04A6  0BA7               	decfsz	??_MPU6050_Init+1,f
  2977  04A7  2CA4               	goto	u3157
  2978  04A8  0BA8               	decfsz	??_MPU6050_Init+2,f
  2979  04A9  2CA4               	goto	u3157
  2980  04AA                     l1734:
  2981                           
  2982                           ;MPU6050.c: 154:   I2C_Init();
  2983  04AA  120A  118A  222A  120A  118A  	fcall	_I2C_Init
  2984  04AF                     l1736:
  2985                           
  2986                           ;MPU6050.c: 174:   MPU6050_Write(0x6B, 0x80);
  2987  04AF  3080               	movlw	128
  2988  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2989  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2990  04B2  00A6               	movwf	??_MPU6050_Init
  2991  04B3  0826               	movf	??_MPU6050_Init,w
  2992  04B4  00A4               	movwf	MPU6050_Write@data
  2993  04B5  306B               	movlw	107
  2994  04B6  120A  118A  22BC  120A  118A  	fcall	_MPU6050_Write
  2995                           
  2996                           ;MPU6050.c: 175:    _delay((unsigned long)((100)*(20000000/4000.0)));
  2997  04BB  3003               	movlw	3
  2998  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2999  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3000  04BE  00A8               	movwf	??_MPU6050_Init+2
  3001  04BF  308A               	movlw	138
  3002  04C0  00A7               	movwf	??_MPU6050_Init+1
  3003  04C1  3055               	movlw	85
  3004  04C2  00A6               	movwf	??_MPU6050_Init
  3005  04C3                     u3167:
  3006  04C3  0BA6               	decfsz	??_MPU6050_Init,f
  3007  04C4  2CC3               	goto	u3167
  3008  04C5  0BA7               	decfsz	??_MPU6050_Init+1,f
  3009  04C6  2CC3               	goto	u3167
  3010  04C7  0BA8               	decfsz	??_MPU6050_Init+2,f
  3011  04C8  2CC3               	goto	u3167
  3012  04C9                     l1738:
  3013                           
  3014                           ;MPU6050.c: 176:    MPU6050_Write(0x6B, 0x00);
  3015  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3016  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3017  04CB  01A4               	clrf	MPU6050_Write@data
  3018  04CC  306B               	movlw	107
  3019  04CD  120A  118A  22BC  120A  118A  	fcall	_MPU6050_Write
  3020  04D2                     l1740:
  3021                           
  3022                           ;MPU6050.c: 177:    _delay((unsigned long)((100)*(20000000/4000.0)));
  3023  04D2  3003               	movlw	3
  3024  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3025  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3026  04D5  00A8               	movwf	??_MPU6050_Init+2
  3027  04D6  308A               	movlw	138
  3028  04D7  00A7               	movwf	??_MPU6050_Init+1
  3029  04D8  3055               	movlw	85
  3030  04D9  00A6               	movwf	??_MPU6050_Init
  3031  04DA                     u3177:
  3032  04DA  0BA6               	decfsz	??_MPU6050_Init,f
  3033  04DB  2CDA               	goto	u3177
  3034  04DC  0BA7               	decfsz	??_MPU6050_Init+1,f
  3035  04DD  2CDA               	goto	u3177
  3036  04DE  0BA8               	decfsz	??_MPU6050_Init+2,f
  3037  04DF  2CDA               	goto	u3177
  3038                           
  3039                           ;MPU6050.c: 178:    MPU6050_Write(0x1A, 0x01);
  3040  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3041  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3042  04E2  01A4               	clrf	MPU6050_Write@data
  3043  04E3  0AA4               	incf	MPU6050_Write@data,f
  3044  04E4  301A               	movlw	26
  3045  04E5  120A  118A  22BC  120A  118A  	fcall	_MPU6050_Write
  3046  04EA                     l1742:
  3047                           
  3048                           ;MPU6050.c: 179:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3049  04EA  3041               	movlw	65
  3050  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3051  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3052  04ED  00A7               	movwf	??_MPU6050_Init+1
  3053  04EE  30ED               	movlw	237
  3054  04EF  00A6               	movwf	??_MPU6050_Init
  3055  04F0                     u3187:
  3056  04F0  0BA6               	decfsz	??_MPU6050_Init,f
  3057  04F1  2CF0               	goto	u3187
  3058  04F2  0BA7               	decfsz	??_MPU6050_Init+1,f
  3059  04F3  2CF0               	goto	u3187
  3060  04F4  2CF5               	nop2
  3061  04F5                     l1744:
  3062                           
  3063                           ;MPU6050.c: 180:    MPU6050_Write(0x1B, 0x00);
  3064  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3065  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3066  04F7  01A4               	clrf	MPU6050_Write@data
  3067  04F8  301B               	movlw	27
  3068  04F9  120A  118A  22BC  120A  118A  	fcall	_MPU6050_Write
  3069  04FE                     l283:
  3070  04FE  0008               	return
  3071  04FF                     __end_of_MPU6050_Init:
  3072                           
  3073                           	psect	text15
  3074  02BC                     __ptext15:	
  3075 ;; *************** function _MPU6050_Write *****************
  3076 ;; Defined at:
  3077 ;;		line 128 in file "MPU6050.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  add             1    wreg     unsigned char 
  3080 ;;  data            1    4[BANK0 ] unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  add             1    5[BANK0 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       1       0       0       0
  3093 ;;      Locals:         0       1       0       0       0
  3094 ;;      Temps:          0       0       0       0       0
  3095 ;;      Totals:         0       2       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 6
  3099 ;; This function calls:
  3100 ;;		_I2C_Start
  3101 ;;		_I2C_Stop
  3102 ;;		_I2C_Write
  3103 ;; This function is called by:
  3104 ;;		_MPU6050_Init
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _MPU6050_Write
  3110  02BC                     _MPU6050_Write:
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _MPU6050_Write: [wreg+status,2+status,0+pclath+cstack]
  3114                           ;MPU6050_Write@add stored from wreg
  3115  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3116  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3117  02BE  00A5               	movwf	MPU6050_Write@add
  3118  02BF                     l1560:
  3119                           
  3120                           ;MPU6050.c: 128: void MPU6050_Write(unsigned char add,unsigned char data);MPU6050.c: 129
      +                          : {;MPU6050.c: 130:    I2C_Start();
  3121  02BF  120A  118A  21F5  120A  118A  	fcall	_I2C_Start
  3122                           
  3123                           ;MPU6050.c: 131:    I2C_Write(0xD0);
  3124  02C4  30D0               	movlw	208
  3125  02C5  120A  118A  2260  120A  118A  	fcall	_I2C_Write
  3126                           
  3127                           ;MPU6050.c: 132:    I2C_Write(add);
  3128  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  3129  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  3130  02CC  0825               	movf	MPU6050_Write@add,w
  3131  02CD  120A  118A  2260  120A  118A  	fcall	_I2C_Write
  3132                           
  3133                           ;MPU6050.c: 133:    I2C_Write(data);
  3134  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  3135  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  3136  02D4  0824               	movf	MPU6050_Write@data,w
  3137  02D5  120A  118A  2260  120A  118A  	fcall	_I2C_Write
  3138                           
  3139                           ;MPU6050.c: 134:    I2C_Stop();
  3140  02DA  120A  118A  2202  120A  118A  	fcall	_I2C_Stop
  3141  02DF                     l277:
  3142  02DF  0008               	return
  3143  02E0                     __end_of_MPU6050_Write:
  3144                           
  3145                           	psect	text16
  3146  0260                     __ptext16:	
  3147 ;; *************** function _I2C_Write *****************
  3148 ;; Defined at:
  3149 ;;		line 83 in file "I2C.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  Tvalue          1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  Tvalue          1    3[BANK0 ] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         0       1       0       0       0
  3165 ;;      Temps:          0       0       0       0       0
  3166 ;;      Totals:         0       1       0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 5
  3170 ;; This function calls:
  3171 ;;		_I2C_Idle
  3172 ;; This function is called by:
  3173 ;;		_MPU6050_Write
  3174 ;;		_MPU6050_Readvalue
  3175 ;;		_MPU6050_Read
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _I2C_Write
  3181  0260                     _I2C_Write:
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3185                           ;I2C_Write@Tvalue stored from wreg
  3186  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0262  00A3               	movwf	I2C_Write@Tvalue
  3189  0263                     l1452:
  3190                           
  3191                           ;I2C.c: 83: void I2C_Write(unsigned char Tvalue);I2C.c: 84: {;I2C.c: 86:     I2C_Idle();
  3192  0263  120A  118A  2568  120A  118A  	fcall	_I2C_Idle
  3193  0268                     l1454:
  3194                           
  3195                           ;I2C.c: 88:     SSPCONbits.WCOL = 0;
  3196  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3198  026A  1394               	bcf	20,7	;volatile
  3199  026B                     l1456:
  3200                           
  3201                           ;I2C.c: 90:     SSPBUF = Tvalue;
  3202  026B  0823               	movf	I2C_Write@Tvalue,w
  3203  026C  0093               	movwf	19	;volatile
  3204  026D                     l1458:
  3205                           
  3206                           ;I2C.c: 92:     PIR1bits.SSPIF = 0;
  3207  026D  118C               	bcf	12,3	;volatile
  3208  026E                     l164:	
  3209                           ;I2C.c: 94:     while(PIR1bits.SSPIF == 0);
  3210                           
  3211  026E  1D8C               	btfss	12,3	;volatile
  3212  026F  2A71               	goto	u901
  3213  0270  2A72               	goto	u900
  3214  0271                     u901:
  3215  0271  2A6E               	goto	l164
  3216  0272                     u900:
  3217  0272                     l166:
  3218                           
  3219                           ;I2C.c: 96:     if(SSPCON2bits.ACKSTAT == 1)
  3220  0272  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0273  1303               	bcf	3,6	;RP1=0, select bank1
  3222  0274  1F11               	btfss	17,6	;volatile
  3223  0275  2A77               	goto	u911
  3224  0276  2A78               	goto	u910
  3225  0277                     u911:
  3226  0277  2A7B               	goto	l168
  3227  0278                     u910:
  3228  0278                     l1460:
  3229                           
  3230                           ;I2C.c: 97:     {;I2C.c: 98:         PIR1bits.SSPIF = 0;
  3231  0278  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0279  1303               	bcf	3,6	;RP1=0, select bank0
  3233  027A  118C               	bcf	12,3	;volatile
  3234  027B                     l168:
  3235  027B  0008               	return
  3236  027C                     __end_of_I2C_Write:
  3237                           
  3238                           	psect	text17
  3239  0202                     __ptext17:	
  3240 ;; *************** function _I2C_Stop *****************
  3241 ;; Defined at:
  3242 ;;		line 46 in file "I2C.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 5
  3263 ;; This function calls:
  3264 ;;		_I2C_Idle
  3265 ;; This function is called by:
  3266 ;;		_MPU6050_Write
  3267 ;;		_MPU6050_Readvalue
  3268 ;;		_MPU6050_Read
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _I2C_Stop
  3274  0202                     _I2C_Stop:
  3275  0202                     l1448:	
  3276                           ;incstack = 0
  3277                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3278                           
  3279                           
  3280                           ;I2C.c: 48:     I2C_Idle();
  3281  0202  120A  118A  2568  120A  118A  	fcall	_I2C_Idle
  3282  0207                     l1450:
  3283                           
  3284                           ;I2C.c: 49:     SSPCON2bits.PEN = 1;
  3285  0207  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0208  1303               	bcf	3,6	;RP1=0, select bank1
  3287  0209  1511               	bsf	17,2	;volatile
  3288  020A                     l148:	
  3289                           ;I2C.c: 50:     while(SSPCON2bits.PEN);
  3290                           
  3291  020A  1911               	btfsc	17,2	;volatile
  3292  020B  2A0D               	goto	u891
  3293  020C  2A0E               	goto	u890
  3294  020D                     u891:
  3295  020D  2A0A               	goto	l148
  3296  020E                     u890:
  3297  020E                     l151:
  3298  020E  0008               	return
  3299  020F                     __end_of_I2C_Stop:
  3300                           
  3301                           	psect	text18
  3302  01F5                     __ptext18:	
  3303 ;; *************** function _I2C_Start *****************
  3304 ;; Defined at:
  3305 ;;		line 32 in file "I2C.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0
  3322 ;;      Totals:         0       0       0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 5
  3326 ;; This function calls:
  3327 ;;		_I2C_Idle
  3328 ;; This function is called by:
  3329 ;;		_MPU6050_Write
  3330 ;;		_MPU6050_Readvalue
  3331 ;;		_MPU6050_Read
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _I2C_Start
  3337  01F5                     _I2C_Start:
  3338  01F5                     l1444:	
  3339                           ;incstack = 0
  3340                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3341                           
  3342                           
  3343                           ;I2C.c: 34:     I2C_Idle();
  3344  01F5  120A  118A  2568  120A  118A  	fcall	_I2C_Idle
  3345  01FA                     l1446:
  3346                           
  3347                           ;I2C.c: 35:     SSPCON2bits.SEN = 1;
  3348  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  3349  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  3350  01FC  1411               	bsf	17,0	;volatile
  3351  01FD                     l136:	
  3352                           ;I2C.c: 36:     while(SSPCON2bits.SEN);
  3353                           
  3354  01FD  1811               	btfsc	17,0	;volatile
  3355  01FE  2A00               	goto	u881
  3356  01FF  2A01               	goto	u880
  3357  0200                     u881:
  3358  0200  29FD               	goto	l136
  3359  0201                     u880:
  3360  0201                     l139:
  3361  0201  0008               	return
  3362  0202                     __end_of_I2C_Start:
  3363                           
  3364                           	psect	text19
  3365  0568                     __ptext19:	
  3366 ;; *************** function _I2C_Idle *****************
  3367 ;; Defined at:
  3368 ;;		line 23 in file "I2C.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          0       3       0       0       0
  3385 ;;      Totals:         0       3       0       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 4
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_I2C_Start
  3393 ;;		_I2C_Restart
  3394 ;;		_I2C_Stop
  3395 ;;		_I2C_Read
  3396 ;;		_I2C_Write
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _I2C_Idle
  3402  0568                     _I2C_Idle:
  3403  0568                     l1428:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _I2C_Idle: [wreg+status,2+status,0]
  3406                           
  3407  0568                     l1430:	
  3408                           ;I2C.c: 25:     while(SSPSTATbits.R_W | SSPCON2bits.SEN);
  3409                           
  3410  0568  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0569  1303               	bcf	3,6	;RP1=0, select bank1
  3412  056A  0811               	movf	17,w	;volatile
  3413  056B  3901               	andlw	1
  3414  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3415  056D  1303               	bcf	3,6	;RP1=0, select bank0
  3416  056E  00A0               	movwf	??_I2C_Idle
  3417  056F  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0570  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0571  0C14               	rrf	20,w	;volatile
  3420  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0574  00A1               	movwf	??_I2C_Idle+1
  3423  0575  0C21               	rrf	??_I2C_Idle+1,w
  3424  0576  3901               	andlw	1
  3425  0577  0420               	iorwf	??_I2C_Idle,w
  3426  0578  1D03               	btfss	3,2
  3427  0579  2D7B               	goto	u821
  3428  057A  2D7C               	goto	u820
  3429  057B                     u821:
  3430  057B  2D68               	goto	l1430
  3431  057C                     u820:
  3432  057C                     l1432:
  3433  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3434  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3435  057E  0C11               	rrf	17,w	;volatile
  3436  057F  3901               	andlw	1
  3437  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0582  00A0               	movwf	??_I2C_Idle
  3440  0583  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0584  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0585  0C14               	rrf	20,w	;volatile
  3443  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0587  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0588  00A1               	movwf	??_I2C_Idle+1
  3446  0589  0C21               	rrf	??_I2C_Idle+1,w
  3447  058A  3901               	andlw	1
  3448  058B  0420               	iorwf	??_I2C_Idle,w
  3449  058C  1D03               	btfss	3,2
  3450  058D  2D8F               	goto	u831
  3451  058E  2D90               	goto	u830
  3452  058F                     u831:
  3453  058F  2D7C               	goto	l1432
  3454  0590                     u830:
  3455  0590                     l1434:
  3456  0590  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0591  1303               	bcf	3,6	;RP1=0, select bank1
  3458  0592  0C11               	rrf	17,w	;volatile
  3459  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0595  00A0               	movwf	??_I2C_Idle
  3462  0596  0C20               	rrf	??_I2C_Idle,w
  3463  0597  3901               	andlw	1
  3464  0598  00A1               	movwf	??_I2C_Idle+1
  3465  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3466  059A  1303               	bcf	3,6	;RP1=0, select bank1
  3467  059B  0C14               	rrf	20,w	;volatile
  3468  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3469  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3470  059E  00A2               	movwf	??_I2C_Idle+2
  3471  059F  0C22               	rrf	??_I2C_Idle+2,w
  3472  05A0  3901               	andlw	1
  3473  05A1  0421               	iorwf	??_I2C_Idle+1,w
  3474  05A2  1D03               	btfss	3,2
  3475  05A3  2DA5               	goto	u841
  3476  05A4  2DA6               	goto	u840
  3477  05A5                     u841:
  3478  05A5  2D90               	goto	l1434
  3479  05A6                     u840:
  3480  05A6                     l1436:
  3481  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  3482  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  3483  05A8  0C11               	rrf	17,w	;volatile
  3484  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3485  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3486  05AB  00A0               	movwf	??_I2C_Idle
  3487  05AC  0CA0               	rrf	??_I2C_Idle,f
  3488  05AD  0C20               	rrf	??_I2C_Idle,w
  3489  05AE  3901               	andlw	1
  3490  05AF  00A1               	movwf	??_I2C_Idle+1
  3491  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3492  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3493  05B2  0C14               	rrf	20,w	;volatile
  3494  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3495  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3496  05B5  00A2               	movwf	??_I2C_Idle+2
  3497  05B6  0C22               	rrf	??_I2C_Idle+2,w
  3498  05B7  3901               	andlw	1
  3499  05B8  0421               	iorwf	??_I2C_Idle+1,w
  3500  05B9  1D03               	btfss	3,2
  3501  05BA  2DBC               	goto	u851
  3502  05BB  2DBD               	goto	u850
  3503  05BC                     u851:
  3504  05BC  2DA6               	goto	l1436
  3505  05BD                     u850:
  3506  05BD                     l1438:
  3507  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3508  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3509  05BF  0E11               	swapf	17,w	;volatile
  3510  05C0  3901               	andlw	1
  3511  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3512  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3513  05C3  00A0               	movwf	??_I2C_Idle
  3514  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3515  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  3516  05C6  0C14               	rrf	20,w	;volatile
  3517  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3518  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3519  05C9  00A1               	movwf	??_I2C_Idle+1
  3520  05CA  0C21               	rrf	??_I2C_Idle+1,w
  3521  05CB  3901               	andlw	1
  3522  05CC  0420               	iorwf	??_I2C_Idle,w
  3523  05CD  1D03               	btfss	3,2
  3524  05CE  2DD0               	goto	u861
  3525  05CF  2DD1               	goto	u860
  3526  05D0                     u861:
  3527  05D0  2DBD               	goto	l1438
  3528  05D1                     u860:
  3529  05D1                     l133:
  3530  05D1  0008               	return
  3531  05D2                     __end_of_I2C_Idle:
  3532                           
  3533                           	psect	text20
  3534  022A                     __ptext20:	
  3535 ;; *************** function _I2C_Init *****************
  3536 ;; Defined at:
  3537 ;;		line 9 in file "I2C.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 4
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_MPU6050_Init
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           
  3566                           ;psect for function _I2C_Init
  3567  022A                     _I2C_Init:
  3568  022A                     l1522:	
  3569                           ;incstack = 0
  3570                           ; Regs used in _I2C_Init: [wreg+status,2]
  3571                           
  3572                           
  3573                           ;I2C.c: 13:     TRISCbits.TRISC3 = 1;
  3574  022A  1683               	bsf	3,5	;RP0=1, select bank1
  3575  022B  1303               	bcf	3,6	;RP1=0, select bank1
  3576  022C  1587               	bsf	7,3	;volatile
  3577                           
  3578                           ;I2C.c: 14:     TRISCbits.TRISC4 = 1;
  3579  022D  1607               	bsf	7,4	;volatile
  3580  022E                     l1524:
  3581                           
  3582                           ;I2C.c: 16:     SSPCON = 0x28;
  3583  022E  3028               	movlw	40
  3584  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0231  0094               	movwf	20	;volatile
  3587  0232                     l1526:
  3588                           
  3589                           ;I2C.c: 17:     SSPCON2 = 0x00;
  3590  0232  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0233  1303               	bcf	3,6	;RP1=0, select bank1
  3592  0234  0191               	clrf	17	;volatile
  3593  0235                     l1528:
  3594                           
  3595                           ;I2C.c: 18:     SSPSTATbits.SMP = 1;
  3596  0235  1794               	bsf	20,7	;volatile
  3597  0236                     l1530:
  3598                           
  3599                           ;I2C.c: 20:     SSPADD = ((20000000/4)/400000) - 1;
  3600  0236  300B               	movlw	11
  3601  0237  0093               	movwf	19	;volatile
  3602  0238                     l115:
  3603  0238  0008               	return
  3604  0239                     __end_of_I2C_Init:
  3605                           
  3606                           	psect	text21
  3607  033B                     __ptext21:	
  3608 ;; *************** function _isr1 *****************
  3609 ;; Defined at:
  3610 ;;		line 66 in file "UART.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  ReceivedData    1    9[COMMON] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0
  3626 ;;      Temps:          4       0       0       0       0
  3627 ;;      Totals:         5       0       0       0       0
  3628 ;;Total ram usage:        5 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 3
  3631 ;; This function calls:
  3632 ;;		_ClearRX_Buffer
  3633 ;;		_HandleData
  3634 ;; This function is called by:
  3635 ;;		Interrupt level 1
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _isr1
  3641  033B                     _isr1:
  3642  033B                     i1l2066:
  3643                           
  3644                           ;UART.c: 68:     if(RCIE)
  3645  033B  1683               	bsf	3,5	;RP0=1, select bank1
  3646  033C  1303               	bcf	3,6	;RP1=0, select bank1
  3647  033D  1E8C               	btfss	12,5	;volatile
  3648  033E  2B40               	goto	u205_21
  3649  033F  2B41               	goto	u205_20
  3650  0340                     u205_21:
  3651  0340  2B69               	goto	i1l94
  3652  0341                     u205_20:
  3653  0341                     i1l2068:
  3654                           
  3655                           ;UART.c: 69:     {;UART.c: 70:         if(RCIF)
  3656  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3658  0343  1E8C               	btfss	12,5	;volatile
  3659  0344  2B46               	goto	u206_21
  3660  0345  2B47               	goto	u206_20
  3661  0346                     u206_21:
  3662  0346  2B69               	goto	i1l94
  3663  0347                     u206_20:
  3664  0347                     i1l2070:
  3665                           
  3666                           ;UART.c: 71:         {;UART.c: 72:             char ReceivedData;;UART.c: 73:           
      +                            ReceivedData = RCREG;
  3667  0347  081A               	movf	26,w	;volatile
  3668  0348  00F6               	movwf	??_isr1
  3669  0349  0876               	movf	??_isr1,w
  3670  034A  00FA               	movwf	isr1@ReceivedData
  3671  034B                     i1l2072:
  3672                           
  3673                           ;UART.c: 74:             if(ReceivedData != '\n')
  3674  034B  300A               	movlw	10
  3675  034C  067A               	xorwf	isr1@ReceivedData,w
  3676  034D  1903               	btfsc	3,2
  3677  034E  2B50               	goto	u207_21
  3678  034F  2B51               	goto	u207_20
  3679  0350                     u207_21:
  3680  0350  2B5E               	goto	i1l2078
  3681  0351                     u207_20:
  3682  0351                     i1l2074:
  3683                           
  3684                           ;UART.c: 75:             {;UART.c: 76:                 RX_Buffer[rx_index++] = RCREG;
  3685  0351  081A               	movf	26,w	;volatile
  3686  0352  00F6               	movwf	??_isr1
  3687  0353  087B               	movf	_rx_index,w
  3688  0354  3EB8               	addlw	(low (_RX_Buffer| 0))& (0+255)
  3689  0355  0084               	movwf	4
  3690  0356  0876               	movf	??_isr1,w
  3691  0357  1383               	bcf	3,7	;select IRP bank1
  3692  0358  0080               	movwf	0
  3693  0359                     i1l2076:
  3694  0359  3001               	movlw	1
  3695  035A  00F6               	movwf	??_isr1
  3696  035B  0876               	movf	??_isr1,w
  3697  035C  07FB               	addwf	_rx_index,f
  3698                           
  3699                           ;UART.c: 77:             }
  3700  035D  2B69               	goto	i1l94
  3701  035E                     i1l2078:
  3702                           
  3703                           ;UART.c: 79:             {;UART.c: 80:                 HandleData(RX_Buffer);
  3704  035E  30B8               	movlw	(low (_RX_Buffer| 0))& (0+255)
  3705  035F  120A  118A  21D9  120A  118A  	fcall	_HandleData
  3706                           
  3707                           ;UART.c: 81:                 ClearRX_Buffer();
  3708  0364  120A  118A  2239  120A  118A  	fcall	_ClearRX_Buffer
  3709  0369                     i1l94:
  3710  0369  0879               	movf	??_isr1+3,w
  3711  036A  008A               	movwf	10
  3712  036B  0878               	movf	??_isr1+2,w
  3713  036C  0084               	movwf	4
  3714  036D  0E77               	swapf	??_isr1+1,w
  3715  036E  0083               	movwf	3
  3716  036F  0EFE               	swapf	btemp,f
  3717  0370  0E7E               	swapf	btemp,w
  3718  0371  0009               	retfie
  3719  0372                     __end_of_isr1:
  3720                           
  3721                           	psect	intentry
  3722  0004                     __pintentry:	
  3723                           ;incstack = 0
  3724                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3725                           
  3726  0004                     interrupt_function:
  3727  007E                     saved_w	set	btemp
  3728  0004  00FE               	movwf	btemp
  3729  0005  0E03               	swapf	3,w
  3730  0006  00F7               	movwf	??_isr1+1
  3731  0007  0804               	movf	4,w
  3732  0008  00F8               	movwf	??_isr1+2
  3733  0009  080A               	movf	10,w
  3734  000A  00F9               	movwf	??_isr1+3
  3735  000B  120A  118A  2B3B   	ljmp	_isr1
  3736                           
  3737                           	psect	text22
  3738  01D9                     __ptext22:	
  3739 ;; *************** function _HandleData *****************
  3740 ;; Defined at:
  3741 ;;		line 53 in file "UART.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  RX              1    wreg     PTR unsigned char 
  3744 ;;		 -> RX_Buffer(50), 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  RX              1    4[COMMON] PTR unsigned char 
  3747 ;;		 -> RX_Buffer(50), 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         1       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0
  3760 ;;      Totals:         1       0       0       0       0
  3761 ;;Total ram usage:        1 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 2
  3764 ;; This function calls:
  3765 ;;		i1_UART_Transmit_Text
  3766 ;; This function is called by:
  3767 ;;		_isr1
  3768 ;;		_UART_Receive
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _HandleData
  3774  01D9                     _HandleData:
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _HandleData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3778                           ;HandleData@RX stored from wreg
  3779  01D9  00F5               	movwf	HandleData@RX
  3780  01DA                     i1l1796:
  3781                           
  3782                           ;UART.c: 53: void HandleData(char *RX);UART.c: 54: {;UART.c: 55:     UART_Transmit_Text(
      +                          RX);
  3783  01DA  0875               	movf	HandleData@RX,w
  3784  01DB  120A  118A  227C  120A  118A  	fcall	i1_UART_Transmit_Text
  3785  01E0                     i1l80:
  3786  01E0  0008               	return
  3787  01E1                     __end_of_HandleData:
  3788                           
  3789                           	psect	text23
  3790  027C                     __ptext23:	
  3791 ;; *************** function i1_UART_Transmit_Text *****************
  3792 ;; Defined at:
  3793 ;;		line 27 in file "UART.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  str             1    wreg     PTR unsigned char 
  3796 ;;		 -> MPU6050_Readvalue@buffer(40), RX_Buffer(50), 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  str             1    2[COMMON] PTR unsigned char 
  3799 ;;		 -> MPU6050_Readvalue@buffer(40), RX_Buffer(50), 
  3800 ;;  i               1    3[COMMON] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         0       0       0       0       0
  3811 ;;      Locals:         2       0       0       0       0
  3812 ;;      Temps:          1       0       0       0       0
  3813 ;;      Totals:         3       0       0       0       0
  3814 ;;Total ram usage:        3 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 1
  3817 ;; This function calls:
  3818 ;;		i1_UART_Transmit
  3819 ;; This function is called by:
  3820 ;;		_HandleData
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function i1_UART_Transmit_Text
  3826  027C                     i1_UART_Transmit_Text:
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in i1_UART_Transmit_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3830                           ;i1UART_Transmit_Text@str stored from wreg
  3831  027C  00F3               	movwf	i1UART_Transmit_Text@str
  3832  027D                     i1l1708:
  3833                           
  3834                           ;UART.c: 27: void UART_Transmit_Text(char *str);UART.c: 28: {;UART.c: 29:     unsigned c
      +                          har i=0;
  3835  027D  01F4               	clrf	i1UART_Transmit_Text@i
  3836                           
  3837                           ;UART.c: 30:     while(str[i] != 0)
  3838  027E  2A8E               	goto	i1l1714
  3839  027F                     i1l1710:
  3840                           
  3841                           ;UART.c: 31:     {;UART.c: 32:         UART_Transmit(str[i]);
  3842  027F  0874               	movf	i1UART_Transmit_Text@i,w
  3843  0280  0773               	addwf	i1UART_Transmit_Text@str,w
  3844  0281  00F2               	movwf	??i1_UART_Transmit_Text
  3845  0282  0872               	movf	??i1_UART_Transmit_Text,w
  3846  0283  0084               	movwf	4
  3847  0284  0800               	movf	0,w
  3848  0285  120A  118A  21E9  120A  118A  	fcall	i1_UART_Transmit
  3849  028A                     i1l1712:
  3850                           
  3851                           ;UART.c: 33:         i++;
  3852  028A  3001               	movlw	1
  3853  028B  00F2               	movwf	??i1_UART_Transmit_Text
  3854  028C  0872               	movf	??i1_UART_Transmit_Text,w
  3855  028D  07F4               	addwf	i1UART_Transmit_Text@i,f
  3856  028E                     i1l1714:
  3857                           
  3858                           ;UART.c: 30:     while(str[i] != 0)
  3859  028E  0874               	movf	i1UART_Transmit_Text@i,w
  3860  028F  0773               	addwf	i1UART_Transmit_Text@str,w
  3861  0290  00F2               	movwf	??i1_UART_Transmit_Text
  3862  0291  0872               	movf	??i1_UART_Transmit_Text,w
  3863  0292  0084               	movwf	4
  3864  0293  1383               	bcf	3,7	;select IRP bank0
  3865  0294  0800               	movf	0,w
  3866  0295  1D03               	btfss	3,2
  3867  0296  2A98               	goto	u138_21
  3868  0297  2A99               	goto	u138_20
  3869  0298                     u138_21:
  3870  0298  2A7F               	goto	i1l1710
  3871  0299                     u138_20:
  3872  0299                     i1l71:
  3873  0299  0008               	return
  3874  029A                     __end_ofi1_UART_Transmit_Text:
  3875                           
  3876                           	psect	text24
  3877  01E9                     __ptext24:	
  3878 ;; *************** function i1_UART_Transmit *****************
  3879 ;; Defined at:
  3880 ;;		line 22 in file "UART.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  c               1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  c               1    0[COMMON] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3894 ;;      Params:         0       0       0       0       0
  3895 ;;      Locals:         1       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0
  3897 ;;      Totals:         1       0       0       0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		i1_UART_Transmit_Text
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           
  3908                           ;psect for function i1_UART_Transmit
  3909  01E9                     i1_UART_Transmit:
  3910                           
  3911                           ;incstack = 0
  3912                           ; Regs used in i1_UART_Transmit: [wreg]
  3913                           ;i1UART_Transmit@c stored from wreg
  3914  01E9  00F1               	movwf	i1UART_Transmit@c
  3915  01EA                     i1l1510:
  3916  01EA                     i1l62:	
  3917                           ;UART.c: 22: void UART_Transmit(char c);UART.c: 23: {;UART.c: 24:     while(!TRMT);
  3918                           
  3919  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  3920  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  3921  01EC  1C98               	btfss	24,1	;volatile
  3922  01ED  29EF               	goto	u105_21
  3923  01EE  29F0               	goto	u105_20
  3924  01EF                     u105_21:
  3925  01EF  29EA               	goto	i1l62
  3926  01F0                     u105_20:
  3927  01F0                     i1l1512:
  3928                           
  3929                           ;UART.c: 25:     TXREG = c;
  3930  01F0  0871               	movf	i1UART_Transmit@c,w
  3931  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3932  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3933  01F3  0099               	movwf	25	;volatile
  3934  01F4                     i1l65:
  3935  01F4  0008               	return
  3936  01F5                     __end_ofi1_UART_Transmit:
  3937                           
  3938                           	psect	text25
  3939  0239                     __ptext25:	
  3940 ;; *************** function _ClearRX_Buffer *****************
  3941 ;; Defined at:
  3942 ;;		line 57 in file "UART.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  i               1    1[COMMON] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         0       0       0       0       0
  3957 ;;      Locals:         1       0       0       0       0
  3958 ;;      Temps:          1       0       0       0       0
  3959 ;;      Totals:         2       0       0       0       0
  3960 ;;Total ram usage:        2 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_isr1
  3966 ;;		_UART_Receive
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function _ClearRX_Buffer
  3972  0239                     _ClearRX_Buffer:
  3973  0239                     i1l1798:	
  3974                           ;incstack = 0
  3975                           ; Regs used in _ClearRX_Buffer: [wreg-fsr0h+status,2+status,0]
  3976                           
  3977                           
  3978                           ;UART.c: 59:  char i;;UART.c: 60:  for(i = 0; i < 50; i++)
  3979  0239  01F2               	clrf	ClearRX_Buffer@i
  3980  023A                     i1l1804:
  3981                           
  3982                           ;UART.c: 61:  {;UART.c: 62:   RX_Buffer[i] = 0;
  3983  023A  0872               	movf	ClearRX_Buffer@i,w
  3984  023B  3EB8               	addlw	(low (_RX_Buffer| 0))& (0+255)
  3985  023C  0084               	movwf	4
  3986  023D  1383               	bcf	3,7	;select IRP bank1
  3987  023E  0180               	clrf	0
  3988  023F                     i1l1806:
  3989                           
  3990                           ;UART.c: 63:  }
  3991  023F  3001               	movlw	1
  3992  0240  00F1               	movwf	??_ClearRX_Buffer
  3993  0241  0871               	movf	??_ClearRX_Buffer,w
  3994  0242  07F2               	addwf	ClearRX_Buffer@i,f
  3995  0243                     i1l1808:
  3996  0243  3032               	movlw	50
  3997  0244  0272               	subwf	ClearRX_Buffer@i,w
  3998  0245  1C03               	skipc
  3999  0246  2A48               	goto	u143_21
  4000  0247  2A49               	goto	u143_20
  4001  0248                     u143_21:
  4002  0248  2A3A               	goto	i1l1804
  4003  0249                     u143_20:
  4004  0249                     i1l1810:
  4005                           
  4006                           ;UART.c: 64:  rx_index = 0;
  4007  0249  01FB               	clrf	_rx_index
  4008  024A                     i1l85:
  4009  024A  0008               	return
  4010  024B                     __end_of_ClearRX_Buffer:
  4011  007E                     btemp	set	126	;btemp
  4012  007E                     wtemp0	set	126
  4013                           
  4014                           	psect	config
  4015                           
  4016                           ;Config register CONFIG @ 0x2007
  4017                           ;	Oscillator Selection bits
  4018                           ;	FOSC = HS, HS oscillator
  4019                           ;	Watchdog Timer Enable bit
  4020                           ;	WDTE = OFF, WDT disabled
  4021                           ;	Power-up Timer Enable bit
  4022                           ;	PWRTE = OFF, PWRT disabled
  4023                           ;	Brown-out Reset Enable bit
  4024                           ;	BOREN = OFF, BOR disabled
  4025                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4026                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4027                           ;	Data EEPROM Memory Code Protection bit
  4028                           ;	CPD = OFF, Data EEPROM code protection off
  4029                           ;	Flash Program Memory Write Enable bits
  4030                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4031                           ;	In-Circuit Debugger Mode bit
  4032                           ;	DEBUG = 0x1, unprogrammed default
  4033                           ;	Flash Program Memory Code Protection bit
  4034                           ;	CP = OFF, Code protection off
  4035  2007                     	org	8199
  4036  2007  3F3A               	dw	16186

Data Sizes:
    Strings     14
    Constant    26
    Data        4
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      11
    BANK0            80     76      80
    BANK1            80      0      78
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Readvalue@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    HandleData@RX	PTR unsigned char  size(1) Largest target is 50
		 -> RX_Buffer(BANK1[50]), 

    UART_Transmit_Text@str	PTR unsigned char  size(1) Largest target is 50
		 -> MPU6050_Readvalue@buffer(BANK0[40]), RX_Buffer(BANK1[50]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr1 in COMMON

    _isr1->_HandleData
    _HandleData->i1_UART_Transmit_Text
    i1_UART_Transmit_Text->i1_UART_Transmit

Critical Paths under _main in BANK0

    _main->_MPU6050_Readvalue
    _PWM2_Init->___aldiv
    _PWM1_Init->___aldiv
    _MPU6050_Readvalue->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Transmit_Text->_UART_Transmit
    _I2C_Restart->_I2C_Idle
    _I2C_Read->_I2C_Idle
    _MPU6050_Init->_MPU6050_Write
    _MPU6050_Write->_I2C_Write
    _I2C_Write->_I2C_Idle
    _I2C_Stop->_I2C_Idle
    _I2C_Start->_I2C_Idle

Critical Paths under _isr1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4522
                                             73 BANK0      3     3      0
                       _MPU6050_Init
                  _MPU6050_Readvalue
                          _PWM1_Init
                          _PWM2_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            4     4      0    1060
                                             15 BANK0      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            4     4      0    1060
                                             15 BANK0      4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1060
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Readvalue                                   46    46      0    2032
                                             27 BANK0     46    46      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                 _UART_Transmit_Text
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit_Text                                   3     3      0     178
                                              1 BANK0      3     3      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      67
                                              3 BANK0      3     3      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0     370
                                              6 BANK0      3     3      0
                           _I2C_Init
                      _MPU6050_Write
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write                                        2     1      1     370
                                              4 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              3 BANK0      1     1      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Idle                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr1                                                 5     5      0     291
                                              5 COMMON     5     5      0
                     _ClearRX_Buffer
                         _HandleData
 ---------------------------------------------------------------------------------
 (6) _HandleData                                           1     1      0     200
                                              4 COMMON     1     1      0
               i1_UART_Transmit_Text
 ---------------------------------------------------------------------------------
 (7) i1_UART_Transmit_Text                                 3     3      0     112
                                              1 COMMON     3     3      0
                    i1_UART_Transmit
 ---------------------------------------------------------------------------------
 (8) i1_UART_Transmit                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ClearRX_Buffer                                       2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Init
     _MPU6050_Write
       _I2C_Start
         _I2C_Idle
       _I2C_Stop
         _I2C_Idle
       _I2C_Write
         _I2C_Idle
   _MPU6050_Readvalue
     _I2C_Read
       _I2C_Idle
     _I2C_Restart
       _I2C_Idle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _UART_Transmit_Text
       _UART_Transmit
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _PWM1_Init
     ___aldiv
   _PWM2_Init
     ___aldiv
   _UART_Init

 _isr1 (ROOT)
   _ClearRX_Buffer
   _HandleData
     i1_UART_Transmit_Text
       i1_UART_Transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      A       B       1       84.6%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A9      12        0.0%
ABS                  0      0      A9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 18 08:15:39 2022

                            _K 0021                              pc 0002             __size_of_I2C_Start 000D  
                  _SSPSTATbits 0094             __size_of_I2C_Write 001C                             l62 021F  
                           l71 02BB                             l65 0229                             l59 025F  
                           _Kd 0025                             _Ki 0029                             _Kp 002D  
                 ___awdiv@sign 0026                             fsr 0004                            l115 0238  
                          l133 05D1                            l142 0217                            l151 020E  
                          l136 01FD                            l161 033A                            l145 021B  
                          l154 031A                            l139 0201                            l148 020A  
                          l164 026E                            l404 07D1                            l260 0447  
                          l157 032B                            l166 0272                            l263 0494  
                          l168 027B                            l257 0440                            l266 049B  
                          l283 04FE                            l277 02DF                            l294 064A  
                          l561 0567                            l473 065F                            l483 06E7  
                          l680 03F3                            l690 03AD                            _PR2 0092  
                          u820 057C                            u900 0272                            u821 057B  
                          u901 0271                            u830 0590                            u910 0278  
                          u831 058F                            u911 0277                            u840 05A6  
                          u920 03B8                            u841 05A5                            u921 03B7  
                          u850 05BD                            u851 05BC                            u860 05D1  
                          u940 03CA                            u861 05D0                            u941 03C9  
                          u870 0225                            u871 0224                            u935 03BC  
                          u880 0201                            u960 03DB                            u881 0200  
                          u961 03DA                            u890 020E                            u891 020D  
                          u955 03CB                            u980 03EF                            u981 03EE  
                          u965 03D7                            u990 037A                            u975 03E3  
                          u991 0379                            fsr0 0004                            indf 0000  
         __size_of_I2C_Restart 000D                           l2050 02F4                           l1500 0396  
                         l2052 02F9                           l1430 0568                           l1502 039C  
                         l1432 057C                           l1440 021F                           l1520 02B0  
                         l1504 03A3                           l1600 0767                           l2048 02E0  
                         l1530 0236                           l1522 022A                           l1434 0590  
                         l1450 0207                           l1442 0225                           l1514 029D  
                         l1506 03A9                           l1610 07AE                           l1602 076E  
                         l1524 022E                           l1436 05A6                           l1428 0568  
                         l1444 01F5                           l1460 0278                           l1452 0263  
                         l1540 0316                           l1532 020F                           l1516 029F  
                         l1700 0559                           l1612 07B2                           l1604 0772  
                         l1526 0232                           l1438 05BD                           l1446 01FA  
                         l1454 0268                           l1550 032F                           l1542 0317  
                         l1534 0214                           l1518 02AA                           l1702 055E  
                         l1470 03C2                           l1462 03AE                           l1606 0777  
                         l1614 07BB                           l1630 0663                           l1528 0235  
                         l1448 0202                           l1456 026B                           l1560 02BF  
                         l1552 0333                           l1544 031E                           l1536 030E  
                         l1704 0563                           l1480 03E2                           l1472 03C6  
                         l1464 03B2                           l1608 07A7                           l1616 07CD  
                         l1640 0685                           l1632 066E                           l1624 064B  
                         l1720 0251                           l1458 026D                           l1554 0338  
                         l1546 0327                           l1538 0313                           l1482 03E9  
                         l1474 03CA                           l1466 03B8                           l1490 037A  
                         l1570 0702                           l1562 06EB                           l1650 06BF  
                         l1642 0692                           l1634 0672                           l1626 064E  
                         l1730 025E                           l1722 0254                           l1740 04D2  
                         l1732 049C                           l1556 0339                           l1548 0328  
                         l1476 03DB                           l1468 03BB                           l1484 03EF  
                         l1492 037D                           l1580 072C                           l1564 06F0  
                         l1660 06DF                           l1652 06C0                           l1644 0696  
                         l1636 067A                           l1628 0652                           l1724 0257  
                         l1716 024B                           l1742 04EA                           l1734 04AA  
                         l1670 050B                           l1478 03E1                           l1494 0384  
                         l1582 0730                           l1574 0703                           l1566 06F6  
                         l1654 06C9                           l1646 069F                           l1638 0682  
                         l1750 043C                           l1726 025A                           l1718 024F  
                         l1744 04F5                           l1736 04AF                           l1680 051C  
                         l1672 050D                           l1664 04FF                           l1496 0388  
                         l1488 0372                           l1592 073B                           l1584 0734  
                         l1576 0720                           l1568 06FD                           l1648 06B1  
                         l1656 06CF                           l1760 0443                           l1752 043F  
                         l1728 025D                           l1738 04C9                           l1690 0534  
                         l1682 0522                           l1674 0511                           l1666 0502  
                         l1498 038C                           l1586 0739                           l1578 0728  
                         l1658 06D4                           l1762 0444                           l1746 03F4  
                         l1770 0493                           l1692 0545                           l1684 0525  
                         l1676 0516                           l1668 0506                           l1596 0757  
                         l2556 0715                           l1748 03F8                           l1780 0498  
                         l1764 0448                           l1694 054B                           l1686 052C  
                         l1678 051A                           l1598 0761                           l1790 0621  
                         l1782 05D2                           l1758 0442                           l1766 044C  
                         l1696 054C                           l1688 0530                           l1792 0636  
                         l1784 05F9                           l1776 0496                           l1768 0490  
                         l1698 0553                           l1794 0644                           l1786 0616  
                         l1778 0497                           l1788 061C                           STR_1 0031  
                         _CREN 00C4                           u1010 038C                           u1011 038B  
                         u1100 0338                           u1020 0396                           u1101 0337  
                         u1021 0395                           u1005 037E                           u1110 06F6  
                         u1111 06F5                           u1040 03A9                           u1120 0730  
                         u1200 0682                           u1041 03A8                           u1025 0392  
                         u1121 072F                           u1201 0681                           u1130 0756  
                         u1035 039D                           u1131 0755                           u1060 02BB  
                         u1300 0522                           u1140 0761                           u1220 0696  
                         u1061 02BA                           u1301 0521                           u1141 0760  
                         u1221 0695                           u1070 021B                           u1150 0767  
                         u1071 021A                           u1151 0766                           u1135 0752  
                         u1215 0687                           u1080 031E                           u1320 0534  
                         u1160 07BB                           u1240 06B1                           u1400 041D  
                         u1081 031D                           u1321 0533                           u1161 07BA  
                         u1241 06B0                           u1090 032F                           u1170 07CD  
                         u1410 0468                           u1091 032E                           u1315 0526  
                         u1171 07CC                           u1235 0698                           u1340 0545  
                         u1260 06CF                           u1180 0652                           u1420 0471  
                         u1341 0544                           u1261 06CE                           u1245 06AD  
                         u1181 0651                           u1405 0418                           u1270 06D4  
                         u1190 0663                           u1335 0535                           u1271 06D3  
                         u1255 06C1                           u1191 0662                           u1415 0463  
                         u1360 0559                           u1280 0506                           u1361 0558  
                         u1345 0541                           u1281 0505                           u1425 046C  
                         u1370 055E                           u1290 0511                           u1371 055D  
                         u1355 054D                           u1291 0510                           u1390 0414  
                         u1395 040F                           u3147 0301                           u3157 04A4  
                         u3167 04C3                           u3177 04DA                           u3187 04F0  
                         _RCIE 0465                           _RCIF 0065                           i1l62 01EA  
                         i1l71 0299                           i1l80 01E0                           i1l65 01F4  
                         i1l85 024A                           i1l94 0369                           _TMR2 0011  
                         _SPEN 00C7                           _TRMT 04C1                           _TXEN 04C5  
       __size_of_MPU6050_Write 0024                           _isr1 033B                           _main 02E0  
             __end_of_I2C_Idle 05D2               __end_of_I2C_Init 0239               __end_of_I2C_Read 033B  
                         btemp 007E               __end_of_I2C_Stop 020F                           start 000E  
   __end_of_UART_Transmit_Text 02BC                     _HandleData 01D9                __end_of___aldiv 06E8  
                        ?_isr1 0071                          ?_main 0071                          _CCP1X 00BD  
                        _CCP1Y 00BC                          _CCP2X 00ED                          _CCP2Y 00EC  
              __end_of___awdiv 0568                ___awdiv@divisor 0020                __end_of___lwdiv 03F4  
              __end_of___lwmod 03AE                ___awdiv@counter 0025                          _RCREG 001A  
             isr1@ReceivedData 007A                          _SPBRG 0099                          _TXREG 0019  
         i1_UART_Transmit_Text 027C                  _PWM_Frequency 00EA             __size_of_UART_Init 0015  
                        _dTerm 00AC             __size_of_PWM1_Init 0054             __size_of_PWM2_Init 0054  
                        _iTerm 00B0                          _pTerm 00B4                  ?_MPU6050_Init 0071  
              __end_of_dpowers 0021                          _error 00A0                          _speed 006C  
            __end_of_I2C_Start 0202              __end_of_I2C_Write 027C                          pclath 000A  
                        status 0003                          wtemp0 007E                __end_of_sprintf 07D2  
             ?i1_UART_Transmit 0071                __initialization 07D2                   __end_of_isr1 0372  
                 __end_of_main 030B                  _MPU6050_Write 02BC                         ??_isr1 0076  
                       ??_main 0069              MPU6050_Write@data 0024          ?i1_UART_Transmit_Text 0071  
               ??_MPU6050_Init 0026                         _CCPR1L 0015                         _CCPR2L 001B  
             ___awdiv@dividend 0022                         i1l1510 01EA                         i1l2070 0347  
                       i1l1512 01F0                         i1l2072 034B                         i1l2074 0351  
                       i1l2066 033B                         i1l2076 0359                         i1l2068 0341  
                       i1l1710 027F                         i1l2078 035E                         u105_20 01F0  
                       i1l1712 028A                         u105_21 01EF                         i1l1810 0249  
                       i1l1714 028E                         i1l1804 023A                         i1l1708 027D  
                       i1l1806 023F                         i1l1808 0243                         i1l1796 01DA  
                       i1l1798 0239                         u205_20 0341                         u205_21 0340  
                       u206_20 0347                         u206_21 0346                         u143_20 0249  
                       u207_20 0351                         u143_21 0248                         u207_21 0350  
                       u138_20 0299                         u138_21 0298            MPU6050_Readvalue@Ax 0067  
                       _SSPADD 0093                         _SSPCON 0014                         _SSPBUF 0013  
            __end_of_UART_Init 0260          i1UART_Transmit_Text@i 0074              __end_of_PWM1_Init 0448  
            __end_of_PWM2_Init 049C                      ??___aldiv 0028                    ?_HandleData 0071  
                    ??___awdiv 0024                      ??___lwdiv 0024                      ??___lwmod 002C  
               ?_MPU6050_Write 0024               ___awdiv@quotient 0027                      ?_I2C_Idle 0071  
                    ?_I2C_Init 0071                      ?_I2C_Read 0071                      ?_I2C_Stop 0071  
              I2C_Write@Tvalue 0023                         saved_w 007E                      ??_sprintf 0031  
             ??_ClearRX_Buffer 0071        __end_of__initialization 07FC          __end_of_UART_Transmit 022A  
               __pcstackCOMMON 0071                   __pidataBANK1 01D5                     __end_of_Kd 0029  
                   __end_of_Ki 002D                     __end_of_Kp 0031         ??i1_UART_Transmit_Text 0072  
             _integrated_error 00A8                     ??_I2C_Idle 0020                     ??_I2C_Init 0020  
                   ??_I2C_Read 0023                     ??_I2C_Stop 0023            __size_of_HandleData 0008  
                   __pbssBANK0 006C                     __pbssBANK1 00A0                 I2C_Read@Rvalue 0024  
                   __pmaintext 02E0           __end_of_MPU6050_Init 04FF                ??_MPU6050_Write 0025  
                   __pintentry 0004                  ??_I2C_Restart 0023              _MPU6050_Readvalue 05D2  
           _UART_Transmit_Text 029A             ?_MPU6050_Readvalue 0071                        _SSPCON2 0091  
                   __stringtab 0011            ?_UART_Transmit_Text 0071            ??_MPU6050_Readvalue 003B  
                    _I2C_Start 01F5                      _I2C_Write 0260                        ___aldiv 064B  
                   _last_error 00A4                        ___awdiv 04FF                        ___lwdiv 03AE  
                      ___lwmod 0372           ??_UART_Transmit_Text 0021                        __ptext1 024B  
                      __ptext2 0448                        __ptext3 03F4                        __ptext4 064B  
                      __ptext5 05D2                        __ptext6 06E8                        __ptext7 0372  
                      __ptext8 03AE                        __ptext9 04FF      __end_of_MPU6050_Readvalue 064B  
                      _dpowers 0017                      _T2CONbits 0012               ___aldiv@dividend 0024  
                      _sprintf 06E8                        clrloop0 01E2            __end_of_I2C_Restart 021C  
         end_of_initialization 07FC                     ?_I2C_Start 0071                     ?_I2C_Write 0071  
               UART_Transmit@c 0020               ___aldiv@quotient 002B                   ??_HandleData 0075  
                    _UART_Init 024B                      _PWM1_Init 03F4       __size_ofi1_UART_Transmit 000C  
                    _PWM2_Init 0448                      _PORTDbits 0008                      _TRISCbits 0087  
                    _TRISDbits 0088              __size_of_I2C_Idle 006A              __size_of_I2C_Init 000F  
            __size_of_I2C_Read 0030              __size_of_I2C_Stop 000D             __end_of_HandleData 01E1  
                  _CCP1CONbits 0017                    _CCP2CONbits 001D          __size_of_MPU6050_Init 0063  
                    _RX_Buffer 00B8                     ?_UART_Init 0071                     ?_PWM1_Init 0071  
                   ?_PWM2_Init 0071                ClearRX_Buffer@i 0072     __size_of_MPU6050_Readvalue 0079  
                  _I2C_Restart 020F            start_initialization 07D2                   _MPU6050_Init 049C  
             MPU6050_Write@add 0025                    ??_I2C_Start 0023                    ??_I2C_Write 0023  
                  __pdataBANK1 00EA  __size_ofi1_UART_Transmit_Text 001E                    __pbssCOMMON 007B  
                    ___latbits 0002         __size_of_UART_Transmit 000E                  __pcstackBANK0 0020  
            ??i1_UART_Transmit 0071                      __end_of_K 0025                    sprintf@flag 0035  
                  sprintf@prec 0036                    I2C_Read@ACK 0025               ___lwdiv@dividend 0022  
      __size_of_ClearRX_Buffer 0012                       ?___aldiv 0020                       ?___awdiv 0020  
                     ?___lwdiv 0020                       ?___lwmod 0028          __end_of_MPU6050_Write 02E0  
                  ??_UART_Init 0020                    ??_PWM1_Init 002F                    ??_PWM2_Init 002F  
                    __pstrings 0011                       _I2C_Idle 0568                       _I2C_Init 022A  
                     _I2C_Read 030B                       _I2C_Stop 0202               ___lwdiv@quotient 0025  
                     ?_sprintf 002E                   HandleData@RX 0075                ___aldiv@divisor 0020  
            interrupt_function 0004                ___aldiv@counter 0029                      clear_ram0 01E1  
                _UART_Transmit 021C                       _PIR1bits 000C            UART_Transmit_Text@i 0022  
  __size_of_UART_Transmit_Text 0022                    __stringbase 0016               i1UART_Transmit@c 0071  
               ?_UART_Transmit 0071               __size_of___aldiv 009D        i1UART_Transmit_Text@str 0073  
             __size_of___awdiv 0069               __size_of___lwdiv 0046               __size_of___lwmod 003C  
           __end_of__stringtab 0017                   ?_I2C_Restart 0071                     sprintf@val 0037  
              ___lwdiv@divisor 0020                ___lwdiv@counter 0027                       __ptext10 029A  
                     __ptext11 021C                       __ptext20 022A                       __ptext12 020F  
                     __ptext21 033B                       __ptext13 030B                       __ptext22 01D9  
                     __ptext14 049C                       __ptext23 027C                       __ptext15 02BC  
                     __ptext24 01E9                       __ptext16 0260                       __ptext25 0239  
                     __ptext17 0202                       __ptext18 01F5                       __ptext19 0568  
             __size_of_sprintf 00EA                  __size_of_isr1 0037                  __size_of_main 002B  
               _ClearRX_Buffer 0239                       _rx_index 007B                i1_UART_Transmit 01E9  
                   _INTCONbits 000B                       intlevel1 0000                      sprintf@ap 0034  
                    sprintf@sp 0039               ___lwmod@dividend 002A                ??_UART_Transmit 0020  
 __end_ofi1_UART_Transmit_Text 029A         __end_of_ClearRX_Buffer 024B                      stringcode 0011  
        UART_Transmit_Text@str 0023                       sprintf@c 003A                       sprintf@f 002E  
              ___lwmod@divisor 0028                ___lwmod@counter 002D                       stringdir 0011  
                     stringtab 0011                   ___aldiv@sign 002A                    _SSPCON2bits 0091  
      MPU6050_Readvalue@buffer 003F                     _SSPCONbits 0014                ?_ClearRX_Buffer 0071  
      __end_ofi1_UART_Transmit 01F5  

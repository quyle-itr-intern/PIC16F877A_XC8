

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 04 18:53:17 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.32
    16                           ; Generated 02/02/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	strings
   172  0003                     __pstrings:
   173  0003                     stringtab:
   174  0003                     __stringtab:
   175  0003                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178  0003                     stringdir:
   179  0003  3000               	movlw	high stringdir
   180  0004  008A               	movwf	10
   181  0005  0804               	movf	4,w
   182  0006  0A84               	incf	4,f
   183  0007  0782               	addwf	2,f
   184  0008                     __stringbase:
   185  0008  3400               	retlw	0
   186  0009                     __end_of__stringtab:
   187  0009                     _Code7Seg:
   188  0009  34C0               	retlw	192
   189  000A  34F9               	retlw	249
   190  000B  34A4               	retlw	164
   191  000C  34B0               	retlw	176
   192  000D  3499               	retlw	153
   193  000E  3492               	retlw	146
   194  000F  3482               	retlw	130
   195  0010  34F8               	retlw	248
   196  0011  3480               	retlw	128
   197  0012  3490               	retlw	144
   198  0013                     __end_of_Code7Seg:
   199                           
   200                           	psect	nvBANK0
   201  0020                     __pnvBANK0:
   202  0020                     _donvi:
   203  0020                     	ds	2
   204  0022                     _chuc:
   205  0022                     	ds	2
   206  0024                     _tram:
   207  0024                     	ds	2
   208  0026                     _nghin:
   209  0026                     	ds	2
   210  0028                     _count:
   211  0028                     	ds	2
   212  0008                     _PORTDbits	set	8
   213  000E                     _TMR1L	set	14
   214  000F                     _TMR1H	set	15
   215  0010                     _T1CONbits	set	16
   216  0008                     _PORTD	set	8
   217  0006                     _PORTB	set	6
   218  0088                     _TRISD	set	136
   219  0086                     _TRISB	set	134
   220  0087                     _TRISCbits	set	135
   221  009F                     _ADCON1	set	159
   222                           
   223                           	psect	cinit
   224  07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07FC                     __initialization:
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2F04   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236  0070                     __pcstackCOMMON:
   237  0070                     ?_main:
   238  0070                     ?___lwmod:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ___lwmod@divisor:	
   242                           ; 2 bytes @ 0x0
   243                           
   244                           
   245                           ; 2 bytes @ 0x0
   246  0070                     	ds	2
   247  0072                     ___lwmod@dividend:
   248                           
   249                           ; 2 bytes @ 0x2
   250  0072                     	ds	2
   251  0074                     ??___lwmod:
   252                           
   253                           ; 1 bytes @ 0x4
   254  0074                     	ds	1
   255  0075                     ___lwmod@counter:
   256                           
   257                           ; 1 bytes @ 0x5
   258  0075                     	ds	1
   259  0076                     ?___lwdiv:
   260  0076                     ___lwdiv@divisor:	
   261                           ; 2 bytes @ 0x6
   262                           
   263                           
   264                           ; 2 bytes @ 0x6
   265  0076                     	ds	2
   266  0078                     ___lwdiv@dividend:
   267                           
   268                           ; 2 bytes @ 0x8
   269  0078                     	ds	2
   270  007A                     ??___lwdiv:
   271                           
   272                           ; 1 bytes @ 0xA
   273  007A                     	ds	1
   274  007B                     ___lwdiv@quotient:
   275                           
   276                           ; 2 bytes @ 0xB
   277  007B                     	ds	2
   278  007D                     ___lwdiv@counter:
   279                           
   280                           ; 1 bytes @ 0xD
   281  007D                     	ds	1
   282                           
   283                           	psect	cstackBANK0
   284  002A                     __pcstackBANK0:
   285  002A                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x0
   288  002A                     	ds	2
   289                           
   290                           	psect	maintext
   291  0704                     __pmaintext:	
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 27 in file "newmain.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : B00/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          0       2       0       0       0
   314 ;;      Totals:         0       2       0       0       0
   315 ;;Total ram usage:        2 bytes
   316 ;; Hardware stack levels required when called: 1
   317 ;; This function calls:
   318 ;;		___lwdiv
   319 ;;		___lwmod
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  0704                     _main:
   328  0704                     l796:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   331                           
   332                           
   333                           ;newmain.c: 28:        ADCON1 |= 0X07 ;
   334  0704  3007               	movlw	7
   335  0705  1283               	bcf	3,5	;RP0=0, select bank0
   336  0706  1303               	bcf	3,6	;RP1=0, select bank0
   337  0707  00AA               	movwf	??_main
   338  0708  082A               	movf	??_main,w
   339  0709  1683               	bsf	3,5	;RP0=1, select bank1
   340  070A  1303               	bcf	3,6	;RP1=0, select bank1
   341  070B  049F               	iorwf	31,f	;volatile
   342  070C                     l798:
   343                           
   344                           ;newmain.c: 29:        TRISCbits.TRISC0 = 1;
   345  070C  1407               	bsf	7,0	;volatile
   346  070D                     l800:
   347                           
   348                           ;newmain.c: 30:        TRISB =0X00;
   349  070D  0186               	clrf	6	;volatile
   350  070E                     l802:
   351                           
   352                           ;newmain.c: 31:        PORTB = 0X00;
   353  070E  1283               	bcf	3,5	;RP0=0, select bank0
   354  070F  1303               	bcf	3,6	;RP1=0, select bank0
   355  0710  0186               	clrf	6	;volatile
   356  0711                     l804:
   357                           
   358                           ;newmain.c: 32:        TRISD = 0X00;
   359  0711  1683               	bsf	3,5	;RP0=1, select bank1
   360  0712  1303               	bcf	3,6	;RP1=0, select bank1
   361  0713  0188               	clrf	8	;volatile
   362  0714                     l806:
   363                           
   364                           ;newmain.c: 33:        PORTD = 0X00;
   365  0714  1283               	bcf	3,5	;RP0=0, select bank0
   366  0715  1303               	bcf	3,6	;RP1=0, select bank0
   367  0716  0188               	clrf	8	;volatile
   368  0717                     l808:
   369                           
   370                           ;newmain.c: 36:        T1CONbits.TMR1CS = 1;
   371  0717  1490               	bsf	16,1	;volatile
   372  0718                     l810:
   373                           
   374                           ;newmain.c: 37:        T1CONbits.T1CKPS1 = T1CONbits.T1CKPS0 = 0;
   375  0718  1210               	bcf	16,4	;volatile
   376  0719  1290               	bcf	16,5	;volatile
   377  071A                     l812:
   378                           
   379                           ;newmain.c: 39:        TMR1H = TMR1L = 0 ;
   380  071A  018E               	clrf	14	;volatile
   381  071B  018F               	clrf	15	;volatile
   382  071C                     l814:
   383                           
   384                           ;newmain.c: 40:        T1CONbits.TMR1ON = 1 ;
   385  071C  1410               	bsf	16,0	;volatile
   386  071D                     l816:
   387                           
   388                           ;newmain.c: 43:        {;newmain.c: 44:                count = TMR1H;
   389  071D  080F               	movf	15,w	;volatile
   390  071E  00AA               	movwf	??_main
   391  071F  01AB               	clrf	??_main+1
   392  0720  082A               	movf	??_main,w
   393  0721  00A8               	movwf	_count
   394  0722  082B               	movf	??_main+1,w
   395  0723  00A9               	movwf	_count+1
   396  0724                     l818:
   397                           
   398                           ;newmain.c: 45:                count <<= 8 ;
   399  0724  3008               	movlw	8
   400  0725                     u285:
   401  0725  1003               	clrc
   402  0726  0DA8               	rlf	_count,f
   403  0727  0DA9               	rlf	_count+1,f
   404  0728  3EFF               	addlw	-1
   405  0729  1D03               	skipz
   406  072A  2F25               	goto	u285
   407  072B                     l820:
   408                           
   409                           ;newmain.c: 46:                count |= TMR1L;
   410  072B  080E               	movf	14,w	;volatile
   411  072C  00AA               	movwf	??_main
   412  072D  01AB               	clrf	??_main+1
   413  072E  082A               	movf	??_main,w
   414  072F  04A8               	iorwf	_count,f
   415  0730  082B               	movf	??_main+1,w
   416  0731  04A9               	iorwf	_count+1,f
   417  0732                     l822:
   418                           
   419                           ;newmain.c: 49:                nghin = count/1000;
   420  0732  30E8               	movlw	232
   421  0733  00F6               	movwf	___lwdiv@divisor
   422  0734  3003               	movlw	3
   423  0735  00F7               	movwf	___lwdiv@divisor+1
   424  0736  0829               	movf	_count+1,w
   425  0737  00F9               	movwf	___lwdiv@dividend+1
   426  0738  0828               	movf	_count,w
   427  0739  00F8               	movwf	___lwdiv@dividend
   428  073A  120A  118A  26C0  120A  118A  	fcall	___lwdiv
   429  073F  0877               	movf	?___lwdiv+1,w
   430  0740  1283               	bcf	3,5	;RP0=0, select bank0
   431  0741  1303               	bcf	3,6	;RP1=0, select bank0
   432  0742  00A7               	movwf	_nghin+1
   433  0743  0876               	movf	?___lwdiv,w
   434  0744  00A6               	movwf	_nghin
   435  0745                     l824:
   436                           
   437                           ;newmain.c: 50:                tram = (count%1000)/100;
   438  0745  3064               	movlw	100
   439  0746  00F6               	movwf	___lwdiv@divisor
   440  0747  3000               	movlw	0
   441  0748  00F7               	movwf	___lwdiv@divisor+1
   442  0749  0829               	movf	_count+1,w
   443  074A  00F3               	movwf	___lwmod@dividend+1
   444  074B  0828               	movf	_count,w
   445  074C  00F2               	movwf	___lwmod@dividend
   446  074D  30E8               	movlw	232
   447  074E  00F0               	movwf	___lwmod@divisor
   448  074F  3003               	movlw	3
   449  0750  00F1               	movwf	___lwmod@divisor+1
   450  0751  120A  118A  2686  120A  118A  	fcall	___lwmod
   451  0756  0871               	movf	?___lwmod+1,w
   452  0757  00F9               	movwf	___lwdiv@dividend+1
   453  0758  0870               	movf	?___lwmod,w
   454  0759  00F8               	movwf	___lwdiv@dividend
   455  075A  120A  118A  26C0  120A  118A  	fcall	___lwdiv
   456  075F  0877               	movf	?___lwdiv+1,w
   457  0760  1283               	bcf	3,5	;RP0=0, select bank0
   458  0761  1303               	bcf	3,6	;RP1=0, select bank0
   459  0762  00A5               	movwf	_tram+1
   460  0763  0876               	movf	?___lwdiv,w
   461  0764  00A4               	movwf	_tram
   462  0765                     l826:
   463                           
   464                           ;newmain.c: 51:                chuc = (count%100)/10;
   465  0765  300A               	movlw	10
   466  0766  00F6               	movwf	___lwdiv@divisor
   467  0767  3000               	movlw	0
   468  0768  00F7               	movwf	___lwdiv@divisor+1
   469  0769  0829               	movf	_count+1,w
   470  076A  00F3               	movwf	___lwmod@dividend+1
   471  076B  0828               	movf	_count,w
   472  076C  00F2               	movwf	___lwmod@dividend
   473  076D  3064               	movlw	100
   474  076E  00F0               	movwf	___lwmod@divisor
   475  076F  3000               	movlw	0
   476  0770  00F1               	movwf	___lwmod@divisor+1
   477  0771  120A  118A  2686  120A  118A  	fcall	___lwmod
   478  0776  0871               	movf	?___lwmod+1,w
   479  0777  00F9               	movwf	___lwdiv@dividend+1
   480  0778  0870               	movf	?___lwmod,w
   481  0779  00F8               	movwf	___lwdiv@dividend
   482  077A  120A  118A  26C0  120A  118A  	fcall	___lwdiv
   483  077F  0877               	movf	?___lwdiv+1,w
   484  0780  1283               	bcf	3,5	;RP0=0, select bank0
   485  0781  1303               	bcf	3,6	;RP1=0, select bank0
   486  0782  00A3               	movwf	_chuc+1
   487  0783  0876               	movf	?___lwdiv,w
   488  0784  00A2               	movwf	_chuc
   489  0785                     l828:
   490                           
   491                           ;newmain.c: 52:                donvi = count%10 ;
   492  0785  300A               	movlw	10
   493  0786  00F0               	movwf	___lwmod@divisor
   494  0787  3000               	movlw	0
   495  0788  00F1               	movwf	___lwmod@divisor+1
   496  0789  0829               	movf	_count+1,w
   497  078A  00F3               	movwf	___lwmod@dividend+1
   498  078B  0828               	movf	_count,w
   499  078C  00F2               	movwf	___lwmod@dividend
   500  078D  120A  118A  2686  120A  118A  	fcall	___lwmod
   501  0792  0871               	movf	?___lwmod+1,w
   502  0793  1283               	bcf	3,5	;RP0=0, select bank0
   503  0794  1303               	bcf	3,6	;RP1=0, select bank0
   504  0795  00A1               	movwf	_donvi+1
   505  0796  0870               	movf	?___lwmod,w
   506  0797  00A0               	movwf	_donvi
   507  0798                     l830:
   508                           
   509                           ;newmain.c: 54:                 PORTB = Code7Seg[donvi];
   510  0798  0820               	movf	_donvi,w
   511  0799  3E01               	addlw	low ((_Code7Seg-__stringbase)| (0+32768))
   512  079A  0084               	movwf	4
   513  079B  120A  118A  2003  120A  118A  	fcall	stringdir
   514  07A0  0086               	movwf	6	;volatile
   515  07A1                     l832:
   516                           
   517                           ;newmain.c: 55:                 PORTDbits.RD3 = 0;
   518  07A1  1188               	bcf	8,3	;volatile
   519  07A2                     l834:
   520                           
   521                           ;newmain.c: 56:                 _delay((unsigned long)((1)*(20000000/4000.0)));
   522  07A2  3007               	movlw	7
   523  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   524  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   525  07A5  00AB               	movwf	??_main+1
   526  07A6  307C               	movlw	124
   527  07A7  00AA               	movwf	??_main
   528  07A8                     u297:
   529  07A8  0BAA               	decfsz	??_main,f
   530  07A9  2FA8               	goto	u297
   531  07AA  0BAB               	decfsz	??_main+1,f
   532  07AB  2FA8               	goto	u297
   533  07AC  0000               	nop
   534  07AD                     l836:
   535                           
   536                           ;newmain.c: 57:                 PORTDbits.RD3 = 1;
   537  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   538  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   539  07AF  1588               	bsf	8,3	;volatile
   540  07B0                     l838:
   541                           
   542                           ;newmain.c: 59:                 PORTB = Code7Seg[chuc];
   543  07B0  0822               	movf	_chuc,w
   544  07B1  3E01               	addlw	low ((_Code7Seg-__stringbase)| (0+32768))
   545  07B2  0084               	movwf	4
   546  07B3  120A  118A  2003  120A  118A  	fcall	stringdir
   547  07B8  0086               	movwf	6	;volatile
   548  07B9                     l840:
   549                           
   550                           ;newmain.c: 60:                 PORTDbits.RD2 = 0;
   551  07B9  1108               	bcf	8,2	;volatile
   552  07BA                     l842:
   553                           
   554                           ;newmain.c: 61:                 _delay((unsigned long)((1)*(20000000/4000.0)));
   555  07BA  3007               	movlw	7
   556  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   557  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   558  07BD  00AB               	movwf	??_main+1
   559  07BE  307C               	movlw	124
   560  07BF  00AA               	movwf	??_main
   561  07C0                     u307:
   562  07C0  0BAA               	decfsz	??_main,f
   563  07C1  2FC0               	goto	u307
   564  07C2  0BAB               	decfsz	??_main+1,f
   565  07C3  2FC0               	goto	u307
   566  07C4  0000               	nop
   567  07C5                     l844:
   568                           
   569                           ;newmain.c: 62:                 PORTDbits.RD2 = 1;
   570  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   571  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   572  07C7  1508               	bsf	8,2	;volatile
   573  07C8                     l846:
   574                           
   575                           ;newmain.c: 64:                 PORTB = Code7Seg[tram];
   576  07C8  0824               	movf	_tram,w
   577  07C9  3E01               	addlw	low ((_Code7Seg-__stringbase)| (0+32768))
   578  07CA  0084               	movwf	4
   579  07CB  120A  118A  2003  120A  118A  	fcall	stringdir
   580  07D0  0086               	movwf	6	;volatile
   581  07D1                     l848:
   582                           
   583                           ;newmain.c: 65:                 PORTDbits.RD1 = 0;
   584  07D1  1088               	bcf	8,1	;volatile
   585  07D2                     l850:
   586                           
   587                           ;newmain.c: 66:                 _delay((unsigned long)((1)*(20000000/4000.0)));
   588  07D2  3007               	movlw	7
   589  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   590  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   591  07D5  00AB               	movwf	??_main+1
   592  07D6  307C               	movlw	124
   593  07D7  00AA               	movwf	??_main
   594  07D8                     u317:
   595  07D8  0BAA               	decfsz	??_main,f
   596  07D9  2FD8               	goto	u317
   597  07DA  0BAB               	decfsz	??_main+1,f
   598  07DB  2FD8               	goto	u317
   599  07DC  0000               	nop
   600  07DD                     l852:
   601                           
   602                           ;newmain.c: 67:                 PORTDbits.RD1 = 1;
   603  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   604  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   605  07DF  1488               	bsf	8,1	;volatile
   606  07E0                     l854:
   607                           
   608                           ;newmain.c: 69:                 PORTB = Code7Seg[nghin];
   609  07E0  0826               	movf	_nghin,w
   610  07E1  3E01               	addlw	low ((_Code7Seg-__stringbase)| (0+32768))
   611  07E2  0084               	movwf	4
   612  07E3  120A  118A  2003  120A  118A  	fcall	stringdir
   613  07E8  0086               	movwf	6	;volatile
   614  07E9                     l856:
   615                           
   616                           ;newmain.c: 70:                 PORTDbits.RD0 = 0;
   617  07E9  1008               	bcf	8,0	;volatile
   618  07EA                     l858:
   619                           
   620                           ;newmain.c: 71:                 _delay((unsigned long)((1)*(20000000/4000.0)));
   621  07EA  3007               	movlw	7
   622  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   623  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   624  07ED  00AB               	movwf	??_main+1
   625  07EE  307C               	movlw	124
   626  07EF  00AA               	movwf	??_main
   627  07F0                     u327:
   628  07F0  0BAA               	decfsz	??_main,f
   629  07F1  2FF0               	goto	u327
   630  07F2  0BAB               	decfsz	??_main+1,f
   631  07F3  2FF0               	goto	u327
   632  07F4  0000               	nop
   633  07F5                     l860:
   634                           
   635                           ;newmain.c: 72:                 PORTDbits.RD0 = 1;
   636  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   637  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   638  07F7  1408               	bsf	8,0	;volatile
   639  07F8  2F1D               	goto	l816
   640  07F9  120A  118A  2800   	ljmp	start
   641  07FC                     __end_of_main:
   642                           
   643                           	psect	text1
   644  0686                     __ptext1:	
   645 ;; *************** function ___lwmod *****************
   646 ;; Defined at:
   647 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  divisor         2    0[COMMON] unsigned int 
   650 ;;  dividend        2    2[COMMON] unsigned int 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  counter         1    5[COMMON] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  2    0[COMMON] unsigned int 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         4       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0
   664 ;;      Temps:          1       0       0       0       0
   665 ;;      Totals:         6       0       0       0       0
   666 ;;Total ram usage:        6 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function ___lwmod
   677  0686                     ___lwmod:
   678  0686                     l774:	
   679                           ;incstack = 0
   680                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   681                           
   682  0686  0870               	movf	___lwmod@divisor,w
   683  0687  0471               	iorwf	___lwmod@divisor+1,w
   684  0688  1903               	btfsc	3,2
   685  0689  2E8B               	goto	u221
   686  068A  2E8C               	goto	u220
   687  068B                     u221:
   688  068B  2EBB               	goto	l792
   689  068C                     u220:
   690  068C                     l776:
   691  068C  01F5               	clrf	___lwmod@counter
   692  068D  0AF5               	incf	___lwmod@counter,f
   693  068E  2E9A               	goto	l782
   694  068F                     l778:
   695  068F  3001               	movlw	1
   696  0690                     u235:
   697  0690  1003               	clrc
   698  0691  0DF0               	rlf	___lwmod@divisor,f
   699  0692  0DF1               	rlf	___lwmod@divisor+1,f
   700  0693  3EFF               	addlw	-1
   701  0694  1D03               	skipz
   702  0695  2E90               	goto	u235
   703  0696                     l780:
   704  0696  3001               	movlw	1
   705  0697  00F4               	movwf	??___lwmod
   706  0698  0874               	movf	??___lwmod,w
   707  0699  07F5               	addwf	___lwmod@counter,f
   708  069A                     l782:
   709  069A  1FF1               	btfss	___lwmod@divisor+1,7
   710  069B  2E9D               	goto	u241
   711  069C  2E9E               	goto	u240
   712  069D                     u241:
   713  069D  2E8F               	goto	l778
   714  069E                     u240:
   715  069E                     l784:
   716  069E  0871               	movf	___lwmod@divisor+1,w
   717  069F  0273               	subwf	___lwmod@dividend+1,w
   718  06A0  1D03               	skipz
   719  06A1  2EA4               	goto	u255
   720  06A2  0870               	movf	___lwmod@divisor,w
   721  06A3  0272               	subwf	___lwmod@dividend,w
   722  06A4                     u255:
   723  06A4  1C03               	skipc
   724  06A5  2EA7               	goto	u251
   725  06A6  2EA8               	goto	u250
   726  06A7                     u251:
   727  06A7  2EAE               	goto	l788
   728  06A8                     u250:
   729  06A8                     l786:
   730  06A8  0870               	movf	___lwmod@divisor,w
   731  06A9  02F2               	subwf	___lwmod@dividend,f
   732  06AA  0871               	movf	___lwmod@divisor+1,w
   733  06AB  1C03               	skipc
   734  06AC  03F3               	decf	___lwmod@dividend+1,f
   735  06AD  02F3               	subwf	___lwmod@dividend+1,f
   736  06AE                     l788:
   737  06AE  3001               	movlw	1
   738  06AF                     u265:
   739  06AF  1003               	clrc
   740  06B0  0CF1               	rrf	___lwmod@divisor+1,f
   741  06B1  0CF0               	rrf	___lwmod@divisor,f
   742  06B2  3EFF               	addlw	-1
   743  06B3  1D03               	skipz
   744  06B4  2EAF               	goto	u265
   745  06B5                     l790:
   746  06B5  3001               	movlw	1
   747  06B6  02F5               	subwf	___lwmod@counter,f
   748  06B7  1D03               	btfss	3,2
   749  06B8  2EBA               	goto	u271
   750  06B9  2EBB               	goto	u270
   751  06BA                     u271:
   752  06BA  2E9E               	goto	l784
   753  06BB                     u270:
   754  06BB                     l792:
   755  06BB  0873               	movf	___lwmod@dividend+1,w
   756  06BC  00F1               	movwf	?___lwmod+1
   757  06BD  0872               	movf	___lwmod@dividend,w
   758  06BE  00F0               	movwf	?___lwmod
   759  06BF                     l410:
   760  06BF  0008               	return
   761  06C0                     __end_of___lwmod:
   762                           
   763                           	psect	text2
   764  06C0                     __ptext2:	
   765 ;; *************** function ___lwdiv *****************
   766 ;; Defined at:
   767 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  divisor         2    6[COMMON] unsigned int 
   770 ;;  dividend        2    8[COMMON] unsigned int 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  quotient        2   11[COMMON] unsigned int 
   773 ;;  counter         1   13[COMMON] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  2    6[COMMON] unsigned int 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         4       0       0       0       0
   784 ;;      Locals:         3       0       0       0       0
   785 ;;      Temps:          1       0       0       0       0
   786 ;;      Totals:         8       0       0       0       0
   787 ;;Total ram usage:        8 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function ___lwdiv
   798  06C0                     ___lwdiv:
   799  06C0                     l748:	
   800                           ;incstack = 0
   801                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   802                           
   803  06C0  01FB               	clrf	___lwdiv@quotient
   804  06C1  01FC               	clrf	___lwdiv@quotient+1
   805  06C2                     l750:
   806  06C2  0876               	movf	___lwdiv@divisor,w
   807  06C3  0477               	iorwf	___lwdiv@divisor+1,w
   808  06C4  1903               	btfsc	3,2
   809  06C5  2EC7               	goto	u151
   810  06C6  2EC8               	goto	u150
   811  06C7                     u151:
   812  06C7  2EFF               	goto	l770
   813  06C8                     u150:
   814  06C8                     l752:
   815  06C8  01FD               	clrf	___lwdiv@counter
   816  06C9  0AFD               	incf	___lwdiv@counter,f
   817  06CA  2ED6               	goto	l758
   818  06CB                     l754:
   819  06CB  3001               	movlw	1
   820  06CC                     u165:
   821  06CC  1003               	clrc
   822  06CD  0DF6               	rlf	___lwdiv@divisor,f
   823  06CE  0DF7               	rlf	___lwdiv@divisor+1,f
   824  06CF  3EFF               	addlw	-1
   825  06D0  1D03               	skipz
   826  06D1  2ECC               	goto	u165
   827  06D2                     l756:
   828  06D2  3001               	movlw	1
   829  06D3  00FA               	movwf	??___lwdiv
   830  06D4  087A               	movf	??___lwdiv,w
   831  06D5  07FD               	addwf	___lwdiv@counter,f
   832  06D6                     l758:
   833  06D6  1FF7               	btfss	___lwdiv@divisor+1,7
   834  06D7  2ED9               	goto	u171
   835  06D8  2EDA               	goto	u170
   836  06D9                     u171:
   837  06D9  2ECB               	goto	l754
   838  06DA                     u170:
   839  06DA                     l760:
   840  06DA  3001               	movlw	1
   841  06DB                     u185:
   842  06DB  1003               	clrc
   843  06DC  0DFB               	rlf	___lwdiv@quotient,f
   844  06DD  0DFC               	rlf	___lwdiv@quotient+1,f
   845  06DE  3EFF               	addlw	-1
   846  06DF  1D03               	skipz
   847  06E0  2EDB               	goto	u185
   848  06E1  0877               	movf	___lwdiv@divisor+1,w
   849  06E2  0279               	subwf	___lwdiv@dividend+1,w
   850  06E3  1D03               	skipz
   851  06E4  2EE7               	goto	u195
   852  06E5  0876               	movf	___lwdiv@divisor,w
   853  06E6  0278               	subwf	___lwdiv@dividend,w
   854  06E7                     u195:
   855  06E7  1C03               	skipc
   856  06E8  2EEA               	goto	u191
   857  06E9  2EEB               	goto	u190
   858  06EA                     u191:
   859  06EA  2EF2               	goto	l766
   860  06EB                     u190:
   861  06EB                     l762:
   862  06EB  0876               	movf	___lwdiv@divisor,w
   863  06EC  02F8               	subwf	___lwdiv@dividend,f
   864  06ED  0877               	movf	___lwdiv@divisor+1,w
   865  06EE  1C03               	skipc
   866  06EF  03F9               	decf	___lwdiv@dividend+1,f
   867  06F0  02F9               	subwf	___lwdiv@dividend+1,f
   868  06F1                     l764:
   869  06F1  147B               	bsf	___lwdiv@quotient,0
   870  06F2                     l766:
   871  06F2  3001               	movlw	1
   872  06F3                     u205:
   873  06F3  1003               	clrc
   874  06F4  0CF7               	rrf	___lwdiv@divisor+1,f
   875  06F5  0CF6               	rrf	___lwdiv@divisor,f
   876  06F6  3EFF               	addlw	-1
   877  06F7  1D03               	skipz
   878  06F8  2EF3               	goto	u205
   879  06F9                     l768:
   880  06F9  3001               	movlw	1
   881  06FA  02FD               	subwf	___lwdiv@counter,f
   882  06FB  1D03               	btfss	3,2
   883  06FC  2EFE               	goto	u211
   884  06FD  2EFF               	goto	u210
   885  06FE                     u211:
   886  06FE  2EDA               	goto	l760
   887  06FF                     u210:
   888  06FF                     l770:
   889  06FF  087C               	movf	___lwdiv@quotient+1,w
   890  0700  00F7               	movwf	?___lwdiv+1
   891  0701  087B               	movf	___lwdiv@quotient,w
   892  0702  00F6               	movwf	?___lwdiv
   893  0703                     l400:
   894  0703  0008               	return
   895  0704                     __end_of___lwdiv:
   896  007E                     btemp	set	126	;btemp
   897  007E                     wtemp0	set	126
   898                           
   899                           	psect	config
   900                           
   901                           ;Config register CONFIG @ 0x2007
   902                           ;	Oscillator Selection bits
   903                           ;	FOSC = HS, HS oscillator
   904                           ;	Watchdog Timer Enable bit
   905                           ;	WDTE = OFF, WDT disabled
   906                           ;	Power-up Timer Enable bit
   907                           ;	PWRTE = OFF, PWRT disabled
   908                           ;	Brown-out Reset Enable bit
   909                           ;	BOREN = OFF, BOR disabled
   910                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   911                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   912                           ;	Data EEPROM Memory Code Protection bit
   913                           ;	CPD = OFF, Data EEPROM code protection off
   914                           ;	Flash Program Memory Write Enable bits
   915                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   916                           ;	In-Circuit Debugger Mode bit
   917                           ;	DEBUG = 0x1, unprogrammed default
   918                           ;	Flash Program Memory Code Protection bit
   919                           ;	CP = OFF, Code protection off
   920  2007                     	org	8199
   921  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1233
                                              0 BANK0      2     2      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 04 18:53:17 2022

                      pc 0002                       fsr 0004                      l400 0703  
                    l410 06BF                      l800 070D                      l810 0718  
                    l802 070E                      l820 072B                      l812 071A  
                    l804 0711                      l750 06C2                      l830 0798  
                    l822 0732                      l814 071C                      l806 0714  
                    l760 06DA                      l752 06C8                      l840 07B9  
                    l832 07A1                      l824 0745                      l816 071D  
                    l808 0717                      l762 06EB                      l754 06CB  
                    l770 06FF                      l850 07D2                      l842 07BA  
                    l834 07A2                      l826 0765                      l818 0724  
                    l764 06F1                      l756 06D2                      l748 06C0  
                    l780 0696                      l860 07F5                      l852 07DD  
                    l844 07C5                      l836 07AD                      l828 0785  
                    l766 06F2                      l758 06D6                      l790 06B5  
                    l782 069A                      l774 0686                      l854 07E0  
                    l846 07C8                      l838 07B0                      l768 06F9  
                    l784 069E                      l776 068C                      l792 06BB  
                    l856 07E9                      l848 07D1                      l786 06A8  
                    l778 068F                      l858 07EA                      l788 06AE  
                    l796 0704                      l798 070C                      u210 06FF  
                    u211 06FE                      u220 068C                      u205 06F3  
                    u221 068B                      u150 06C8                      u151 06C7  
                    u240 069E                      u241 069D                      u170 06DA  
                    u250 06A8                      u171 06D9                      u251 06A7  
                    u235 0690                      u307 07C0                      u165 06CC  
                    u317 07D8                      u190 06EB                      u270 06BB  
                    u191 06EA                      u271 06BA                      u255 06A4  
                    u327 07F0                      u185 06DB                      u265 06AF  
                    u195 06E7                      u285 0725                      u297 07A8  
                    fsr0 0004                     _chuc 0022                     _main 0704  
                   _tram 0024                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___lwdiv 0704          __end_of___lwmod 06C0  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _donvi 0020                    _count 0028                    _nghin 0026  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_Code7Seg 0013          __initialization 07FC             __end_of_main 07FC  
                 ??_main 002A                   _ADCON1 009F                ??___lwdiv 007A  
              ??___lwmod 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0704               __stringtab 0003                  ___lwdiv 06C0  
                ___lwmod 0686                  __ptext1 0686                  __ptext2 06C0  
              _T1CONbits 0010     end_of_initialization 07FC                _PORTDbits 0008  
              _TRISCbits 0087      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 002A                __pnvBANK0 0020         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                 ?___lwmod 0070                __pstrings 0003  
       ___lwdiv@quotient 007B              __stringbase 0008                 _Code7Seg 0009  
       __size_of___lwdiv 0044         __size_of___lwmod 003A       __end_of__stringtab 0009  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D            __size_of_main 00F8  
       ___lwmod@dividend 0072                stringcode 0003          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 0003                 stringtab 0003  

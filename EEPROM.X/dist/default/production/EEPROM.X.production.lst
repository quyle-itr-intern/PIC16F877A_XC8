

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 06 13:20:31 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.32
    17                           ; Generated 02/02/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0006                     _PORTB	set	6
   172  0006                     _PORTBbits	set	6
   173  0086                     _TRISB	set	134
   174  010C                     _EEDATA	set	268
   175  010D                     _EEADR	set	269
   176  018D                     _EECON2	set	397
   177  018C                     _EECON1bits	set	396
   178                           
   179                           	psect	cinit
   180  07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183  07FC                     __initialization:
   184  07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  07FC                     __end_of__initialization:
   188  07FC  0183               	clrf	3
   189  07FD  120A  118A  2F8E   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192  0070                     __pcstackCOMMON:
   193  0070                     ?_LCD_Cmd:
   194  0070                     ??_LCD_Cmd:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_LCD_Cmd_Init:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ??_LCD_Cmd_Init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_LCD_Init:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_LCD_Char:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ??_LCD_Char:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_Write_EEPROM:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_Read_EEPROM:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ??_Read_EEPROM:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_main:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     Write_EEPROM@Data:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229  0070                     	ds	1
   230  0071                     ??_Write_EEPROM:
   231  0071                     LCD_Cmd_Init@cmd:	
   232                           ; 1 bytes @ 0x1
   233                           
   234  0071                     Write_EEPROM@Address:	
   235                           ; 1 bytes @ 0x1
   236                           
   237  0071                     Read_EEPROM@Address:	
   238                           ; 1 bytes @ 0x1
   239                           
   240                           
   241                           ; 1 bytes @ 0x1
   242  0071                     	ds	1
   243  0072                     LCD_Cmd@cmd:
   244  0072                     LCD_Char@c:	
   245                           ; 1 bytes @ 0x2
   246                           
   247  0072                     Read_EEPROM@Rvalue:	
   248                           ; 1 bytes @ 0x2
   249                           
   250                           
   251                           ; 1 bytes @ 0x2
   252  0072                     	ds	1
   253  0073                     ??_LCD_Init:
   254                           
   255                           ; 1 bytes @ 0x3
   256  0073                     	ds	2
   257  0075                     ??_main:
   258                           
   259                           ; 1 bytes @ 0x5
   260  0075                     	ds	3
   261  0078                     main@data:
   262                           
   263                           ; 1 bytes @ 0x8
   264  0078                     	ds	1
   265                           
   266                           	psect	maintext
   267  078E                     __pmaintext:	
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 162 in file "newmain.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  data            1    8[COMMON] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, pclath, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         1       0       0       0       0
   289 ;;      Temps:          3       0       0       0       0
   290 ;;      Totals:         4       0       0       0       0
   291 ;;Total ram usage:        4 bytes
   292 ;; Hardware stack levels required when called: 2
   293 ;; This function calls:
   294 ;;		_LCD_Char
   295 ;;		_LCD_Init
   296 ;;		_Read_EEPROM
   297 ;;		_Write_EEPROM
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           
   304                           ;psect for function _main
   305  078E                     _main:
   306  078E                     l816:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   309                           
   310                           
   311                           ;newmain.c: 164:     LCD_Init();
   312  078E  120A  118A  27BD  120A  118A  	fcall	_LCD_Init
   313  0793                     l818:
   314  0793                     l820:
   315                           
   316                           ;newmain.c: 166:     Write_EEPROM(0x00, data);
   317  0793  304C               	movlw	76
   318  0794  00F5               	movwf	??_main
   319  0795  0875               	movf	??_main,w
   320  0796  00F0               	movwf	Write_EEPROM@Data
   321  0797  3000               	movlw	0
   322  0798  120A  118A  2727  120A  118A  	fcall	_Write_EEPROM
   323                           
   324                           ;newmain.c: 167:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   325  079D  301A               	movlw	26
   326  079E  00F7               	movwf	??_main+2
   327  079F  305E               	movlw	94
   328  07A0  00F6               	movwf	??_main+1
   329  07A1  306E               	movlw	110
   330  07A2  00F5               	movwf	??_main
   331  07A3                     u107:
   332  07A3  0BF5               	decfsz	??_main,f
   333  07A4  2FA3               	goto	u107
   334  07A5  0BF6               	decfsz	??_main+1,f
   335  07A6  2FA3               	goto	u107
   336  07A7  0BF7               	decfsz	??_main+2,f
   337  07A8  2FA3               	goto	u107
   338  07A9  0000               	nop
   339  07AA                     l822:
   340                           
   341                           ;newmain.c: 169:     data = Read_EEPROM(0x00);
   342  07AA  3000               	movlw	0
   343  07AB  120A  118A  2716  120A  118A  	fcall	_Read_EEPROM
   344  07B0  00F5               	movwf	??_main
   345  07B1  0875               	movf	??_main,w
   346  07B2  00F8               	movwf	main@data
   347  07B3                     l824:
   348                           
   349                           ;newmain.c: 170:     LCD_Char(data);
   350  07B3  0878               	movf	main@data,w
   351  07B4  120A  118A  273F  120A  118A  	fcall	_LCD_Char
   352  07B9                     l71:	
   353                           ;newmain.c: 171:     while(1)
   354                           
   355  07B9                     l72:	
   356                           ;newmain.c: 172:     {;newmain.c: 174:     }
   357                           
   358  07B9  2FB9               	goto	l71
   359  07BA  120A  118A  2800   	ljmp	start
   360  07BD                     __end_of_main:
   361                           
   362                           	psect	text1
   363  0727                     __ptext1:	
   364 ;; *************** function _Write_EEPROM *****************
   365 ;; Defined at:
   366 ;;		line 135 in file "newmain.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  Address         1    wreg     unsigned char 
   369 ;;  Data            1    0[COMMON] unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  Address         1    1[COMMON] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         1       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         2       0       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _Write_EEPROM
   396  0727                     _Write_EEPROM:
   397                           
   398                           ;incstack = 0
   399                           ; Regs used in _Write_EEPROM: [wreg]
   400                           ;Write_EEPROM@Address stored from wreg
   401  0727  00F1               	movwf	Write_EEPROM@Address
   402  0728                     l804:
   403  0728                     l60:	
   404                           ;newmain.c: 135: void Write_EEPROM(unsigned char Address, unsigned char Data);newmain.c:
      +                           136: {;newmain.c: 137:     while(EECON1bits.WR == 1);
   405                           
   406  0728  1683               	bsf	3,5	;RP0=1, select bank3
   407  0729  1703               	bsf	3,6	;RP1=1, select bank3
   408  072A  188C               	btfsc	12,1	;volsfr
   409  072B  2F2D               	goto	u91
   410  072C  2F2E               	goto	u90
   411  072D                     u91:
   412  072D  2F28               	goto	l60
   413  072E                     u90:
   414  072E                     l806:
   415                           
   416                           ;newmain.c: 138:     EEADR = Address;
   417  072E  0871               	movf	Write_EEPROM@Address,w
   418  072F  1283               	bcf	3,5	;RP0=0, select bank2
   419  0730  1703               	bsf	3,6	;RP1=1, select bank2
   420  0731  008D               	movwf	13	;volatile
   421                           
   422                           ;newmain.c: 139:     EEDATA = Data;
   423  0732  0870               	movf	Write_EEPROM@Data,w
   424  0733  008C               	movwf	12	;volatile
   425  0734                     l808:
   426                           
   427                           ;newmain.c: 140:     EECON1bits.EEPGD = 0;
   428  0734  1683               	bsf	3,5	;RP0=1, select bank3
   429  0735  1703               	bsf	3,6	;RP1=1, select bank3
   430  0736  138C               	bcf	12,7	;volsfr
   431  0737                     l810:
   432                           
   433                           ;newmain.c: 141:     EECON1bits.WREN = 1;
   434  0737  150C               	bsf	12,2	;volsfr
   435                           
   436                           ;newmain.c: 143:     EECON2 = 0x55;
   437  0738  3055               	movlw	85
   438  0739  008D               	movwf	13	;volsfr
   439                           
   440                           ;newmain.c: 144:     EECON2 = 0xAA;
   441  073A  30AA               	movlw	170
   442  073B  008D               	movwf	13	;volsfr
   443  073C                     l812:
   444                           
   445                           ;newmain.c: 146:     EECON1bits.WR = 1;
   446  073C  148C               	bsf	12,1	;volsfr
   447  073D                     l814:
   448                           
   449                           ;newmain.c: 147:     EECON1bits.WREN = 0;
   450  073D  110C               	bcf	12,2	;volsfr
   451  073E                     l63:
   452  073E  0008               	return
   453  073F                     __end_of_Write_EEPROM:
   454                           
   455                           	psect	text2
   456  0716                     __ptext2:	
   457 ;; *************** function _Read_EEPROM *****************
   458 ;; Defined at:
   459 ;;		line 150 in file "newmain.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  Address         1    wreg     unsigned char 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  Address         1    1[COMMON] unsigned char 
   464 ;;  Rvalue          1    2[COMMON] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      unsigned char 
   467 ;; Registers used:
   468 ;;		wreg
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0
   476 ;;      Temps:          1       0       0       0       0
   477 ;;      Totals:         3       0       0       0       0
   478 ;;Total ram usage:        3 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _Read_EEPROM
   489  0716                     _Read_EEPROM:
   490                           
   491                           ;incstack = 0
   492                           ; Regs used in _Read_EEPROM: [wreg]
   493                           ;Read_EEPROM@Address stored from wreg
   494  0716  00F1               	movwf	Read_EEPROM@Address
   495  0717                     l752:
   496                           
   497                           ;newmain.c: 150: unsigned char Read_EEPROM(unsigned char Address);newmain.c: 151: {;newm
      +                          ain.c: 152:     unsigned char Rvalue;;newmain.c: 153:     EEADR = Address;
   498  0717  0871               	movf	Read_EEPROM@Address,w
   499  0718  1283               	bcf	3,5	;RP0=0, select bank2
   500  0719  1703               	bsf	3,6	;RP1=1, select bank2
   501  071A  008D               	movwf	13	;volatile
   502  071B                     l754:
   503                           
   504                           ;newmain.c: 154:     EECON1bits.EEPGD = 0;
   505  071B  1683               	bsf	3,5	;RP0=1, select bank3
   506  071C  1703               	bsf	3,6	;RP1=1, select bank3
   507  071D  138C               	bcf	12,7	;volsfr
   508  071E                     l756:
   509                           
   510                           ;newmain.c: 155:     EECON1bits.RD = 1;
   511  071E  140C               	bsf	12,0	;volsfr
   512                           
   513                           ;newmain.c: 156:     Rvalue = EEDATA;
   514  071F  1283               	bcf	3,5	;RP0=0, select bank2
   515  0720  1703               	bsf	3,6	;RP1=1, select bank2
   516  0721  080C               	movf	12,w	;volatile
   517  0722  00F0               	movwf	??_Read_EEPROM
   518  0723  0870               	movf	??_Read_EEPROM,w
   519  0724  00F2               	movwf	Read_EEPROM@Rvalue
   520                           
   521                           ;newmain.c: 157:     return Rvalue;
   522  0725  0872               	movf	Read_EEPROM@Rvalue,w
   523  0726                     l66:
   524  0726  0008               	return
   525  0727                     __end_of_Read_EEPROM:
   526                           
   527                           	psect	text3
   528  07BD                     __ptext3:	
   529 ;; *************** function _LCD_Init *****************
   530 ;; Defined at:
   531 ;;		line 60 in file "newmain.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0
   548 ;;      Totals:         2       0       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 1
   552 ;; This function calls:
   553 ;;		_LCD_Cmd
   554 ;;		_LCD_Cmd_Init
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _LCD_Init
   562  07BD                     _LCD_Init:
   563  07BD                     l696:	
   564                           ;incstack = 0
   565                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   566                           
   567                           
   568                           ;newmain.c: 62:     TRISB = 0;
   569  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   570  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   571  07BF  0186               	clrf	6	;volatile
   572  07C0                     l698:
   573                           
   574                           ;newmain.c: 65:  LCD_Cmd_Init(0x30);
   575  07C0  3030               	movlw	48
   576  07C1  120A  118A  2707  120A  118A  	fcall	_LCD_Cmd_Init
   577  07C6                     l700:
   578                           
   579                           ;newmain.c: 66:  _delay((unsigned long)((5)*(20000000/4000.0)));
   580  07C6  3021               	movlw	33
   581  07C7  00F4               	movwf	??_LCD_Init+1
   582  07C8  3076               	movlw	118
   583  07C9  00F3               	movwf	??_LCD_Init
   584  07CA                     u117:
   585  07CA  0BF3               	decfsz	??_LCD_Init,f
   586  07CB  2FCA               	goto	u117
   587  07CC  0BF4               	decfsz	??_LCD_Init+1,f
   588  07CD  2FCA               	goto	u117
   589  07CE  0000               	nop
   590  07CF                     l702:
   591                           
   592                           ;newmain.c: 67:  LCD_Cmd_Init(0x30);
   593  07CF  3030               	movlw	48
   594  07D0  120A  118A  2707  120A  118A  	fcall	_LCD_Cmd_Init
   595  07D5                     l704:
   596                           
   597                           ;newmain.c: 68:  _delay((unsigned long)((1)*(20000000/4000.0)));
   598  07D5  3007               	movlw	7
   599  07D6  00F4               	movwf	??_LCD_Init+1
   600  07D7  307D               	movlw	125
   601  07D8  00F3               	movwf	??_LCD_Init
   602  07D9                     u127:
   603  07D9  0BF3               	decfsz	??_LCD_Init,f
   604  07DA  2FD9               	goto	u127
   605  07DB  0BF4               	decfsz	??_LCD_Init+1,f
   606  07DC  2FD9               	goto	u127
   607  07DD                     l706:
   608                           
   609                           ;newmain.c: 69:  LCD_Cmd_Init(0x30);
   610  07DD  3030               	movlw	48
   611  07DE  120A  118A  2707  120A  118A  	fcall	_LCD_Cmd_Init
   612  07E3                     l708:
   613                           
   614                           ;newmain.c: 73:     LCD_Cmd_Init(0x28);
   615  07E3  3028               	movlw	40
   616  07E4  120A  118A  2707  120A  118A  	fcall	_LCD_Cmd_Init
   617  07E9                     l710:
   618                           
   619                           ;newmain.c: 76:  LCD_Cmd(0x28);
   620  07E9  3028               	movlw	40
   621  07EA  120A  118A  275F  120A  118A  	fcall	_LCD_Cmd
   622  07EF                     l712:
   623                           
   624                           ;newmain.c: 87:  LCD_Cmd(0x01);
   625  07EF  3001               	movlw	1
   626  07F0  120A  118A  275F  120A  118A  	fcall	_LCD_Cmd
   627  07F5                     l714:
   628                           
   629                           ;newmain.c: 93:     LCD_Cmd(0x0E);
   630  07F5  300E               	movlw	14
   631  07F6  120A  118A  275F  120A  118A  	fcall	_LCD_Cmd
   632  07FB                     l27:
   633  07FB  0008               	return
   634  07FC                     __end_of_LCD_Init:
   635                           
   636                           	psect	text4
   637  0707                     __ptext4:	
   638 ;; *************** function _LCD_Cmd_Init *****************
   639 ;; Defined at:
   640 ;;		line 52 in file "newmain.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  cmd             1    wreg     unsigned char 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  cmd             1    1[COMMON] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         0       0       0       0       0
   655 ;;      Locals:         1       0       0       0       0
   656 ;;      Temps:          1       0       0       0       0
   657 ;;      Totals:         2       0       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_LCD_Init
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _LCD_Cmd_Init
   669  0707                     _LCD_Cmd_Init:
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _LCD_Cmd_Init: [wreg+status,2]
   673                           ;LCD_Cmd_Init@cmd stored from wreg
   674  0707  00F1               	movwf	LCD_Cmd_Init@cmd
   675  0708                     l686:
   676                           
   677                           ;newmain.c: 52: void LCD_Cmd_Init(unsigned char cmd);newmain.c: 53: {;newmain.c: 54:  PO
      +                          RTBbits.RB0 = 0;
   678  0708  1283               	bcf	3,5	;RP0=0, select bank0
   679  0709  1303               	bcf	3,6	;RP1=0, select bank0
   680  070A  1006               	bcf	6,0	;volatile
   681  070B                     l688:
   682                           
   683                           ;newmain.c: 55:  PORTB = cmd & 0xF0 ;
   684  070B  0871               	movf	LCD_Cmd_Init@cmd,w
   685  070C  39F0               	andlw	240
   686  070D  0086               	movwf	6	;volatile
   687  070E                     l690:
   688                           
   689                           ;newmain.c: 56:  PORTBbits.RB1 = 1;
   690  070E  1486               	bsf	6,1	;volatile
   691  070F                     l692:
   692                           
   693                           ;newmain.c: 57:  PORTBbits.RB1 = 0;
   694  070F  1086               	bcf	6,1	;volatile
   695  0710                     l694:
   696                           
   697                           ;newmain.c: 58:     _delay((unsigned long)((40)*(20000000/4000000.0)));
   698  0710  3042               	movlw	66
   699  0711  00F0               	movwf	??_LCD_Cmd_Init
   700  0712                     u137:
   701  0712  0BF0               	decfsz	??_LCD_Cmd_Init,f
   702  0713  2F12               	goto	u137
   703  0714  0000               	nop
   704  0715                     l24:
   705  0715  0008               	return
   706  0716                     __end_of_LCD_Cmd_Init:
   707                           
   708                           	psect	text5
   709  075F                     __ptext5:	
   710 ;; *************** function _LCD_Cmd *****************
   711 ;; Defined at:
   712 ;;		line 34 in file "newmain.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  cmd             1    wreg     unsigned char 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  cmd             1    2[COMMON] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         1       0       0       0       0
   728 ;;      Temps:          2       0       0       0       0
   729 ;;      Totals:         3       0       0       0       0
   730 ;;Total ram usage:        3 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_LCD_Init
   736 ;;		_LCD_GotoCursor
   737 ;;		_LCD_GotoCursor_Char
   738 ;;		_LCD_GotoCursor_String
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _LCD_Cmd
   744  075F                     _LCD_Cmd:
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
   748                           ;LCD_Cmd@cmd stored from wreg
   749  075F  00F2               	movwf	LCD_Cmd@cmd
   750  0760                     l666:
   751                           
   752                           ;newmain.c: 34: void LCD_Cmd(unsigned char cmd);newmain.c: 35: {;newmain.c: 36:  PORTBbi
      +                          ts.RB0 = 0;
   753  0760  1283               	bcf	3,5	;RP0=0, select bank0
   754  0761  1303               	bcf	3,6	;RP1=0, select bank0
   755  0762  1006               	bcf	6,0	;volatile
   756  0763                     l668:
   757                           
   758                           ;newmain.c: 37:  PORTB = cmd & 0xF0;
   759  0763  0872               	movf	LCD_Cmd@cmd,w
   760  0764  39F0               	andlw	240
   761  0765  0086               	movwf	6	;volatile
   762  0766                     l670:
   763                           
   764                           ;newmain.c: 38:  PORTBbits.RB1 = 1;
   765  0766  1486               	bsf	6,1	;volatile
   766  0767                     l672:
   767                           
   768                           ;newmain.c: 39:  PORTBbits.RB1 = 0;
   769  0767  1086               	bcf	6,1	;volatile
   770  0768                     l674:
   771                           
   772                           ;newmain.c: 40:     PORTB = cmd << 4;
   773  0768  0872               	movf	LCD_Cmd@cmd,w
   774  0769  00F0               	movwf	??_LCD_Cmd
   775  076A  3003               	movlw	3
   776  076B                     u15:
   777  076B  1003               	clrc
   778  076C  0DF0               	rlf	??_LCD_Cmd,f
   779  076D  3EFF               	addlw	-1
   780  076E  1D03               	skipz
   781  076F  2F6B               	goto	u15
   782  0770  1003               	clrc
   783  0771  0D70               	rlf	??_LCD_Cmd,w
   784  0772  0086               	movwf	6	;volatile
   785  0773                     l676:
   786                           
   787                           ;newmain.c: 41:  PORTBbits.RB1 = 1;
   788  0773  1486               	bsf	6,1	;volatile
   789  0774                     l678:
   790                           
   791                           ;newmain.c: 42:  PORTBbits.RB1 = 0;
   792  0774  1086               	bcf	6,1	;volatile
   793  0775                     l680:
   794                           
   795                           ;newmain.c: 43:  if( cmd <= 0x02)
   796  0775  3003               	movlw	3
   797  0776  0272               	subwf	LCD_Cmd@cmd,w
   798  0777  1803               	skipnc
   799  0778  2F7A               	goto	u21
   800  0779  2F7B               	goto	u20
   801  077A                     u21:
   802  077A  2F85               	goto	l684
   803  077B                     u20:
   804  077B                     l682:
   805                           
   806                           ;newmain.c: 44:  {;newmain.c: 45:   _delay((unsigned long)((2)*(20000000/4000.0)));
   807  077B  300D               	movlw	13
   808  077C  00F1               	movwf	??_LCD_Cmd+1
   809  077D  30FB               	movlw	251
   810  077E  00F0               	movwf	??_LCD_Cmd
   811  077F                     u147:
   812  077F  0BF0               	decfsz	??_LCD_Cmd,f
   813  0780  2F7F               	goto	u147
   814  0781  0BF1               	decfsz	??_LCD_Cmd+1,f
   815  0782  2F7F               	goto	u147
   816  0783  2F84               	nop2
   817                           
   818                           ;newmain.c: 46:  }
   819  0784  2F8D               	goto	l21
   820  0785                     l684:
   821                           
   822                           ;newmain.c: 48:  {;newmain.c: 49:   _delay((unsigned long)((1)*(20000000/4000.0)));
   823  0785  3007               	movlw	7
   824  0786  00F1               	movwf	??_LCD_Cmd+1
   825  0787  307D               	movlw	125
   826  0788  00F0               	movwf	??_LCD_Cmd
   827  0789                     u157:
   828  0789  0BF0               	decfsz	??_LCD_Cmd,f
   829  078A  2F89               	goto	u157
   830  078B  0BF1               	decfsz	??_LCD_Cmd+1,f
   831  078C  2F89               	goto	u157
   832  078D                     l21:
   833  078D  0008               	return
   834  078E                     __end_of_LCD_Cmd:
   835                           
   836                           	psect	text6
   837  073F                     __ptext6:	
   838 ;; *************** function _LCD_Char *****************
   839 ;; Defined at:
   840 ;;		line 95 in file "newmain.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  c               1    wreg     unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  c               1    2[COMMON] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         1       0       0       0       0
   856 ;;      Temps:          2       0       0       0       0
   857 ;;      Totals:         3       0       0       0       0
   858 ;;Total ram usage:        3 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_main
   864 ;;		_LCD_String
   865 ;;		_LCD_GotoCursor_Char
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _LCD_Char
   871  073F                     _LCD_Char:
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
   875                           ;LCD_Char@c stored from wreg
   876  073F  00F2               	movwf	LCD_Char@c
   877  0740                     l716:
   878                           
   879                           ;newmain.c: 95: void LCD_Char(unsigned char c);newmain.c: 96: {;newmain.c: 97:  PORTBbit
      +                          s.RB0 = 1;
   880  0740  1283               	bcf	3,5	;RP0=0, select bank0
   881  0741  1303               	bcf	3,6	;RP1=0, select bank0
   882  0742  1406               	bsf	6,0	;volatile
   883  0743                     l718:
   884                           
   885                           ;newmain.c: 98:  PORTB = c | 0x01;
   886  0743  0872               	movf	LCD_Char@c,w
   887  0744  3801               	iorlw	1
   888  0745  0086               	movwf	6	;volatile
   889  0746                     l720:
   890                           
   891                           ;newmain.c: 99:  PORTBbits.RB1 = 1;
   892  0746  1486               	bsf	6,1	;volatile
   893  0747                     l722:
   894                           
   895                           ;newmain.c: 100:  PORTBbits.RB1 = 0;
   896  0747  1086               	bcf	6,1	;volatile
   897  0748                     l724:
   898                           
   899                           ;newmain.c: 101:     PORTB = (c << 4) | 0x01;
   900  0748  0872               	movf	LCD_Char@c,w
   901  0749  00F0               	movwf	??_LCD_Char
   902  074A  3003               	movlw	3
   903  074B                     u35:
   904  074B  1003               	clrc
   905  074C  0DF0               	rlf	??_LCD_Char,f
   906  074D  3EFF               	addlw	-1
   907  074E  1D03               	skipz
   908  074F  2F4B               	goto	u35
   909  0750  1003               	clrc
   910  0751  0D70               	rlf	??_LCD_Char,w
   911  0752  3801               	iorlw	1
   912  0753  0086               	movwf	6	;volatile
   913  0754                     l726:
   914                           
   915                           ;newmain.c: 102:  PORTBbits.RB1 = 1;
   916  0754  1486               	bsf	6,1	;volatile
   917  0755                     l728:
   918                           
   919                           ;newmain.c: 103:  PORTBbits.RB1 = 0;
   920  0755  1086               	bcf	6,1	;volatile
   921  0756                     l730:
   922                           
   923                           ;newmain.c: 104:  _delay((unsigned long)((1)*(20000000/4000.0)));
   924  0756  3007               	movlw	7
   925  0757  00F1               	movwf	??_LCD_Char+1
   926  0758  307D               	movlw	125
   927  0759  00F0               	movwf	??_LCD_Char
   928  075A                     u167:
   929  075A  0BF0               	decfsz	??_LCD_Char,f
   930  075B  2F5A               	goto	u167
   931  075C  0BF1               	decfsz	??_LCD_Char+1,f
   932  075D  2F5A               	goto	u167
   933  075E                     l30:
   934  075E  0008               	return
   935  075F                     __end_of_LCD_Char:
   936  007E                     btemp	set	126	;btemp
   937  007E                     wtemp0	set	126
   938                           
   939                           	psect	config
   940                           
   941                           ;Config register CONFIG @ 0x2007
   942                           ;	Oscillator Selection bits
   943                           ;	FOSC = HS, HS oscillator
   944                           ;	Watchdog Timer Enable bit
   945                           ;	WDTE = OFF, WDT disabled
   946                           ;	Power-up Timer Enable bit
   947                           ;	PWRTE = OFF, PWRT disabled
   948                           ;	Brown-out Reset Enable bit
   949                           ;	BOREN = OFF, BOR disabled
   950                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   951                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   952                           ;	Data EEPROM Memory Code Protection bit
   953                           ;	CPD = OFF, Data EEPROM code protection off
   954                           ;	Flash Program Memory Write Enable bits
   955                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   956                           ;	In-Circuit Debugger Mode bit
   957                           ;	DEBUG = 0x1, unprogrammed default
   958                           ;	Flash Program Memory Code Protection bit
   959                           ;	CP = OFF, Code protection off
   960  2007                     	org	8199
   961  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_Init->_LCD_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     286
                                              5 COMMON     4     4      0
                           _LCD_Char
                           _LCD_Init
                        _Read_EEPROM
                       _Write_EEPROM
 ---------------------------------------------------------------------------------
 (1) _Write_EEPROM                                         2     1      1     120
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read_EEPROM                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      60
                                              3 COMMON     2     2      0
                            _LCD_Cmd
                       _LCD_Cmd_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd_Init                                         2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Init
     _LCD_Cmd
     _LCD_Cmd_Init
   _Read_EEPROM
   _Write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 06 13:20:31 2022

          ?_LCD_Cmd_Init 0070                       l21 078D                       l30 075E  
                     l24 0715                       l27 07FB                       l60 0728  
                     l63 073E                       l71 07B9                       l72 07B9  
                     l66 0726                       u20 077B                       u21 077A  
                     u15 076B                       u35 074B                       u90 072E  
                     u91 072D                      l700 07C6                      l710 07E9  
                    l702 07CF                      l720 0746                      l712 07EF  
                    l704 07D5                      l730 0756                      l722 0747  
                    l714 07F5                      l706 07DD                      l810 0737  
                    l724 0748                      l716 0740                      l708 07E3  
                    l812 073C                      l804 0728                      l820 0793  
                    l726 0754                      l718 0743                      l670 0766  
                    l814 073D                      l806 072E                      l822 07AA  
                    l728 0755                      l680 0775                      l672 0767  
                    l752 0717                      l808 0734                      l824 07B3  
                    l816 078E                      l682 077B                      l674 0768  
                    l666 0760                      l690 070E                      l754 071B  
                    l818 0793                      l684 0785                      l676 0773  
                    l668 0763                      l692 070F                      l756 071E  
                    l678 0774                      l694 0710                      l686 0708  
                    l688 070B                      l696 07BD                      l698 07C0  
                    u107 07A3                      u117 07CA                      u127 07D9  
                    u137 0712                      u147 077F                      u157 0789  
                    u167 075A    __size_of_Write_EEPROM 0018          __end_of_LCD_Cmd 078E  
                   _main 078E                     btemp 007E            ??_Read_EEPROM 0070  
                   start 0000           ??_LCD_Cmd_Init 0070      Write_EEPROM@Address 0071  
       __end_of_LCD_Char 075F             _Write_EEPROM 0727         __end_of_LCD_Init 07FC  
                  ?_main 0070                    _EEADR 010D                    _PORTB 0006  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07BD      __end_of_Read_EEPROM 0727  
                 ??_main 0075                ??_LCD_Cmd 0070                   _EEDATA 010C  
                 _EECON2 018D     __end_of_LCD_Cmd_Init 0716                ?_LCD_Char 0070  
__end_of__initialization 07FC                ?_LCD_Init 0070              _Read_EEPROM 0716  
              LCD_Char@c 0072           __pcstackCOMMON 0070        Read_EEPROM@Rvalue 0072  
             ??_LCD_Char 0070               ??_LCD_Init 0073               __pmaintext 078E  
                _LCD_Cmd 075F                  __ptext1 0727                  __ptext2 0716  
                __ptext3 07BD                  __ptext4 0707                  __ptext5 075F  
                __ptext6 073F    __size_of_LCD_Cmd_Init 000F     end_of_initialization 07FC  
           _LCD_Cmd_Init 0707                _PORTBbits 0006               LCD_Cmd@cmd 0072  
           ?_Read_EEPROM 0070        __size_of_LCD_Char 0020        __size_of_LCD_Init 003F  
    start_initialization 07FC       Read_EEPROM@Address 0071            ?_Write_EEPROM 0070  
               ?_LCD_Cmd 0070                ___latbits 0002         Write_EEPROM@Data 0070  
         ??_Write_EEPROM 0071          LCD_Cmd_Init@cmd 0071                 _LCD_Char 073F  
               _LCD_Init 07BD     __size_of_Read_EEPROM 0011         __size_of_LCD_Cmd 002F  
             _EECON1bits 018C     __end_of_Write_EEPROM 073F            __size_of_main 002F  
               main@data 0078  

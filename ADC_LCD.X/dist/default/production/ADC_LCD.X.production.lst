

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 01 18:54:33 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 04/07/2022 GMT
    20                           ; 
    21                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     001E                     _ADRESH	set	30
   174     001F                     _ADCON0	set	31
   175     0007                     _PORTC	set	7
   176     0006                     _PORTBbits	set	6
   177     00FA                     _GO_nDONE	set	250
   178     009E                     _ADRESL	set	158
   179     009F                     _ADCON1	set	159
   180     0085                     _TRISA	set	133
   181     0087                     _TRISC	set	135
   182     0086                     _TRISBbits	set	134
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2F2F   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_LCD_Cmd:
   199     0070                     ??_LCD_Cmd:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_LCD_Cmd_Init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_LCD_Cmd_Init:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_LCD_Init:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_LCD_Char:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ??_LCD_Char:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ?_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ?___awdiv:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ___awdiv@divisor:	
   224                           ; 2 bytes @ 0x0
   225                           
   226                           
   227                           ; 2 bytes @ 0x0
   228     0070                     	ds	1
   229     0071                     LCD_Cmd_Init@cmd:
   230                           
   231                           ; 1 bytes @ 0x1
   232     0071                     	ds	1
   233     0072                     LCD_Cmd@cmd:
   234     0072                     LCD_Char@c:	
   235                           ; 1 bytes @ 0x2
   236                           
   237     0072                     ___awdiv@dividend:	
   238                           ; 1 bytes @ 0x2
   239                           
   240                           
   241                           ; 2 bytes @ 0x2
   242     0072                     	ds	1
   243     0073                     ??_LCD_Init:
   244     0073                     ?_LCD_GotoCursor:	
   245                           ; 1 bytes @ 0x3
   246                           
   247     0073                     LCD_GotoCursor@col:	
   248                           ; 1 bytes @ 0x3
   249                           
   250                           
   251                           ; 1 bytes @ 0x3
   252     0073                     	ds	1
   253     0074                     ??_LCD_GotoCursor:
   254     0074                     ??___awdiv:	
   255                           ; 1 bytes @ 0x4
   256                           
   257     0074                     LCD_GotoCursor@row:	
   258                           ; 1 bytes @ 0x4
   259                           
   260                           
   261                           ; 1 bytes @ 0x4
   262     0074                     	ds	1
   263     0075                     ___awdiv@counter:
   264     0075                     _LCD_GotoCursor$111:	
   265                           ; 1 bytes @ 0x5
   266                           
   267                           
   268                           ; 2 bytes @ 0x5
   269     0075                     	ds	1
   270     0076                     ___awdiv@sign:
   271                           
   272                           ; 1 bytes @ 0x6
   273     0076                     	ds	1
   274     0077                     LCD_GotoCursor@cmd:
   275     0077                     ___awdiv@quotient:	
   276                           ; 1 bytes @ 0x7
   277                           
   278                           
   279                           ; 2 bytes @ 0x7
   280     0077                     	ds	2
   281     0079                     ?___awmod:
   282     0079                     ___awmod@divisor:	
   283                           ; 2 bytes @ 0x9
   284                           
   285                           
   286                           ; 2 bytes @ 0x9
   287     0079                     	ds	2
   288     007B                     ___awmod@dividend:
   289                           
   290                           ; 2 bytes @ 0xB
   291     007B                     	ds	2
   292     007D                     ??___awmod:
   293                           
   294                           ; 1 bytes @ 0xD
   295     007D                     	ds	1
   296                           
   297                           	psect	cstackBANK0
   298     0020                     __pcstackBANK0:
   299     0020                     ___awmod@counter:
   300                           
   301                           ; 1 bytes @ 0x0
   302     0020                     	ds	1
   303     0021                     ___awmod@sign:
   304                           
   305                           ; 1 bytes @ 0x1
   306     0021                     	ds	1
   307     0022                     ??_main:
   308                           
   309                           ; 1 bytes @ 0x2
   310     0022                     	ds	3
   311     0025                     main@channel:
   312                           
   313                           ; 2 bytes @ 0x5
   314     0025                     	ds	2
   315     0027                     main@adc:
   316                           
   317                           ; 2 bytes @ 0x7
   318     0027                     	ds	2
   319                           
   320                           	psect	maintext
   321     072F                     __pmaintext:	
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 138 in file "newmain.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  adc             2    7[BANK0 ] int 
   332 ;;  channel         2    5[BANK0 ] int 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0       4       0       0       0
   344 ;;      Temps:          0       3       0       0       0
   345 ;;      Totals:         0       7       0       0       0
   346 ;;Total ram usage:        7 bytes
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_LCD_Char
   350 ;;		_LCD_GotoCursor
   351 ;;		_LCD_Init
   352 ;;		___awdiv
   353 ;;		___awmod
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     072F                     _main:	
   360                           ;psect for function _main
   361                           
   362     072F                     l1082:	
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   365                           
   366                           
   367                           ;newmain.c: 140:     LCD_Init();
   368     072F  120A  118A  262C  120A  118A  	fcall	_LCD_Init
   369     0734                     l1084:
   370                           
   371                           ;newmain.c: 141:     TRISA = 0xFF;
   372     0734  30FF               	movlw	255
   373     0735  1683               	bsf	3,5	;RP0=1, select bank1
   374     0736  1303               	bcf	3,6	;RP1=0, select bank1
   375     0737  0085               	movwf	5	;volatile
   376     0738                     l1086:
   377                           
   378                           ;newmain.c: 142:     ADCON1 = 0b11000000;
   379     0738  30C0               	movlw	192
   380     0739  009F               	movwf	31	;volatile
   381     073A                     l1088:
   382                           
   383                           ;newmain.c: 143:     ADCON0 = 0b00000001;
   384     073A  3001               	movlw	1
   385     073B  1283               	bcf	3,5	;RP0=0, select bank0
   386     073C  1303               	bcf	3,6	;RP1=0, select bank0
   387     073D  009F               	movwf	31	;volatile
   388     073E                     l1090:
   389                           
   390                           ;newmain.c: 144:     ADRESH = 0;
   391     073E  019E               	clrf	30	;volatile
   392     073F                     l1092:
   393                           
   394                           ;newmain.c: 145:     ADRESL = 0;
   395     073F  1683               	bsf	3,5	;RP0=1, select bank1
   396     0740  1303               	bcf	3,6	;RP1=0, select bank1
   397     0741  019E               	clrf	30	;volatile
   398     0742                     l1094:
   399     0742                     l1096:
   400                           
   401                           ;newmain.c: 147:     int channel = 7;
   402     0742  3007               	movlw	7
   403     0743  1283               	bcf	3,5	;RP0=0, select bank0
   404     0744  1303               	bcf	3,6	;RP1=0, select bank0
   405     0745  00A5               	movwf	main@channel
   406     0746  3000               	movlw	0
   407     0747  00A6               	movwf	main@channel+1
   408     0748                     l1098:
   409                           
   410                           ;newmain.c: 149:     {;newmain.c: 150:         ADCON0 |= channel << 3;
   411     0748  1283               	bcf	3,5	;RP0=0, select bank0
   412     0749  1303               	bcf	3,6	;RP1=0, select bank0
   413     074A  0825               	movf	main@channel,w	;volatile
   414     074B  00A2               	movwf	??_main
   415     074C  3002               	movlw	2
   416     074D                     u555:
   417     074D  1003               	clrc
   418     074E  0DA2               	rlf	??_main,f
   419     074F  3EFF               	addlw	-1
   420     0750  1D03               	skipz
   421     0751  2F4D               	goto	u555
   422     0752  1003               	clrc
   423     0753  0D22               	rlf	??_main,w
   424     0754  00A3               	movwf	??_main+1
   425     0755  0823               	movf	??_main+1,w
   426     0756  049F               	iorwf	31,f	;volatile
   427     0757                     l1100:
   428                           
   429                           ;newmain.c: 151:         _delay((unsigned long)((20)*(20000000/4000.0)));
   430     0757  3082               	movlw	130
   431     0758  1283               	bcf	3,5	;RP0=0, select bank0
   432     0759  1303               	bcf	3,6	;RP1=0, select bank0
   433     075A  00A3               	movwf	??_main+1
   434     075B  30DD               	movlw	221
   435     075C  00A2               	movwf	??_main
   436     075D                     u577:
   437     075D  0BA2               	decfsz	??_main,f
   438     075E  2F5D               	goto	u577
   439     075F  0BA3               	decfsz	??_main+1,f
   440     0760  2F5D               	goto	u577
   441     0761                     l1102:
   442                           
   443                           ;newmain.c: 152:         GO_nDONE = 1;
   444     0761  1283               	bcf	3,5	;RP0=0, select bank0
   445     0762  1303               	bcf	3,6	;RP1=0, select bank0
   446     0763  151F               	bsf	31,2	;volatile
   447     0764                     l69:	
   448                           ;newmain.c: 153:         while(GO_nDONE);
   449                           
   450     0764  191F               	btfsc	31,2	;volatile
   451     0765  2F67               	goto	u561
   452     0766  2F68               	goto	u560
   453     0767                     u561:
   454     0767  2F64               	goto	l69
   455     0768                     u560:
   456     0768                     l1104:
   457                           
   458                           ;newmain.c: 154:         adc = ((ADRESH<< 8)+ADRESL);
   459     0768  081E               	movf	30,w	;volatile
   460     0769  00A8               	movwf	main@adc+1
   461     076A  1683               	bsf	3,5	;RP0=1, select bank1
   462     076B  1303               	bcf	3,6	;RP1=0, select bank1
   463     076C  081E               	movf	30,w	;volatile
   464     076D  1283               	bcf	3,5	;RP0=0, select bank0
   465     076E  1303               	bcf	3,6	;RP1=0, select bank0
   466     076F  00A7               	movwf	main@adc
   467     0770                     l1106:
   468                           
   469                           ;newmain.c: 155:         LCD_GotoCursor(1,1);
   470     0770  01F3               	clrf	LCD_GotoCursor@col
   471     0771  0AF3               	incf	LCD_GotoCursor@col,f
   472     0772  3001               	movlw	1
   473     0773  120A  118A  25C6  120A  118A  	fcall	_LCD_GotoCursor
   474     0778                     l1108:
   475                           
   476                           ;newmain.c: 156:         LCD_Char((adc/1000)+48);
   477     0778  30E8               	movlw	232
   478     0779  00F0               	movwf	___awdiv@divisor
   479     077A  3003               	movlw	3
   480     077B  00F1               	movwf	___awdiv@divisor+1
   481     077C  1283               	bcf	3,5	;RP0=0, select bank0
   482     077D  1303               	bcf	3,6	;RP1=0, select bank0
   483     077E  0828               	movf	main@adc+1,w
   484     077F  00F3               	movwf	___awdiv@dividend+1
   485     0780  0827               	movf	main@adc,w
   486     0781  00F2               	movwf	___awdiv@dividend
   487     0782  120A  118A  26C8  120A  118A  	fcall	___awdiv
   488     0787  0870               	movf	?___awdiv,w
   489     0788  3E30               	addlw	48
   490     0789  120A  118A  25E0  120A  118A  	fcall	_LCD_Char
   491     078E                     l1110:
   492                           
   493                           ;newmain.c: 157:         LCD_Char((adc/100%10)+48);
   494     078E  300A               	movlw	10
   495     078F  00F9               	movwf	___awmod@divisor
   496     0790  3000               	movlw	0
   497     0791  00FA               	movwf	___awmod@divisor+1
   498     0792  3064               	movlw	100
   499     0793  00F0               	movwf	___awdiv@divisor
   500     0794  3000               	movlw	0
   501     0795  00F1               	movwf	___awdiv@divisor+1
   502     0796  1283               	bcf	3,5	;RP0=0, select bank0
   503     0797  1303               	bcf	3,6	;RP1=0, select bank0
   504     0798  0828               	movf	main@adc+1,w
   505     0799  00F3               	movwf	___awdiv@dividend+1
   506     079A  0827               	movf	main@adc,w
   507     079B  00F2               	movwf	___awdiv@dividend
   508     079C  120A  118A  26C8  120A  118A  	fcall	___awdiv
   509     07A1  0871               	movf	?___awdiv+1,w
   510     07A2  00FC               	movwf	___awmod@dividend+1
   511     07A3  0870               	movf	?___awdiv,w
   512     07A4  00FB               	movwf	___awmod@dividend
   513     07A5  120A  118A  266D  120A  118A  	fcall	___awmod
   514     07AA  0879               	movf	?___awmod,w
   515     07AB  3E30               	addlw	48
   516     07AC  120A  118A  25E0  120A  118A  	fcall	_LCD_Char
   517     07B1                     l1112:
   518                           
   519                           ;newmain.c: 158:         LCD_Char((adc/10%10)+48);
   520     07B1  300A               	movlw	10
   521     07B2  00F9               	movwf	___awmod@divisor
   522     07B3  3000               	movlw	0
   523     07B4  00FA               	movwf	___awmod@divisor+1
   524     07B5  300A               	movlw	10
   525     07B6  00F0               	movwf	___awdiv@divisor
   526     07B7  3000               	movlw	0
   527     07B8  00F1               	movwf	___awdiv@divisor+1
   528     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   529     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   530     07BB  0828               	movf	main@adc+1,w
   531     07BC  00F3               	movwf	___awdiv@dividend+1
   532     07BD  0827               	movf	main@adc,w
   533     07BE  00F2               	movwf	___awdiv@dividend
   534     07BF  120A  118A  26C8  120A  118A  	fcall	___awdiv
   535     07C4  0871               	movf	?___awdiv+1,w
   536     07C5  00FC               	movwf	___awmod@dividend+1
   537     07C6  0870               	movf	?___awdiv,w
   538     07C7  00FB               	movwf	___awmod@dividend
   539     07C8  120A  118A  266D  120A  118A  	fcall	___awmod
   540     07CD  0879               	movf	?___awmod,w
   541     07CE  3E30               	addlw	48
   542     07CF  120A  118A  25E0  120A  118A  	fcall	_LCD_Char
   543     07D4                     l1114:
   544                           
   545                           ;newmain.c: 159:         LCD_Char((adc%10)+48);
   546     07D4  300A               	movlw	10
   547     07D5  00F9               	movwf	___awmod@divisor
   548     07D6  3000               	movlw	0
   549     07D7  00FA               	movwf	___awmod@divisor+1
   550     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   551     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   552     07DA  0828               	movf	main@adc+1,w
   553     07DB  00FC               	movwf	___awmod@dividend+1
   554     07DC  0827               	movf	main@adc,w
   555     07DD  00FB               	movwf	___awmod@dividend
   556     07DE  120A  118A  266D  120A  118A  	fcall	___awmod
   557     07E3  0879               	movf	?___awmod,w
   558     07E4  3E30               	addlw	48
   559     07E5  120A  118A  25E0  120A  118A  	fcall	_LCD_Char
   560     07EA                     l1116:
   561                           
   562                           ;newmain.c: 160:         _delay((unsigned long)((100)*(20000000/4000.0)));
   563     07EA  3003               	movlw	3
   564     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   565     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   566     07ED  00A4               	movwf	??_main+2
   567     07EE  308A               	movlw	138
   568     07EF  00A3               	movwf	??_main+1
   569     07F0  3055               	movlw	85
   570     07F1  00A2               	movwf	??_main
   571     07F2                     u587:
   572     07F2  0BA2               	decfsz	??_main,f
   573     07F3  2FF2               	goto	u587
   574     07F4  0BA3               	decfsz	??_main+1,f
   575     07F5  2FF2               	goto	u587
   576     07F6  0BA4               	decfsz	??_main+2,f
   577     07F7  2FF2               	goto	u587
   578     07F8  2F48               	goto	l1098
   579     07F9  120A  118A  2800   	ljmp	start
   580     07FC                     __end_of_main:
   581                           
   582                           	psect	text1
   583     066D                     __ptext1:	
   584 ;; *************** function ___awmod *****************
   585 ;; Defined at:
   586 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awmod.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  divisor         2    9[COMMON] int 
   589 ;;  dividend        2   11[COMMON] int 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  sign            1    1[BANK0 ] unsigned char 
   592 ;;  counter         1    0[BANK0 ] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    9[COMMON] int 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         4       0       0       0       0
   603 ;;      Locals:         0       2       0       0       0
   604 ;;      Temps:          1       0       0       0       0
   605 ;;      Totals:         5       2       0       0       0
   606 ;;Total ram usage:        7 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615     066D                     ___awmod:	
   616                           ;psect for function ___awmod
   617                           
   618     066D                     l1020:	
   619                           ;incstack = 0
   620                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   621                           
   622     066D  1283               	bcf	3,5	;RP0=0, select bank0
   623     066E  1303               	bcf	3,6	;RP1=0, select bank0
   624     066F  01A1               	clrf	___awmod@sign
   625     0670                     l1022:
   626     0670  1FFC               	btfss	___awmod@dividend+1,7
   627     0671  2E73               	goto	u441
   628     0672  2E74               	goto	u440
   629     0673                     u441:
   630     0673  2E7B               	goto	l1028
   631     0674                     u440:
   632     0674                     l1024:
   633     0674  09FB               	comf	___awmod@dividend,f
   634     0675  09FC               	comf	___awmod@dividend+1,f
   635     0676  0AFB               	incf	___awmod@dividend,f
   636     0677  1903               	skipnz
   637     0678  0AFC               	incf	___awmod@dividend+1,f
   638     0679                     l1026:
   639     0679  01A1               	clrf	___awmod@sign
   640     067A  0AA1               	incf	___awmod@sign,f
   641     067B                     l1028:
   642     067B  1FFA               	btfss	___awmod@divisor+1,7
   643     067C  2E7E               	goto	u451
   644     067D  2E7F               	goto	u450
   645     067E                     u451:
   646     067E  2E84               	goto	l1032
   647     067F                     u450:
   648     067F                     l1030:
   649     067F  09F9               	comf	___awmod@divisor,f
   650     0680  09FA               	comf	___awmod@divisor+1,f
   651     0681  0AF9               	incf	___awmod@divisor,f
   652     0682  1903               	skipnz
   653     0683  0AFA               	incf	___awmod@divisor+1,f
   654     0684                     l1032:
   655     0684  0879               	movf	___awmod@divisor,w
   656     0685  047A               	iorwf	___awmod@divisor+1,w
   657     0686  1903               	btfsc	3,2
   658     0687  2E89               	goto	u461
   659     0688  2E8A               	goto	u460
   660     0689                     u461:
   661     0689  2EB9               	goto	l1050
   662     068A                     u460:
   663     068A                     l1034:
   664     068A  01A0               	clrf	___awmod@counter
   665     068B  0AA0               	incf	___awmod@counter,f
   666     068C  2E98               	goto	l1040
   667     068D                     l1036:
   668     068D  3001               	movlw	1
   669     068E                     u475:
   670     068E  1003               	clrc
   671     068F  0DF9               	rlf	___awmod@divisor,f
   672     0690  0DFA               	rlf	___awmod@divisor+1,f
   673     0691  3EFF               	addlw	-1
   674     0692  1D03               	skipz
   675     0693  2E8E               	goto	u475
   676     0694                     l1038:
   677     0694  3001               	movlw	1
   678     0695  00FD               	movwf	??___awmod
   679     0696  087D               	movf	??___awmod,w
   680     0697  07A0               	addwf	___awmod@counter,f
   681     0698                     l1040:
   682     0698  1FFA               	btfss	___awmod@divisor+1,7
   683     0699  2E9B               	goto	u481
   684     069A  2E9C               	goto	u480
   685     069B                     u481:
   686     069B  2E8D               	goto	l1036
   687     069C                     u480:
   688     069C                     l1042:
   689     069C  087A               	movf	___awmod@divisor+1,w
   690     069D  027C               	subwf	___awmod@dividend+1,w
   691     069E  1D03               	skipz
   692     069F  2EA2               	goto	u495
   693     06A0  0879               	movf	___awmod@divisor,w
   694     06A1  027B               	subwf	___awmod@dividend,w
   695     06A2                     u495:
   696     06A2  1C03               	skipc
   697     06A3  2EA5               	goto	u491
   698     06A4  2EA6               	goto	u490
   699     06A5                     u491:
   700     06A5  2EAC               	goto	l1046
   701     06A6                     u490:
   702     06A6                     l1044:
   703     06A6  0879               	movf	___awmod@divisor,w
   704     06A7  02FB               	subwf	___awmod@dividend,f
   705     06A8  087A               	movf	___awmod@divisor+1,w
   706     06A9  1C03               	skipc
   707     06AA  03FC               	decf	___awmod@dividend+1,f
   708     06AB  02FC               	subwf	___awmod@dividend+1,f
   709     06AC                     l1046:
   710     06AC  3001               	movlw	1
   711     06AD                     u505:
   712     06AD  1003               	clrc
   713     06AE  0CFA               	rrf	___awmod@divisor+1,f
   714     06AF  0CF9               	rrf	___awmod@divisor,f
   715     06B0  3EFF               	addlw	-1
   716     06B1  1D03               	skipz
   717     06B2  2EAD               	goto	u505
   718     06B3                     l1048:
   719     06B3  3001               	movlw	1
   720     06B4  02A0               	subwf	___awmod@counter,f
   721     06B5  1D03               	btfss	3,2
   722     06B6  2EB8               	goto	u511
   723     06B7  2EB9               	goto	u510
   724     06B8                     u511:
   725     06B8  2E9C               	goto	l1042
   726     06B9                     u510:
   727     06B9                     l1050:
   728     06B9  0821               	movf	___awmod@sign,w
   729     06BA  1903               	btfsc	3,2
   730     06BB  2EBD               	goto	u521
   731     06BC  2EBE               	goto	u520
   732     06BD                     u521:
   733     06BD  2EC3               	goto	l1054
   734     06BE                     u520:
   735     06BE                     l1052:
   736     06BE  09FB               	comf	___awmod@dividend,f
   737     06BF  09FC               	comf	___awmod@dividend+1,f
   738     06C0  0AFB               	incf	___awmod@dividend,f
   739     06C1  1903               	skipnz
   740     06C2  0AFC               	incf	___awmod@dividend+1,f
   741     06C3                     l1054:
   742     06C3  087C               	movf	___awmod@dividend+1,w
   743     06C4  00FA               	movwf	?___awmod+1
   744     06C5  087B               	movf	___awmod@dividend,w
   745     06C6  00F9               	movwf	?___awmod
   746     06C7                     l326:
   747     06C7  0008               	return
   748     06C8                     __end_of___awmod:
   749                           
   750                           	psect	text2
   751     06C8                     __ptext2:	
   752 ;; *************** function ___awdiv *****************
   753 ;; Defined at:
   754 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  divisor         2    0[COMMON] int 
   757 ;;  dividend        2    2[COMMON] int 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  quotient        2    7[COMMON] int 
   760 ;;  sign            1    6[COMMON] unsigned char 
   761 ;;  counter         1    5[COMMON] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  2    0[COMMON] int 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         4       0       0       0       0
   772 ;;      Locals:         4       0       0       0       0
   773 ;;      Temps:          1       0       0       0       0
   774 ;;      Totals:         9       0       0       0       0
   775 ;;Total ram usage:        9 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784     06C8                     ___awdiv:	
   785                           ;psect for function ___awdiv
   786                           
   787     06C8                     l976:	
   788                           ;incstack = 0
   789                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   790                           
   791     06C8  01F6               	clrf	___awdiv@sign
   792     06C9                     l978:
   793     06C9  1FF1               	btfss	___awdiv@divisor+1,7
   794     06CA  2ECC               	goto	u341
   795     06CB  2ECD               	goto	u340
   796     06CC                     u341:
   797     06CC  2ED4               	goto	l984
   798     06CD                     u340:
   799     06CD                     l980:
   800     06CD  09F0               	comf	___awdiv@divisor,f
   801     06CE  09F1               	comf	___awdiv@divisor+1,f
   802     06CF  0AF0               	incf	___awdiv@divisor,f
   803     06D0  1903               	skipnz
   804     06D1  0AF1               	incf	___awdiv@divisor+1,f
   805     06D2                     l982:
   806     06D2  01F6               	clrf	___awdiv@sign
   807     06D3  0AF6               	incf	___awdiv@sign,f
   808     06D4                     l984:
   809     06D4  1FF3               	btfss	___awdiv@dividend+1,7
   810     06D5  2ED7               	goto	u351
   811     06D6  2ED8               	goto	u350
   812     06D7                     u351:
   813     06D7  2EE1               	goto	l990
   814     06D8                     u350:
   815     06D8                     l986:
   816     06D8  09F2               	comf	___awdiv@dividend,f
   817     06D9  09F3               	comf	___awdiv@dividend+1,f
   818     06DA  0AF2               	incf	___awdiv@dividend,f
   819     06DB  1903               	skipnz
   820     06DC  0AF3               	incf	___awdiv@dividend+1,f
   821     06DD                     l988:
   822     06DD  3001               	movlw	1
   823     06DE  00F4               	movwf	??___awdiv
   824     06DF  0874               	movf	??___awdiv,w
   825     06E0  06F6               	xorwf	___awdiv@sign,f
   826     06E1                     l990:
   827     06E1  01F7               	clrf	___awdiv@quotient
   828     06E2  01F8               	clrf	___awdiv@quotient+1
   829     06E3                     l992:
   830     06E3  0870               	movf	___awdiv@divisor,w
   831     06E4  0471               	iorwf	___awdiv@divisor+1,w
   832     06E5  1903               	btfsc	3,2
   833     06E6  2EE8               	goto	u361
   834     06E7  2EE9               	goto	u360
   835     06E8                     u361:
   836     06E8  2F20               	goto	l1012
   837     06E9                     u360:
   838     06E9                     l994:
   839     06E9  01F5               	clrf	___awdiv@counter
   840     06EA  0AF5               	incf	___awdiv@counter,f
   841     06EB  2EF7               	goto	l1000
   842     06EC                     l996:
   843     06EC  3001               	movlw	1
   844     06ED                     u375:
   845     06ED  1003               	clrc
   846     06EE  0DF0               	rlf	___awdiv@divisor,f
   847     06EF  0DF1               	rlf	___awdiv@divisor+1,f
   848     06F0  3EFF               	addlw	-1
   849     06F1  1D03               	skipz
   850     06F2  2EED               	goto	u375
   851     06F3                     l998:
   852     06F3  3001               	movlw	1
   853     06F4  00F4               	movwf	??___awdiv
   854     06F5  0874               	movf	??___awdiv,w
   855     06F6  07F5               	addwf	___awdiv@counter,f
   856     06F7                     l1000:
   857     06F7  1FF1               	btfss	___awdiv@divisor+1,7
   858     06F8  2EFA               	goto	u381
   859     06F9  2EFB               	goto	u380
   860     06FA                     u381:
   861     06FA  2EEC               	goto	l996
   862     06FB                     u380:
   863     06FB                     l1002:
   864     06FB  3001               	movlw	1
   865     06FC                     u395:
   866     06FC  1003               	clrc
   867     06FD  0DF7               	rlf	___awdiv@quotient,f
   868     06FE  0DF8               	rlf	___awdiv@quotient+1,f
   869     06FF  3EFF               	addlw	-1
   870     0700  1D03               	skipz
   871     0701  2EFC               	goto	u395
   872     0702  0871               	movf	___awdiv@divisor+1,w
   873     0703  0273               	subwf	___awdiv@dividend+1,w
   874     0704  1D03               	skipz
   875     0705  2F08               	goto	u405
   876     0706  0870               	movf	___awdiv@divisor,w
   877     0707  0272               	subwf	___awdiv@dividend,w
   878     0708                     u405:
   879     0708  1C03               	skipc
   880     0709  2F0B               	goto	u401
   881     070A  2F0C               	goto	u400
   882     070B                     u401:
   883     070B  2F13               	goto	l1008
   884     070C                     u400:
   885     070C                     l1004:
   886     070C  0870               	movf	___awdiv@divisor,w
   887     070D  02F2               	subwf	___awdiv@dividend,f
   888     070E  0871               	movf	___awdiv@divisor+1,w
   889     070F  1C03               	skipc
   890     0710  03F3               	decf	___awdiv@dividend+1,f
   891     0711  02F3               	subwf	___awdiv@dividend+1,f
   892     0712                     l1006:
   893     0712  1477               	bsf	___awdiv@quotient,0
   894     0713                     l1008:
   895     0713  3001               	movlw	1
   896     0714                     u415:
   897     0714  1003               	clrc
   898     0715  0CF1               	rrf	___awdiv@divisor+1,f
   899     0716  0CF0               	rrf	___awdiv@divisor,f
   900     0717  3EFF               	addlw	-1
   901     0718  1D03               	skipz
   902     0719  2F14               	goto	u415
   903     071A                     l1010:
   904     071A  3001               	movlw	1
   905     071B  02F5               	subwf	___awdiv@counter,f
   906     071C  1D03               	btfss	3,2
   907     071D  2F1F               	goto	u421
   908     071E  2F20               	goto	u420
   909     071F                     u421:
   910     071F  2EFB               	goto	l1002
   911     0720                     u420:
   912     0720                     l1012:
   913     0720  0876               	movf	___awdiv@sign,w
   914     0721  1903               	btfsc	3,2
   915     0722  2F24               	goto	u431
   916     0723  2F25               	goto	u430
   917     0724                     u431:
   918     0724  2F2A               	goto	l1016
   919     0725                     u430:
   920     0725                     l1014:
   921     0725  09F7               	comf	___awdiv@quotient,f
   922     0726  09F8               	comf	___awdiv@quotient+1,f
   923     0727  0AF7               	incf	___awdiv@quotient,f
   924     0728  1903               	skipnz
   925     0729  0AF8               	incf	___awdiv@quotient+1,f
   926     072A                     l1016:
   927     072A  0878               	movf	___awdiv@quotient+1,w
   928     072B  00F1               	movwf	?___awdiv+1
   929     072C  0877               	movf	___awdiv@quotient,w
   930     072D  00F0               	movwf	?___awdiv
   931     072E                     l313:
   932     072E  0008               	return
   933     072F                     __end_of___awdiv:
   934                           
   935                           	psect	text3
   936     062C                     __ptext3:	
   937 ;; *************** function _LCD_Init *****************
   938 ;; Defined at:
   939 ;;		line 59 in file "newmain.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0
   956 ;;      Totals:         2       0       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 1
   960 ;; This function calls:
   961 ;;		_LCD_Cmd
   962 ;;		_LCD_Cmd_Init
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968     062C                     _LCD_Init:	
   969                           ;psect for function _LCD_Init
   970                           
   971     062C                     l920:	
   972                           ;incstack = 0
   973                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   974                           
   975                           
   976                           ;newmain.c: 61:     TRISBbits.TRISB6 = 0;
   977     062C  1683               	bsf	3,5	;RP0=1, select bank1
   978     062D  1303               	bcf	3,6	;RP1=0, select bank1
   979     062E  1306               	bcf	6,6	;volatile
   980                           
   981                           ;newmain.c: 62:     TRISBbits.TRISB7 = 0;
   982     062F  1386               	bcf	6,7	;volatile
   983     0630                     l922:
   984                           
   985                           ;newmain.c: 63:     TRISC = 0;
   986     0630  0187               	clrf	7	;volatile
   987     0631                     l924:
   988                           
   989                           ;newmain.c: 66:  LCD_Cmd_Init(0x30);
   990     0631  3030               	movlw	48
   991     0632  120A  118A  25B8  120A  118A  	fcall	_LCD_Cmd_Init
   992     0637                     l926:
   993                           
   994                           ;newmain.c: 67:  _delay((unsigned long)((5)*(20000000/4000.0)));
   995     0637  3021               	movlw	33
   996     0638  00F4               	movwf	??_LCD_Init+1
   997     0639  3076               	movlw	118
   998     063A  00F3               	movwf	??_LCD_Init
   999     063B                     u597:
  1000     063B  0BF3               	decfsz	??_LCD_Init,f
  1001     063C  2E3B               	goto	u597
  1002     063D  0BF4               	decfsz	??_LCD_Init+1,f
  1003     063E  2E3B               	goto	u597
  1004     063F  0000               	nop
  1005     0640                     l928:
  1006                           
  1007                           ;newmain.c: 68:  LCD_Cmd_Init(0x30);
  1008     0640  3030               	movlw	48
  1009     0641  120A  118A  25B8  120A  118A  	fcall	_LCD_Cmd_Init
  1010     0646                     l930:
  1011                           
  1012                           ;newmain.c: 69:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1013     0646  3007               	movlw	7
  1014     0647  00F4               	movwf	??_LCD_Init+1
  1015     0648  307D               	movlw	125
  1016     0649  00F3               	movwf	??_LCD_Init
  1017     064A                     u607:
  1018     064A  0BF3               	decfsz	??_LCD_Init,f
  1019     064B  2E4A               	goto	u607
  1020     064C  0BF4               	decfsz	??_LCD_Init+1,f
  1021     064D  2E4A               	goto	u607
  1022     064E                     l932:
  1023                           
  1024                           ;newmain.c: 70:  LCD_Cmd_Init(0x30);
  1025     064E  3030               	movlw	48
  1026     064F  120A  118A  25B8  120A  118A  	fcall	_LCD_Cmd_Init
  1027     0654                     l934:
  1028                           
  1029                           ;newmain.c: 74:     LCD_Cmd_Init(0x28);
  1030     0654  3028               	movlw	40
  1031     0655  120A  118A  25B8  120A  118A  	fcall	_LCD_Cmd_Init
  1032     065A                     l936:
  1033                           
  1034                           ;newmain.c: 77:  LCD_Cmd(0x28);
  1035     065A  3028               	movlw	40
  1036     065B  120A  118A  25FE  120A  118A  	fcall	_LCD_Cmd
  1037     0660                     l938:
  1038                           
  1039                           ;newmain.c: 88:  LCD_Cmd(0x01);
  1040     0660  3001               	movlw	1
  1041     0661  120A  118A  25FE  120A  118A  	fcall	_LCD_Cmd
  1042     0666                     l940:
  1043                           
  1044                           ;newmain.c: 94:     LCD_Cmd(0x0E);
  1045     0666  300E               	movlw	14
  1046     0667  120A  118A  25FE  120A  118A  	fcall	_LCD_Cmd
  1047     066C                     l33:
  1048     066C  0008               	return
  1049     066D                     __end_of_LCD_Init:
  1050                           
  1051                           	psect	text4
  1052     05B8                     __ptext4:	
  1053 ;; *************** function _LCD_Cmd_Init *****************
  1054 ;; Defined at:
  1055 ;;		line 51 in file "newmain.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  cmd             1    wreg     unsigned char 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  cmd             1    1[COMMON] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         1       0       0       0       0
  1071 ;;      Temps:          1       0       0       0       0
  1072 ;;      Totals:         2       0       0       0       0
  1073 ;;Total ram usage:        2 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_LCD_Init
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082     05B8                     _LCD_Cmd_Init:	
  1083                           ;psect for function _LCD_Cmd_Init
  1084                           
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in _LCD_Cmd_Init: [wreg]
  1088                           ;LCD_Cmd_Init@cmd stored from wreg
  1089     05B8  00F1               	movwf	LCD_Cmd_Init@cmd
  1090     05B9                     l912:
  1091                           
  1092                           ;newmain.c: 51: void LCD_Cmd_Init(unsigned char cmd);newmain.c: 52: {;newmain.c: 53:  PO
      +                          RTBbits.RB6 = 0;
  1093     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1094     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1095     05BB  1306               	bcf	6,6	;volatile
  1096     05BC                     l914:
  1097                           
  1098                           ;newmain.c: 54:  PORTC = cmd;
  1099     05BC  0871               	movf	LCD_Cmd_Init@cmd,w
  1100     05BD  0087               	movwf	7	;volatile
  1101     05BE                     l916:
  1102                           
  1103                           ;newmain.c: 55:  PORTBbits.RB7 = 1;
  1104     05BE  1786               	bsf	6,7	;volatile
  1105     05BF                     l918:
  1106                           
  1107                           ;newmain.c: 56:  PORTBbits.RB7 = 0;
  1108     05BF  1386               	bcf	6,7	;volatile
  1109                           
  1110                           ;newmain.c: 57:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  1111     05C0  3042               	movlw	66
  1112     05C1  00F0               	movwf	??_LCD_Cmd_Init
  1113     05C2                     u617:
  1114     05C2  0BF0               	decfsz	??_LCD_Cmd_Init,f
  1115     05C3  2DC2               	goto	u617
  1116     05C4  0000               	nop
  1117     05C5                     l30:
  1118     05C5  0008               	return
  1119     05C6                     __end_of_LCD_Cmd_Init:
  1120                           
  1121                           	psect	text5
  1122     05C6                     __ptext5:	
  1123 ;; *************** function _LCD_GotoCursor *****************
  1124 ;; Defined at:
  1125 ;;		line 116 in file "newmain.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  row             1    wreg     unsigned char 
  1128 ;;  col             1    3[COMMON] unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  row             1    4[COMMON] unsigned char 
  1131 ;;  cmd             1    7[COMMON] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         1       0       0       0       0
  1142 ;;      Locals:         4       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0
  1144 ;;      Totals:         5       0       0       0       0
  1145 ;;Total ram usage:        5 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 1
  1148 ;; This function calls:
  1149 ;;		_LCD_Cmd
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     05C6                     _LCD_GotoCursor:	
  1156                           ;psect for function _LCD_GotoCursor
  1157                           
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _LCD_GotoCursor: [wreg+status,2+status,0+pclath+cstack]
  1161                           ;LCD_GotoCursor@row stored from wreg
  1162     05C6  00F4               	movwf	LCD_GotoCursor@row
  1163     05C7                     l966:
  1164                           
  1165                           ;newmain.c: 116: void LCD_GotoCursor(unsigned char row, unsigned char col);newmain.c: 11
      +                          7: {;newmain.c: 118:  unsigned char cmd;;newmain.c: 119:  cmd = (row==1?0x80:0xC0) + col
      +                           - 1;
  1166     05C7  0374               	decf	LCD_GotoCursor@row,w
  1167     05C8  1903               	btfsc	3,2
  1168     05C9  2DCB               	goto	u331
  1169     05CA  2DCC               	goto	u330
  1170     05CB                     u331:
  1171     05CB  2DD1               	goto	l970
  1172     05CC                     u330:
  1173     05CC                     l968:
  1174     05CC  30C0               	movlw	192
  1175     05CD  00F5               	movwf	_LCD_GotoCursor$111
  1176     05CE  3000               	movlw	0
  1177     05CF  00F6               	movwf	_LCD_GotoCursor$111+1
  1178     05D0  2DD5               	goto	l972
  1179     05D1                     l970:
  1180     05D1  3080               	movlw	128
  1181     05D2  00F5               	movwf	_LCD_GotoCursor$111
  1182     05D3  3000               	movlw	0
  1183     05D4  00F6               	movwf	_LCD_GotoCursor$111+1
  1184     05D5                     l972:
  1185     05D5  0873               	movf	LCD_GotoCursor@col,w
  1186     05D6  0775               	addwf	_LCD_GotoCursor$111,w
  1187     05D7  3EFF               	addlw	255
  1188     05D8  00F7               	movwf	LCD_GotoCursor@cmd
  1189     05D9                     l974:
  1190                           
  1191                           ;newmain.c: 120:  LCD_Cmd(cmd);
  1192     05D9  0877               	movf	LCD_GotoCursor@cmd,w
  1193     05DA  120A  118A  25FE  120A  118A  	fcall	_LCD_Cmd
  1194     05DF                     l49:
  1195     05DF  0008               	return
  1196     05E0                     __end_of_LCD_GotoCursor:
  1197                           
  1198                           	psect	text6
  1199     05FE                     __ptext6:	
  1200 ;; *************** function _LCD_Cmd *****************
  1201 ;; Defined at:
  1202 ;;		line 33 in file "newmain.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  cmd             1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  cmd             1    2[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          2       0       0       0       0
  1219 ;;      Totals:         3       0       0       0       0
  1220 ;;Total ram usage:        3 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_LCD_Init
  1226 ;;		_LCD_GotoCursor
  1227 ;;		_LCD_GotoCursor_Char
  1228 ;;		_LCD_GotoCursor_String
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232     05FE                     _LCD_Cmd:	
  1233                           ;psect for function _LCD_Cmd
  1234                           
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
  1238                           ;LCD_Cmd@cmd stored from wreg
  1239     05FE  00F2               	movwf	LCD_Cmd@cmd
  1240     05FF                     l892:
  1241                           
  1242                           ;newmain.c: 33: void LCD_Cmd(unsigned char cmd);newmain.c: 34: {;newmain.c: 35:  PORTBbi
      +                          ts.RB6 = 0;
  1243     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1244     0600  1303               	bcf	3,6	;RP1=0, select bank0
  1245     0601  1306               	bcf	6,6	;volatile
  1246     0602                     l894:
  1247                           
  1248                           ;newmain.c: 36:  PORTC = cmd;
  1249     0602  0872               	movf	LCD_Cmd@cmd,w
  1250     0603  0087               	movwf	7	;volatile
  1251     0604                     l896:
  1252                           
  1253                           ;newmain.c: 37:  PORTBbits.RB7 = 1;
  1254     0604  1786               	bsf	6,7	;volatile
  1255     0605                     l898:
  1256                           
  1257                           ;newmain.c: 38:  PORTBbits.RB7 = 0;
  1258     0605  1386               	bcf	6,7	;volatile
  1259     0606                     l900:
  1260                           
  1261                           ;newmain.c: 39:     PORTC = cmd << 4;
  1262     0606  0872               	movf	LCD_Cmd@cmd,w
  1263     0607  00F0               	movwf	??_LCD_Cmd
  1264     0608  3003               	movlw	3
  1265     0609                     u295:
  1266     0609  1003               	clrc
  1267     060A  0DF0               	rlf	??_LCD_Cmd,f
  1268     060B  3EFF               	addlw	-1
  1269     060C  1D03               	skipz
  1270     060D  2E09               	goto	u295
  1271     060E  1003               	clrc
  1272     060F  0D70               	rlf	??_LCD_Cmd,w
  1273     0610  0087               	movwf	7	;volatile
  1274     0611                     l902:
  1275                           
  1276                           ;newmain.c: 40:  PORTBbits.RB7 = 1;
  1277     0611  1786               	bsf	6,7	;volatile
  1278     0612                     l904:
  1279                           
  1280                           ;newmain.c: 41:  PORTBbits.RB7 = 0;
  1281     0612  1386               	bcf	6,7	;volatile
  1282     0613                     l906:
  1283                           
  1284                           ;newmain.c: 42:  if( cmd <= 0x02)
  1285     0613  3003               	movlw	3
  1286     0614  0272               	subwf	LCD_Cmd@cmd,w
  1287     0615  1803               	skipnc
  1288     0616  2E18               	goto	u301
  1289     0617  2E19               	goto	u300
  1290     0618                     u301:
  1291     0618  2E23               	goto	l910
  1292     0619                     u300:
  1293     0619                     l908:
  1294                           
  1295                           ;newmain.c: 43:  {;newmain.c: 44:   _delay((unsigned long)((2)*(20000000/4000.0)));
  1296     0619  300D               	movlw	13
  1297     061A  00F1               	movwf	??_LCD_Cmd+1
  1298     061B  30FB               	movlw	251
  1299     061C  00F0               	movwf	??_LCD_Cmd
  1300     061D                     u627:
  1301     061D  0BF0               	decfsz	??_LCD_Cmd,f
  1302     061E  2E1D               	goto	u627
  1303     061F  0BF1               	decfsz	??_LCD_Cmd+1,f
  1304     0620  2E1D               	goto	u627
  1305     0621  2E22               	nop2
  1306                           
  1307                           ;newmain.c: 45:  }
  1308     0622  2E2B               	goto	l27
  1309     0623                     l910:
  1310                           
  1311                           ;newmain.c: 47:  {;newmain.c: 48:   _delay((unsigned long)((1)*(20000000/4000.0)));
  1312     0623  3007               	movlw	7
  1313     0624  00F1               	movwf	??_LCD_Cmd+1
  1314     0625  307D               	movlw	125
  1315     0626  00F0               	movwf	??_LCD_Cmd
  1316     0627                     u637:
  1317     0627  0BF0               	decfsz	??_LCD_Cmd,f
  1318     0628  2E27               	goto	u637
  1319     0629  0BF1               	decfsz	??_LCD_Cmd+1,f
  1320     062A  2E27               	goto	u637
  1321     062B                     l27:
  1322     062B  0008               	return
  1323     062C                     __end_of_LCD_Cmd:
  1324                           
  1325                           	psect	text7
  1326     05E0                     __ptext7:	
  1327 ;; *************** function _LCD_Char *****************
  1328 ;; Defined at:
  1329 ;;		line 96 in file "newmain.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  c               1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  c               1    2[COMMON] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0
  1345 ;;      Temps:          2       0       0       0       0
  1346 ;;      Totals:         3       0       0       0       0
  1347 ;;Total ram usage:        3 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;;		_LCD_String
  1354 ;;		_LCD_GotoCursor_Char
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358     05E0                     _LCD_Char:	
  1359                           ;psect for function _LCD_Char
  1360                           
  1361                           
  1362                           ;incstack = 0
  1363                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1364                           ;LCD_Char@c stored from wreg
  1365     05E0  00F2               	movwf	LCD_Char@c
  1366     05E1                     l942:
  1367                           
  1368                           ;newmain.c: 96: void LCD_Char(unsigned char c);newmain.c: 97: {;newmain.c: 98:  PORTBbit
      +                          s.RB6 = 1;
  1369     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1370     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1371     05E3  1706               	bsf	6,6	;volatile
  1372     05E4                     l944:
  1373                           
  1374                           ;newmain.c: 99:  PORTC = c;
  1375     05E4  0872               	movf	LCD_Char@c,w
  1376     05E5  0087               	movwf	7	;volatile
  1377     05E6                     l946:
  1378                           
  1379                           ;newmain.c: 100:  PORTBbits.RB7 = 1;
  1380     05E6  1786               	bsf	6,7	;volatile
  1381     05E7                     l948:
  1382                           
  1383                           ;newmain.c: 101:  PORTBbits.RB7 = 0;
  1384     05E7  1386               	bcf	6,7	;volatile
  1385     05E8                     l950:
  1386                           
  1387                           ;newmain.c: 102:     PORTC = c << 4;
  1388     05E8  0872               	movf	LCD_Char@c,w
  1389     05E9  00F0               	movwf	??_LCD_Char
  1390     05EA  3003               	movlw	3
  1391     05EB                     u315:
  1392     05EB  1003               	clrc
  1393     05EC  0DF0               	rlf	??_LCD_Char,f
  1394     05ED  3EFF               	addlw	-1
  1395     05EE  1D03               	skipz
  1396     05EF  2DEB               	goto	u315
  1397     05F0  1003               	clrc
  1398     05F1  0D70               	rlf	??_LCD_Char,w
  1399     05F2  0087               	movwf	7	;volatile
  1400     05F3                     l952:
  1401                           
  1402                           ;newmain.c: 103:  PORTBbits.RB7 = 1;
  1403     05F3  1786               	bsf	6,7	;volatile
  1404     05F4                     l954:
  1405                           
  1406                           ;newmain.c: 104:  PORTBbits.RB7 = 0;
  1407     05F4  1386               	bcf	6,7	;volatile
  1408     05F5                     l956:
  1409                           
  1410                           ;newmain.c: 105:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1411     05F5  3007               	movlw	7
  1412     05F6  00F1               	movwf	??_LCD_Char+1
  1413     05F7  307D               	movlw	125
  1414     05F8  00F0               	movwf	??_LCD_Char
  1415     05F9                     u647:
  1416     05F9  0BF0               	decfsz	??_LCD_Char,f
  1417     05FA  2DF9               	goto	u647
  1418     05FB  0BF1               	decfsz	??_LCD_Char+1,f
  1419     05FC  2DF9               	goto	u647
  1420     05FD                     l36:
  1421     05FD  0008               	return
  1422     05FE                     __end_of_LCD_Char:
  1423     007E                     btemp	set	126	;btemp
  1424     007E                     wtemp0	set	126
  1425                           
  1426                           	psect	config
  1427                           
  1428                           ;Config register CONFIG @ 0x2007
  1429                           ;	Oscillator Selection bits
  1430                           ;	FOSC = HS, HS oscillator
  1431                           ;	Watchdog Timer Enable bit
  1432                           ;	WDTE = OFF, WDT disabled
  1433                           ;	Power-up Timer Enable bit
  1434                           ;	PWRTE = OFF, PWRT disabled
  1435                           ;	Brown-out Reset Enable bit
  1436                           ;	BOREN = OFF, BOR disabled
  1437                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1438                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1439                           ;	Data EEPROM Memory Code Protection bit
  1440                           ;	CPD = OFF, Data EEPROM code protection off
  1441                           ;	Flash Program Memory Write Enable bits
  1442                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1443                           ;	In-Circuit Debugger Mode bit
  1444                           ;	DEBUG = 0x1, unprogrammed default
  1445                           ;	Flash Program Memory Code Protection bit
  1446                           ;	CP = OFF, Code protection off
  1447     2007                     	org	8199
  1448     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod
    ___awmod->___awdiv
    _LCD_Init->_LCD_Cmd
    _LCD_GotoCursor->_LCD_Cmd

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1986
                                              2 BANK0      7     7      0
                           _LCD_Char
                     _LCD_GotoCursor
                           _LCD_Init
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      88
                                              3 COMMON     2     2      0
                            _LCD_Cmd
                       _LCD_Cmd_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd_Init                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_GotoCursor                                       5     4      1     233
                                              3 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      66
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_GotoCursor
     _LCD_Cmd
   _LCD_Init
     _LCD_Cmd
     _LCD_Cmd_Init
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 01 18:54:33 2022

          ?_LCD_Cmd_Init 0070                       l30 05C5                       l33 066C  
                     l27 062B                       l36 05FD                       l49 05DF  
                     l69 0764             ___awdiv@sign 0076                      l313 072E  
                    l326 06C7                      l900 0606                      l910 0623  
                    l902 0611                      l904 0612                      l912 05B9  
                    l920 062C                      l906 0613                      l914 05BC  
                    l930 0646                      l922 0630                      l908 0619  
                    l916 05BE                      l940 0666                      l932 064E  
                    l924 0631                      l950 05E8                      l942 05E1  
                    l918 05BF                      l934 0654                      l926 0637  
                    l952 05F3                      l944 05E4                      l936 065A  
                    l928 0640                      l954 05F4                      l946 05E6  
                    l970 05D1                      l938 0660                      l956 05F5  
                    l948 05E7                      l892 05FF                      l972 05D5  
                    l980 06CD                      l894 0602                      l974 05D9  
                    l966 05C7                      l990 06E1                      l982 06D2  
                    l896 0604                      l968 05CC                      l992 06E3  
                    l984 06D4                      l976 06C8                      l898 0605  
                    l994 06E9                      l986 06D8                      l978 06C9  
                    l996 06EC                      l988 06DD                      l998 06F3  
                    u300 0619                      u301 0618                      u400 070C  
                    u401 070B                      u330 05CC                      u315 05EB  
                    u331 05CB                      u420 0720                      u340 06CD  
                    u421 071F                      u405 0708                      u341 06CC  
                    u430 0725                      u350 06D8                      u510 06B9  
                    u431 0724                      u415 0714                      u351 06D7  
                    u511 06B8                      u360 06E9                      u520 06BE  
                    u440 0674                      u361 06E8                      u521 06BD  
                    u505 06AD                      u441 0673                      u450 067F  
                    u451 067E                      u380 06FB                      u460 068A  
                    u381 06FA                      u461 0689                      u295 0609  
                    u607 064A                      u375 06ED                      u480 069C  
                    u560 0768                      u617 05C2                      u481 069B  
                    u561 0767                      u490 06A6                      u627 061D  
                    u395 06FC                      u491 06A5                      u475 068E  
                    u555 074D                      u637 0627                      u647 05F9  
                    u495 06A2                      u577 075D                      u587 07F2  
                    u597 063B             ___awmod@sign 0021              main@channel 0025  
        __end_of_LCD_Cmd 062C                     l1000 06F7                     l1010 071A  
                   l1002 06FB                     l1004 070C                     l1012 0720  
                   l1020 066D                     l1100 0757                     l1014 0725  
                   l1006 0712                     l1030 067F                     l1022 0670  
                   l1110 078E                     l1102 0761                     l1016 072A  
                   l1008 0713                     l1040 0698                     l1032 0684  
                   l1024 0674                     l1112 07B1                     l1104 0768  
                   l1042 069C                     l1034 068A                     l1050 06B9  
                   l1026 0679                     l1114 07D4                     l1106 0770  
                   l1052 06BE                     l1044 06A6                     l1036 068D  
                   l1028 067B                     l1116 07EA                     l1108 0778  
                   l1054 06C3                     l1046 06AC                     l1038 0694  
                   l1048 06B3                     l1090 073E                     l1082 072F  
                   l1092 073F                     l1084 0734                     l1094 0742  
                   l1086 0738                     l1096 0742                     l1088 073A  
                   l1098 0748                     _main 072F                     btemp 007E  
 __end_of_LCD_GotoCursor 05E0                     start 0000           ??_LCD_Cmd_Init 0070  
       __end_of_LCD_Char 05FE         __end_of_LCD_Init 066D                    ?_main 0070  
        __end_of___awdiv 072F          __end_of___awmod 06C8          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTC 0007                    _TRISA 0085  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        ?_LCD_GotoCursor 0073          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0022                ??_LCD_Cmd 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 007D  
       ___awdiv@quotient 0077          ___awmod@divisor 0079          ___awmod@counter 0020  
   __end_of_LCD_Cmd_Init 05C6                ?_LCD_Char 0070  __end_of__initialization 07FC  
              ?_LCD_Init 0070                LCD_Char@c 0072           __pcstackCOMMON 0070  
      LCD_GotoCursor@cmd 0077        LCD_GotoCursor@col 0073        LCD_GotoCursor@row 0074  
             ??_LCD_Char 0070               ??_LCD_Init 0073               __pmaintext 072F  
                _LCD_Cmd 05FE         ??_LCD_GotoCursor 0074                  ___awdiv 06C8  
                ___awmod 066D                  __ptext1 066D                  __ptext2 06C8  
                __ptext3 062C                  __ptext4 05B8                  __ptext5 05C6  
                __ptext6 05FE                  __ptext7 05E0         ___awmod@dividend 007B  
                main@adc 0027     end_of_initialization 07FC             _LCD_Cmd_Init 05B8  
              _PORTBbits 0006                _TRISBbits 0086               LCD_Cmd@cmd 0072  
    start_initialization 07FC                 ?_LCD_Cmd 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0079  
        LCD_Cmd_Init@cmd 0071                 _LCD_Char 05E0                 _LCD_Init 062C  
               _GO_nDONE 00FA       _LCD_GotoCursor$111 0075           _LCD_GotoCursor 05C6  

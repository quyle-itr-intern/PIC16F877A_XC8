Version 4.0 HI-TECH Software Intermediate Code
"1444 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1444:     struct {
[s S58 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S58 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1443
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1443: typedef union {
[u S57 `S58 1 ]
[n S57 . . ]
"1455
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1455: extern volatile TRISCbits_t TRISCbits __attribute__((address(0x087)));
[v _TRISCbits `VS57 ~T0 @X0 0 e@135 ]
"1376
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1376: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"217
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 217: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"2081
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2081: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"2813
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2813: extern volatile __bit SPEN __attribute__((address(0xC7)));
[v _SPEN `Vb ~T0 @X0 0 e@199 ]
"3032
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 3032: extern volatile __bit TXEN __attribute__((address(0x4C5)));
[v _TXEN `Vb ~T0 @X0 0 e@1221 ]
"2516
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2516: extern volatile __bit CREN __attribute__((address(0xC4)));
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"2741
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2741: extern volatile __bit RCIE __attribute__((address(0x465)));
[v _RCIE `Vb ~T0 @X0 0 e@1125 ]
"461
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 461:     struct {
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF TMR0IF RBIE INTE TMR0IE PEIE GIE ]
"471
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 471:     struct {
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . T0IF . T0IE ]
"460
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 460: typedef union {
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"478
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 478: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"3017
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 3017: extern volatile __bit TRMT __attribute__((address(0x4C1)));
[v _TRMT `Vb ~T0 @X0 0 e@1217 ]
"1060
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1060: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"2744
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2744: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1067
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1067: extern volatile unsigned char RCREG __attribute__((address(0x01A)));
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"40 newmain.c
[; ;newmain.c: 40: void HandleData(char *RX);
[v _HandleData `(v ~T0 @X0 0 ef1`*uc ]
"41
[; ;newmain.c: 41: void ClearRX_Buffer(void);
[v _ClearRX_Buffer `(v ~T0 @X0 0 ef ]
[p mainexit ]
"194 D:\File Install MBLAB IDE\XC8\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
[v F36 `(v ~T0 @X0 1 tf1`ul ]
"12 D:\File Install MBLAB IDE\XC8\pic\include\builtins.h
[v __delay `JF36 ~T0 @X0 0 e ]
[p i __delay ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"12 newmain.c
[p x FOSC  =  HS         ]
"13
[p x WDTE  =  OFF        ]
"14
[p x PWRTE  =  OFF       ]
"15
[p x BOREN  =  OFF       ]
"16
[p x LVP  =  OFF         ]
"17
[p x CPD  =  OFF         ]
"18
[p x WRT  =  OFF         ]
"19
[p x CP  =  OFF          ]
"55 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"219
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 219: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"281
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 281: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"343
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 343: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"405
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 405: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"437
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 437: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"457
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 457: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"535
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 535: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"597
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 597: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"637
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 637: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"644
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 644: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"651
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 651: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"658
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 658: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"733
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 733: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"740
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 740: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"811
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 811: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"818
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 818: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"888
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 888: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"895
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 895: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"902
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 902: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"909
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 909: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"967
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 967: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1062
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1062: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1069
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1069: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1076
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1076: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1083
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1083: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1090
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1090: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1097
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1097: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1155
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1155: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1162
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1162: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1258
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1258: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1328
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1328: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1378
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1378: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1440
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1440: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1502
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1502: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1564
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1564: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1621
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1621: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1683
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1683: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1723
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1723: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1757
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1757: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1819
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1819: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1826
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1826: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1833
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1833: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2002
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2002: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2083
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2083: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2090
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2090: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2160
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2160: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2225
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2225: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2232
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2232: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2291
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2291: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2298
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2298: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2305
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2305: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2312
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2312: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2319
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2319: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2364
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2364: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"32 newmain.c
[; ;newmain.c: 32: char RX_Buffer[50];
[v _RX_Buffer `uc ~T0 @X0 -> 50 `i e ]
"33
[; ;newmain.c: 33: char rx_index = 0;
[v _rx_index `uc ~T0 @X0 1 e ]
[i _rx_index
-> -> 0 `i `uc
]
"43
[; ;newmain.c: 43: void IO_Init()
[v _IO_Init `(v ~T0 @X0 1 ef ]
"44
[; ;newmain.c: 44: {
{
[e :U _IO_Init ]
[f ]
"45
[; ;newmain.c: 45:     TRISCbits.TRISC6 = 0;
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
"46
[; ;newmain.c: 46:     TRISCbits.TRISC7 = 1;
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"47
[; ;newmain.c: 47:     TRISB = 0;
[e = _TRISB -> -> 0 `i `uc ]
"48
[; ;newmain.c: 48:     PORTB = 0x00;
[e = _PORTB -> -> 0 `i `uc ]
"49
[; ;newmain.c: 49: }
[e :UE 100 ]
}
"50
[; ;newmain.c: 50: void UART_Init()
[v _UART_Init `(v ~T0 @X0 1 ef ]
"51
[; ;newmain.c: 51: {
{
[e :U _UART_Init ]
[f ]
"53
[; ;newmain.c: 53:     SPBRG = 32;
[e = _SPBRG -> -> 32 `i `uc ]
"54
[; ;newmain.c: 54:     SPEN = 1;
[e = _SPEN -> -> 1 `i `b ]
"55
[; ;newmain.c: 55:     TXEN = 1;
[e = _TXEN -> -> 1 `i `b ]
"56
[; ;newmain.c: 56:     CREN = 1;
[e = _CREN -> -> 1 `i `b ]
"57
[; ;newmain.c: 57:     RCIE = 1;
[e = _RCIE -> -> 1 `i `b ]
"58
[; ;newmain.c: 58:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"59
[; ;newmain.c: 59:     INTCONbits.PEIE = 1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"60
[; ;newmain.c: 60: }
[e :UE 101 ]
}
"61
[; ;newmain.c: 61: void UART_Transmit(char c)
[v _UART_Transmit `(v ~T0 @X0 1 ef1`uc ]
"62
[; ;newmain.c: 62: {
{
[e :U _UART_Transmit ]
"61
[; ;newmain.c: 61: void UART_Transmit(char c)
[v _c `uc ~T0 @X0 1 r1 ]
"62
[; ;newmain.c: 62: {
[f ]
"63
[; ;newmain.c: 63:     while(!TRMT);
[e $U 103  ]
[e :U 104 ]
[e :U 103 ]
[e $ ! _TRMT 104  ]
[e :U 105 ]
"64
[; ;newmain.c: 64:     TXREG = c;
[e = _TXREG -> _c `uc ]
"65
[; ;newmain.c: 65: }
[e :UE 102 ]
}
"66
[; ;newmain.c: 66: void UART_Transmit_Text(char *str)
[v _UART_Transmit_Text `(v ~T0 @X0 1 ef1`*uc ]
"67
[; ;newmain.c: 67: {
{
[e :U _UART_Transmit_Text ]
"66
[; ;newmain.c: 66: void UART_Transmit_Text(char *str)
[v _str `*uc ~T0 @X0 1 r1 ]
"67
[; ;newmain.c: 67: {
[f ]
"68
[; ;newmain.c: 68:     unsigned char i=0;
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
"69
[; ;newmain.c: 69:     while(str[i] != 0)
[e $U 107  ]
[e :U 108 ]
"70
[; ;newmain.c: 70:     {
{
"71
[; ;newmain.c: 71:         UART_Transmit(str[i]);
[e ( _UART_Transmit (1 *U + _str * -> _i `ux -> -> # *U _str `ui `ux ]
"72
[; ;newmain.c: 72:         i++;
[e ++ _i -> -> 1 `i `uc ]
"73
[; ;newmain.c: 73:     }
}
[e :U 107 ]
"69
[; ;newmain.c: 69:     while(str[i] != 0)
[e $ != -> *U + _str * -> _i `ux -> -> # *U _str `ui `ux `i -> 0 `i 108  ]
[e :U 109 ]
"74
[; ;newmain.c: 74: }
[e :UE 106 ]
}
"75
[; ;newmain.c: 75: void UART_Receive()
[v _UART_Receive `(v ~T0 @X0 1 ef ]
"76
[; ;newmain.c: 76: {
{
[e :U _UART_Receive ]
[f ]
"77
[; ;newmain.c: 77:     if(RCIF)
[e $ ! _RCIF 111  ]
"78
[; ;newmain.c: 78:     {
{
"79
[; ;newmain.c: 79:         char ReceivedData;
[v _ReceivedData `uc ~T0 @X0 1 a ]
"80
[; ;newmain.c: 80:         ReceivedData = RCREG;
[e = _ReceivedData -> _RCREG `uc ]
"81
[; ;newmain.c: 81:         if(ReceivedData != '\n')
[e $ ! != -> _ReceivedData `ui -> 10 `ui 112  ]
"82
[; ;newmain.c: 82:         {
{
"83
[; ;newmain.c: 83:             RX_Buffer[rx_index++] = RCREG;
[e = *U + &U _RX_Buffer * -> ++ _rx_index -> -> 1 `i `uc `ux -> -> # *U &U _RX_Buffer `ui `ux -> _RCREG `uc ]
"84
[; ;newmain.c: 84:         }
}
[e $U 113  ]
"85
[; ;newmain.c: 85:         else
[e :U 112 ]
"86
[; ;newmain.c: 86:         {
{
"87
[; ;newmain.c: 87:             HandleData(RX_Buffer);
[e ( _HandleData (1 &U _RX_Buffer ]
"88
[; ;newmain.c: 88:             ClearRX_Buffer();
[e ( _ClearRX_Buffer ..  ]
"89
[; ;newmain.c: 89:         }
}
[e :U 113 ]
"90
[; ;newmain.c: 90:     }
}
[e :U 111 ]
"91
[; ;newmain.c: 91: }
[e :UE 110 ]
}
"92
[; ;newmain.c: 92: void HandleData(char *RX)
[v _HandleData `(v ~T0 @X0 1 ef1`*uc ]
"93
[; ;newmain.c: 93: {
{
[e :U _HandleData ]
"92
[; ;newmain.c: 92: void HandleData(char *RX)
[v _RX `*uc ~T0 @X0 1 r1 ]
"93
[; ;newmain.c: 93: {
[f ]
"94
[; ;newmain.c: 94:     UART_Transmit_Text(RX);
[e ( _UART_Transmit_Text (1 _RX ]
"95
[; ;newmain.c: 95: }
[e :UE 114 ]
}
"96
[; ;newmain.c: 96: void ClearRX_Buffer(void)
[v _ClearRX_Buffer `(v ~T0 @X0 1 ef ]
"97
[; ;newmain.c: 97: {
{
[e :U _ClearRX_Buffer ]
[f ]
"98
[; ;newmain.c: 98:  char i;
[v _i `uc ~T0 @X0 1 a ]
"99
[; ;newmain.c: 99:  for(i = 0; i < 50; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 50 `i 116  ]
[e $U 117  ]
[e :U 116 ]
"100
[; ;newmain.c: 100:  {
{
"101
[; ;newmain.c: 101:   RX_Buffer[i] = 0;
[e = *U + &U _RX_Buffer * -> _i `ux -> -> # *U &U _RX_Buffer `ui `ux -> -> 0 `i `uc ]
"102
[; ;newmain.c: 102:  }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 50 `i 116  ]
[e :U 117 ]
}
"103
[; ;newmain.c: 103:  rx_index = 0;
[e = _rx_index -> -> 0 `i `uc ]
"104
[; ;newmain.c: 104: }
[e :UE 115 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"105
[; ;newmain.c: 105: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"106
[; ;newmain.c: 106: {
{
[e :U _main ]
[f ]
"107
[; ;newmain.c: 107:     IO_Init();
[e ( _IO_Init ..  ]
"108
[; ;newmain.c: 108:     UART_Init();
[e ( _UART_Init ..  ]
"109
[; ;newmain.c: 109:     unsigned int i = 0;
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
"110
[; ;newmain.c: 110:     char text[20];
[v _text `uc ~T0 @X0 -> 20 `i a ]
"111
[; ;newmain.c: 111:     while(1)
[e :U 121 ]
"112
[; ;newmain.c: 112:     {
{
"114
[; ;newmain.c: 114:         sprintf(text, "Hello World %d\r\n", i++);
[e ( _sprintf (1 , (. , &U _text :s 1C ++ _i -> -> 1 `i `ui ]
"115
[; ;newmain.c: 115:         UART_Transmit_Text(text);
[e ( _UART_Transmit_Text (1 &U _text ]
"116
[; ;newmain.c: 116:         _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"117
[; ;newmain.c: 117:     }
}
[e :U 120 ]
[e $U 121  ]
[e :U 122 ]
"118
[; ;newmain.c: 118: }
[e :UE 119 ]
}
[v $root$_isr1 `(v ~T0 @X0 0 e ]
"119
[; ;newmain.c: 119: void __attribute__((picinterrupt(("")))) isr1()
[v _isr1 `(v ~T1 @X0 1 ef ]
"120
[; ;newmain.c: 120: {
{
[e :U _isr1 ]
[f ]
"121
[; ;newmain.c: 121:     if(RCIE)
[e $ ! _RCIE 124  ]
"122
[; ;newmain.c: 122:     {
{
"123
[; ;newmain.c: 123:         if(RCIF)
[e $ ! _RCIF 125  ]
"124
[; ;newmain.c: 124:         {
{
"125
[; ;newmain.c: 125:             char ReceivedData;
[v _ReceivedData `uc ~T0 @X0 1 a ]
"126
[; ;newmain.c: 126:             ReceivedData = RCREG;
[e = _ReceivedData -> _RCREG `uc ]
"127
[; ;newmain.c: 127:             if(ReceivedData != '\n')
[e $ ! != -> _ReceivedData `ui -> 10 `ui 126  ]
"128
[; ;newmain.c: 128:             {
{
"129
[; ;newmain.c: 129:                 RX_Buffer[rx_index++] = RCREG;
[e = *U + &U _RX_Buffer * -> ++ _rx_index -> -> 1 `i `uc `ux -> -> # *U &U _RX_Buffer `ui `ux -> _RCREG `uc ]
"130
[; ;newmain.c: 130:             }
}
[e $U 127  ]
"131
[; ;newmain.c: 131:             else
[e :U 126 ]
"132
[; ;newmain.c: 132:             {
{
"133
[; ;newmain.c: 133:                 HandleData(RX_Buffer);
[e ( _HandleData (1 &U _RX_Buffer ]
"134
[; ;newmain.c: 134:                 ClearRX_Buffer();
[e ( _ClearRX_Buffer ..  ]
"135
[; ;newmain.c: 135:             }
}
[e :U 127 ]
"136
[; ;newmain.c: 136:         }
}
[e :U 125 ]
"137
[; ;newmain.c: 137:     }
}
[e :U 124 ]
"138
[; ;newmain.c: 138: }
[e :UE 123 ]
}
[p f _sprintf 8388736 ]
[a 1C 72 101 108 108 111 32 87 111 114 108 100 32 37 100 13 10 0 ]



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 10:47:12 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.32
    34                           ; Generated 02/02/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188                           
   189                           	psect	strings
   190  048B                     __pstrings:
   191  048B                     stringtab:
   192  048B                     __stringtab:
   193                           
   194                           ;	String table - string pointers are 1 byte each
   195  048B  1BFF               	btfsc	btemp+1,7
   196  048C  2C95               	ljmp	stringcode
   197  048D  1383               	bcf	3,7
   198  048E  187F               	btfsc	btemp+1,0
   199  048F  1783               	bsf	3,7
   200  0490  0800               	movf	0,w
   201  0491  0A84               	incf	4,f
   202  0492  1903               	skipnz
   203  0493  0AFF               	incf	btemp+1,f
   204  0494  0008               	return
   205  0495                     stringcode:
   206  0495                     stringdir:
   207  0495  3004               	movlw	high stringdir
   208  0496  008A               	movwf	10
   209  0497  0804               	movf	4,w
   210  0498  0A84               	incf	4,f
   211  0499  0782               	addwf	2,f
   212  049A                     __stringbase:
   213  049A  3400               	retlw	0
   214  049B                     __end_of__stringtab:
   215  049B                     _dpowers:
   216  049B  3401               	retlw	1
   217  049C  3400               	retlw	0
   218  049D  340A               	retlw	10
   219  049E  3400               	retlw	0
   220  049F  3464               	retlw	100
   221  04A0  3400               	retlw	0
   222  04A1  34E8               	retlw	232
   223  04A2  3403               	retlw	3
   224  04A3  3410               	retlw	16
   225  04A4  3427               	retlw	39
   226  04A5                     __end_of_dpowers:
   227  0008                     _PORTDbits	set	8
   228  0001                     _TMR0	set	1
   229  001A                     _RCREG	set	26
   230  0019                     _TXREG	set	25
   231  000B                     _INTCONbits	set	11
   232  0006                     _PORTB	set	6
   233  0065                     _RCIF	set	101
   234  00C4                     _CREN	set	196
   235  00C7                     _SPEN	set	199
   236  0088                     _TRISDbits	set	136
   237  0081                     _OPTION_REGbits	set	129
   238  0099                     _SPBRG	set	153
   239  0086                     _TRISB	set	134
   240  0087                     _TRISCbits	set	135
   241  04C1                     _TRMT	set	1217
   242  0465                     _RCIE	set	1125
   243  04C5                     _TXEN	set	1221
   244  04A5                     STR_1:
   245  04A5  3454               	retlw	84	;'T'
   246  04A6  3465               	retlw	101	;'e'
   247  04A7  346D               	retlw	109	;'m'
   248  04A8  3470               	retlw	112	;'p'
   249  04A9  3465               	retlw	101	;'e'
   250  04AA  3472               	retlw	114	;'r'
   251  04AB  3461               	retlw	97	;'a'
   252  04AC  3474               	retlw	116	;'t'
   253  04AD  3475               	retlw	117	;'u'
   254  04AE  3472               	retlw	114	;'r'
   255  04AF  3465               	retlw	101	;'e'
   256  04B0  343A               	retlw	58	;':'
   257  04B1  3420               	retlw	32	;' '
   258  04B2  3425               	retlw	37	;'%'
   259  04B3  3464               	retlw	100	;'d'
   260  04B4  342C               	retlw	44	;','
   261  04B5  3420               	retlw	32	;' '
   262  04B6  3448               	retlw	72	;'H'
   263  04B7  3475               	retlw	117	;'u'
   264  04B8  346D               	retlw	109	;'m'
   265  04B9  3469               	retlw	105	;'i'
   266  04BA  3464               	retlw	100	;'d'
   267  04BB  3469               	retlw	105	;'i'
   268  04BC  3474               	retlw	116	;'t'
   269  04BD  3479               	retlw	121	;'y'
   270  04BE  343A               	retlw	58	;':'
   271  04BF  3420               	retlw	32	;' '
   272  04C0  3425               	retlw	37	;'%'
   273  04C1  3464               	retlw	100	;'d'
   274  04C2  340A               	retlw	10
   275  04C3  3400               	retlw	0
   276  04C4                     STR_2:
   277  04C4  3445               	retlw	69	;'E'
   278  04C5  3472               	retlw	114	;'r'
   279  04C6  3472               	retlw	114	;'r'
   280  04C7  346F               	retlw	111	;'o'
   281  04C8  3472               	retlw	114	;'r'
   282  04C9  340A               	retlw	10
   283  04CA  3400               	retlw	0
   284                           
   285                           	psect	cinit
   286  0015                     start_initialization:	
   287                           ; #config settings
   288                           
   289  0015                     __initialization:
   290                           
   291                           ; Clear objects allocated to COMMON
   292  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   293                           
   294                           ; Clear objects allocated to BANK1
   295  0016  1383               	bcf	3,7	;select IRP bank0
   296  0017  30A0               	movlw	low __pbssBANK1
   297  0018  0084               	movwf	4
   298  0019  30D2               	movlw	low (__pbssBANK1+50)
   299  001A  120A  118A  25F9  120A  118A  	fcall	clear_ram0
   300  001F                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303  001F                     __end_of__initialization:
   304  001F  0183               	clrf	3
   305  0020  120A  118A  2BE7   	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	bssCOMMON
   308  007C                     __pbssCOMMON:
   309  007C                     _rx_index:
   310  007C                     	ds	1
   311                           
   312                           	psect	bssBANK1
   313  00A0                     __pbssBANK1:
   314  00A0                     _RX_Buffer:
   315  00A0                     	ds	50
   316                           
   317                           	psect	clrtext
   318  05F9                     clear_ram0:	
   319                           ;	Called with FSR containing the base address, and
   320                           ;	W with the last address+1
   321                           
   322  05F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   323  05FA                     clrloop0:
   324  05FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   325  05FB  0A84               	incf	4,f	;increment pointer
   326  05FC  0604               	xorwf	4,w	;XOR with final address
   327  05FD  1903               	btfsc	3,2	;have we reached the end yet?
   328  05FE  3400               	retlw	0	;all done for this memory range, return
   329  05FF  0604               	xorwf	4,w	;XOR again to restore value
   330  0600  2DFA               	goto	clrloop0	;do the next byte
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_HandleData:
   335  0070                     ?_ClearRX_Buffer:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_ClearRX_Buffer:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_IO_Init:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_UART_Init:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_UART_Transmit:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_TMR0_Config:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_TMR0_Get_Value:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_TMR0_Set_Value:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_DHT11_Init:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_ReadDHT11:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_RX:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?i1_UART_Transmit:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??i1_UART_Transmit:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     i1UART_Transmit@c:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382  0070                     	ds	1
   383  0071                     ?i1_UART_Transmit_Text:
   384  0071                     ClearRX_Buffer@i:	
   385                           ; 1 bytes @ 0x1
   386                           
   387  0071                     i1UART_Transmit_Text@str:	
   388                           ; 1 bytes @ 0x1
   389                           
   390                           
   391                           ; 2 bytes @ 0x1
   392  0071                     	ds	2
   393  0073                     ??i1_UART_Transmit_Text:
   394                           
   395                           ; 1 bytes @ 0x3
   396  0073                     	ds	1
   397  0074                     i1UART_Transmit_Text@i:
   398                           
   399                           ; 1 bytes @ 0x4
   400  0074                     	ds	1
   401  0075                     ??_HandleData:
   402  0075                     HandleData@RX:	
   403                           ; 1 bytes @ 0x5
   404                           
   405                           
   406                           ; 1 bytes @ 0x5
   407  0075                     	ds	1
   408  0076                     ??_RX:
   409                           
   410                           ; 1 bytes @ 0x6
   411  0076                     	ds	5
   412  007B                     RX@ReceivedData:
   413                           
   414                           ; 1 bytes @ 0xB
   415  007B                     	ds	1
   416                           
   417                           	psect	cstackBANK0
   418  0020                     __pcstackBANK0:
   419  0020                     ??_IO_Init:
   420  0020                     ??_UART_Init:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0020                     ??_UART_Transmit:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0020                     ??_TMR0_Config:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     ??_TMR0_Get_Value:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0020                     ??_TMR0_Set_Value:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0020                     ??_DHT11_Init:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0020                     ?___lwdiv:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0020                     UART_Transmit@c:	
   442                           ; 2 bytes @ 0x0
   443                           
   444  0020                     TMR0_Set_Value@value:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0020                     ___lwdiv@divisor:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 2 bytes @ 0x0
   452  0020                     	ds	1
   453  0021                     ?_UART_Transmit_Text:
   454  0021                     ??_ReadDHT11:	
   455                           ; 1 bytes @ 0x1
   456                           
   457  0021                     UART_Transmit_Text@str:	
   458                           ; 1 bytes @ 0x1
   459                           
   460                           
   461                           ; 2 bytes @ 0x1
   462  0021                     	ds	1
   463  0022                     ___lwdiv@dividend:
   464                           
   465                           ; 2 bytes @ 0x2
   466  0022                     	ds	1
   467  0023                     ??_UART_Transmit_Text:
   468                           
   469                           ; 1 bytes @ 0x3
   470  0023                     	ds	1
   471  0024                     ??___lwdiv:
   472  0024                     UART_Transmit_Text@i:	
   473                           ; 1 bytes @ 0x4
   474                           
   475                           
   476                           ; 1 bytes @ 0x4
   477  0024                     	ds	1
   478  0025                     ReadDHT11@u8Check:
   479  0025                     ___lwdiv@quotient:	
   480                           ; 1 bytes @ 0x5
   481                           
   482                           
   483                           ; 2 bytes @ 0x5
   484  0025                     	ds	1
   485  0026                     ReadDHT11@i:
   486                           
   487                           ; 1 bytes @ 0x6
   488  0026                     	ds	1
   489  0027                     ReadDHT11@u8Buff:
   490  0027                     ___lwdiv@counter:	
   491                           ; 1 bytes @ 0x7
   492                           
   493                           
   494                           ; 1 bytes @ 0x7
   495  0027                     	ds	1
   496  0028                     ?___lwmod:
   497  0028                     ReadDHT11@u8TimeOut:	
   498                           ; 2 bytes @ 0x8
   499                           
   500  0028                     ___lwmod@divisor:	
   501                           ; 1 bytes @ 0x8
   502                           
   503                           
   504                           ; 2 bytes @ 0x8
   505  0028                     	ds	2
   506  002A                     ___lwmod@dividend:
   507                           
   508                           ; 2 bytes @ 0xA
   509  002A                     	ds	2
   510  002C                     ??___lwmod:
   511                           
   512                           ; 1 bytes @ 0xC
   513  002C                     	ds	1
   514  002D                     ___lwmod@counter:
   515                           
   516                           ; 1 bytes @ 0xD
   517  002D                     	ds	1
   518  002E                     ?_sprintf:
   519  002E                     sprintf@f:	
   520                           ; 2 bytes @ 0xE
   521                           
   522                           
   523                           ; 1 bytes @ 0xE
   524  002E                     	ds	5
   525  0033                     ??_sprintf:
   526                           
   527                           ; 1 bytes @ 0x13
   528  0033                     	ds	3
   529  0036                     sprintf@ap:
   530                           
   531                           ; 1 bytes @ 0x16
   532  0036                     	ds	1
   533  0037                     sprintf@flag:
   534                           
   535                           ; 1 bytes @ 0x17
   536  0037                     	ds	1
   537  0038                     sprintf@prec:
   538                           
   539                           ; 1 bytes @ 0x18
   540  0038                     	ds	1
   541  0039                     sprintf@val:
   542                           
   543                           ; 2 bytes @ 0x19
   544  0039                     	ds	2
   545  003B                     sprintf@sp:
   546                           
   547                           ; 1 bytes @ 0x1B
   548  003B                     	ds	1
   549  003C                     sprintf@c:
   550                           
   551                           ; 1 bytes @ 0x1C
   552  003C                     	ds	1
   553  003D                     ??_main:
   554                           
   555                           ; 1 bytes @ 0x1D
   556  003D                     	ds	5
   557  0042                     main@text:
   558                           
   559                           ; 40 bytes @ 0x22
   560  0042                     	ds	40
   561  006A                     main@data:
   562                           
   563                           ; 5 bytes @ 0x4A
   564  006A                     	ds	5
   565                           
   566                           	psect	maintext
   567  03E7                     __pmaintext:	
   568 ;;
   569 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   570 ;;
   571 ;; *************** function _main *****************
   572 ;; Defined at:
   573 ;;		line 367 in file "newmain.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  text           40   34[BANK0 ] unsigned char [40]
   578 ;;  data            5   74[BANK0 ] unsigned char [5]
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B00/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0      45       0       0       0
   590 ;;      Temps:          0       5       0       0       0
   591 ;;      Totals:         0      50       0       0       0
   592 ;;Total ram usage:       50 bytes
   593 ;; Hardware stack levels required when called: 6
   594 ;; This function calls:
   595 ;;		_DHT11_Init
   596 ;;		_IO_Init
   597 ;;		_ReadDHT11
   598 ;;		_UART_Init
   599 ;;		_UART_Transmit_Text
   600 ;;		_sprintf
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _main
   608  03E7                     _main:
   609  03E7                     l1788:	
   610                           ;incstack = 0
   611                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   612                           
   613                           
   614                           ;newmain.c: 369:     unsigned char data[5];;newmain.c: 370:     char text[40];;newmain.c
      +                          : 371:     IO_Init();
   615  03E7  120A  118A  25F0  120A  118A  	fcall	_IO_Init
   616  03EC                     l1790:
   617                           
   618                           ;newmain.c: 372:     UART_Init();
   619  03EC  120A  118A  259A  120A  118A  	fcall	_UART_Init
   620  03F1                     l1792:
   621                           
   622                           ;newmain.c: 373:     DHT11_Init();
   623  03F1  120A  118A  25CD  120A  118A  	fcall	_DHT11_Init
   624  03F6                     l1794:
   625                           
   626                           ;newmain.c: 376:     {;newmain.c: 377:         if(ReadDHT11(data) == 1)
   627  03F6  306A               	movlw	(low (main@data| 0))& (0+255)
   628  03F7  120A  118A  2023  120A  118A  	fcall	_ReadDHT11
   629  03FC  3A01               	xorlw	1
   630  03FD  1D03               	skipz
   631  03FE  2C00               	goto	u1651
   632  03FF  2C01               	goto	u1650
   633  0400                     u1651:
   634  0400  2C27               	goto	l1798
   635  0401                     u1650:
   636  0401                     l1796:
   637                           
   638                           ;newmain.c: 378:         {;newmain.c: 379:             sprintf(text, "Temperature: %d, H
      +                          umidity: %d\n", data[2], data[0]);
   639  0401  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   640  0402  1283               	bcf	3,5	;RP0=0, select bank0
   641  0403  1303               	bcf	3,6	;RP1=0, select bank0
   642  0404  00BD               	movwf	??_main
   643  0405  083D               	movf	??_main,w
   644  0406  00AE               	movwf	sprintf@f
   645  0407  086C               	movf	main@data+2,w
   646  0408  00BE               	movwf	??_main+1
   647  0409  01BF               	clrf	??_main+2
   648  040A  083E               	movf	??_main+1,w
   649  040B  00AF               	movwf	?_sprintf+1
   650  040C  083F               	movf	??_main+2,w
   651  040D  00B0               	movwf	?_sprintf+2
   652  040E  086A               	movf	main@data,w
   653  040F  00C0               	movwf	??_main+3
   654  0410  01C1               	clrf	??_main+4
   655  0411  0840               	movf	??_main+3,w
   656  0412  00B1               	movwf	?_sprintf+3
   657  0413  0841               	movf	??_main+4,w
   658  0414  00B2               	movwf	?_sprintf+4
   659  0415  3042               	movlw	(low (main@text| 0))& (0+255)
   660  0416  120A  118A  22FD  120A  118A  	fcall	_sprintf
   661                           
   662                           ;newmain.c: 380:             UART_Transmit_Text(text);
   663  041B  3042               	movlw	(low (main@text| 0))& (0+255)
   664  041C  1283               	bcf	3,5	;RP0=0, select bank0
   665  041D  1303               	bcf	3,6	;RP1=0, select bank0
   666  041E  00A1               	movwf	UART_Transmit_Text@str
   667  041F  3000               	movlw	0
   668  0420  00A2               	movwf	UART_Transmit_Text@str+1
   669  0421  120A  118A  2542  120A  118A  	fcall	_UART_Transmit_Text
   670                           
   671                           ;newmain.c: 381:         }
   672  0426  2C32               	goto	l1800
   673  0427                     l1798:
   674                           
   675                           ;newmain.c: 383:         {;newmain.c: 384:             UART_Transmit_Text("Error\n");
   676  0427  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   677  0428  1283               	bcf	3,5	;RP0=0, select bank0
   678  0429  1303               	bcf	3,6	;RP1=0, select bank0
   679  042A  00A1               	movwf	UART_Transmit_Text@str
   680  042B  3080               	movlw	128
   681  042C  00A2               	movwf	UART_Transmit_Text@str+1
   682  042D  120A  118A  2542  120A  118A  	fcall	_UART_Transmit_Text
   683  0432                     l1800:
   684                           
   685                           ;newmain.c: 386:         _delay((unsigned long)((500)*(20000000/4000.0)));
   686  0432  300D               	movlw	13
   687  0433  1283               	bcf	3,5	;RP0=0, select bank0
   688  0434  1303               	bcf	3,6	;RP1=0, select bank0
   689  0435  00BF               	movwf	??_main+2
   690  0436  30AF               	movlw	175
   691  0437  00BE               	movwf	??_main+1
   692  0438  30B5               	movlw	181
   693  0439  00BD               	movwf	??_main
   694  043A                     u1697:
   695  043A  0BBD               	decfsz	??_main,f
   696  043B  2C3A               	goto	u1697
   697  043C  0BBE               	decfsz	??_main+1,f
   698  043D  2C3A               	goto	u1697
   699  043E  0BBF               	decfsz	??_main+2,f
   700  043F  2C3A               	goto	u1697
   701  0440  2C41               	nop2
   702  0441  2BF6               	goto	l1794
   703  0442  120A  118A  2812   	ljmp	start
   704  0445                     __end_of_main:
   705                           
   706                           	psect	text1
   707  02FD                     __ptext1:	
   708 ;; *************** function _sprintf *****************
   709 ;; Defined at:
   710 ;;		line 505 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  sp              1    wreg     PTR unsigned char 
   713 ;;		 -> main@text(40), 
   714 ;;  f               1   14[BANK0 ] PTR const unsigned char 
   715 ;;		 -> STR_1(31), 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  sp              1   27[BANK0 ] PTR unsigned char 
   718 ;;		 -> main@text(40), 
   719 ;;  tmpval          4    0        struct .
   720 ;;  val             2   25[BANK0 ] unsigned int 
   721 ;;  cp              2    0        PTR const unsigned char 
   722 ;;  len             2    0        unsigned int 
   723 ;;  c               1   28[BANK0 ] unsigned char 
   724 ;;  prec            1   24[BANK0 ] char 
   725 ;;  flag            1   23[BANK0 ] unsigned char 
   726 ;;  ap              1   22[BANK0 ] PTR void [1]
   727 ;;		 -> ?_sprintf(2), 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  2   14[BANK0 ] int 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       5       0       0       0
   738 ;;      Locals:         0       7       0       0       0
   739 ;;      Temps:          0       3       0       0       0
   740 ;;      Totals:         0      15       0       0       0
   741 ;;Total ram usage:       15 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 5
   744 ;; This function calls:
   745 ;;		___lwdiv
   746 ;;		___lwmod
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _sprintf
   754  02FD                     _sprintf:
   755                           
   756                           ;incstack = 0
   757                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   758                           ;sprintf@sp stored from wreg
   759  02FD  1283               	bcf	3,5	;RP0=0, select bank0
   760  02FE  1303               	bcf	3,6	;RP1=0, select bank0
   761  02FF  00BB               	movwf	sprintf@sp
   762  0300                     l1712:
   763                           
   764                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, 
      +                          const char * f, ...);D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 506:
      +                           {;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\F
      +                          ile Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 521:  signed char prec;;D:\File Install 
      +                          MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
   765  0300  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   766  0301  00B3               	movwf	??_sprintf
   767  0302  0833               	movf	??_sprintf,w
   768  0303  00B6               	movwf	sprintf@ap
   769                           
   770                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
   771  0304  2BD0               	goto	l1764
   772  0305                     l1714:
   773                           
   774                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
   775  0305  3025               	movlw	37
   776  0306  063C               	xorwf	sprintf@c,w
   777  0307  1903               	btfsc	3,2
   778  0308  2B0A               	goto	u1561
   779  0309  2B0B               	goto	u1560
   780  030A                     u1561:
   781  030A  2B17               	goto	l1720
   782  030B                     u1560:
   783  030B                     l1716:
   784                           
   785                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 557:   {;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   786  030B  083C               	movf	sprintf@c,w
   787  030C  00B3               	movwf	??_sprintf
   788  030D  083B               	movf	sprintf@sp,w
   789  030E  0084               	movwf	4
   790  030F  0833               	movf	??_sprintf,w
   791  0310  1383               	bcf	3,7	;select IRP bank0
   792  0311  0080               	movwf	0
   793  0312                     l1718:
   794  0312  3001               	movlw	1
   795  0313  00B3               	movwf	??_sprintf
   796  0314  0833               	movf	??_sprintf,w
   797  0315  07BB               	addwf	sprintf@sp,f
   798                           
   799                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 559:    continue;
   800  0316  2BD0               	goto	l1764
   801  0317                     l1720:
   802                           
   803                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   804  0317  01B7               	clrf	sprintf@flag
   805  0318                     l1724:	
   806                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) 
      +                          {
   807                           
   808  0318  3001               	movlw	1
   809  0319  07AE               	addwf	sprintf@f,f
   810  031A  30FF               	movlw	-1
   811  031B  072E               	addwf	sprintf@f,w
   812  031C  0084               	movwf	4
   813  031D  120A  118A  2495  120A  118A  	fcall	stringdir
   814  0322  00BC               	movwf	sprintf@c
   815  0323  00B3               	movwf	??_sprintf
   816  0324  01B4               	clrf	??_sprintf+1
   817                           
   818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   819                           ; Switch size 1, requested type "simple"
   820                           ; Number of cases is 1, Range of values is 0 to 0
   821                           ; switch strategies available:
   822                           ; Name         Instructions Cycles
   823                           ; simple_byte            4     3 (average)
   824                           ; direct_byte           11     8 (fixed)
   825                           ; jumptable            260     6 (fixed)
   826                           ;	Chosen strategy is simple_byte
   827  0325  0834               	movf	??_sprintf+1,w
   828  0326  3A00               	xorlw	0	; case 0
   829  0327  1903               	skipnz
   830  0328  2B2A               	goto	l1838
   831  0329  2BD0               	goto	l1764
   832  032A                     l1838:
   833                           
   834                           ; Switch size 1, requested type "simple"
   835                           ; Number of cases is 3, Range of values is 0 to 105
   836                           ; switch strategies available:
   837                           ; Name         Instructions Cycles
   838                           ; simple_byte           10     6 (average)
   839                           ; jumptable            260     6 (fixed)
   840                           ;	Chosen strategy is simple_byte
   841  032A  0833               	movf	??_sprintf,w
   842  032B  3A00               	xorlw	0	; case 0
   843  032C  1903               	skipnz
   844  032D  2BE2               	goto	l1766
   845  032E  3A64               	xorlw	100	; case 100
   846  032F  1903               	skipnz
   847  0330  2B35               	goto	l1726
   848  0331  3A0D               	xorlw	13	; case 105
   849  0332  1903               	skipnz
   850  0333  2B35               	goto	l1726
   851  0334  2BD0               	goto	l1764
   852  0335                     l1726:
   853                           
   854                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)
      +                          __va_arg((*(int **)ap), (int)0));
   855  0335  0836               	movf	sprintf@ap,w
   856  0336  0084               	movwf	4
   857  0337  1383               	bcf	3,7	;select IRP bank0
   858  0338  0800               	movf	0,w
   859  0339  00B9               	movwf	sprintf@val
   860  033A  0A84               	incf	4,f
   861  033B  0800               	movf	0,w
   862  033C  00BA               	movwf	sprintf@val+1
   863  033D                     l1728:
   864  033D  3002               	movlw	2
   865  033E  00B3               	movwf	??_sprintf
   866  033F  0833               	movf	??_sprintf,w
   867  0340  07B6               	addwf	sprintf@ap,f
   868  0341                     l1730:
   869                           
   870                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0
      +                          ) {
   871  0341  1FBA               	btfss	sprintf@val+1,7
   872  0342  2B44               	goto	u1571
   873  0343  2B45               	goto	u1570
   874  0344                     u1571:
   875  0344  2B4E               	goto	l1736
   876  0345                     u1570:
   877  0345                     l1732:
   878                           
   879                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
   880  0345  3003               	movlw	3
   881  0346  00B3               	movwf	??_sprintf
   882  0347  0833               	movf	??_sprintf,w
   883  0348  04B7               	iorwf	sprintf@flag,f
   884  0349                     l1734:
   885                           
   886                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
   887  0349  09B9               	comf	sprintf@val,f
   888  034A  09BA               	comf	sprintf@val+1,f
   889  034B  0AB9               	incf	sprintf@val,f
   890  034C  1903               	skipnz
   891  034D  0ABA               	incf	sprintf@val+1,f
   892  034E                     l1736:
   893                           
   894                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1292:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpower
      +                          s/sizeof dpowers[0] ; c++)
   895  034E  01BC               	clrf	sprintf@c
   896  034F  0ABC               	incf	sprintf@c,f
   897  0350                     l1742:
   898                           
   899                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowe
      +                          rs[c])
   900  0350  083C               	movf	sprintf@c,w
   901  0351  00B3               	movwf	??_sprintf
   902  0352  0733               	addwf	??_sprintf,w
   903  0353  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   904  0354  0084               	movwf	4
   905  0355  120A  118A  2495  120A  118A  	fcall	stringdir
   906  035A  00B4               	movwf	??_sprintf+1
   907  035B  120A  118A  2495  120A  118A  	fcall	stringdir
   908  0360  00B5               	movwf	??_sprintf+2
   909  0361  0835               	movf	??_sprintf+2,w
   910  0362  023A               	subwf	sprintf@val+1,w
   911  0363  1D03               	skipz
   912  0364  2B67               	goto	u1585
   913  0365  0834               	movf	??_sprintf+1,w
   914  0366  0239               	subwf	sprintf@val,w
   915  0367                     u1585:
   916  0367  1803               	skipnc
   917  0368  2B6A               	goto	u1581
   918  0369  2B6B               	goto	u1580
   919  036A                     u1581:
   920  036A  2B6C               	goto	l1746
   921  036B                     u1580:
   922  036B  2B76               	goto	l1748
   923  036C                     l1746:
   924  036C  3001               	movlw	1
   925  036D  00B3               	movwf	??_sprintf
   926  036E  0833               	movf	??_sprintf,w
   927  036F  07BC               	addwf	sprintf@c,f
   928  0370  3005               	movlw	5
   929  0371  063C               	xorwf	sprintf@c,w
   930  0372  1D03               	btfss	3,2
   931  0373  2B75               	goto	u1591
   932  0374  2B76               	goto	u1590
   933  0375                     u1591:
   934  0375  2B50               	goto	l1742
   935  0376                     u1590:
   936  0376                     l1748:
   937                           
   938                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   939  0376  0837               	movf	sprintf@flag,w
   940  0377  3903               	andlw	3
   941  0378  1903               	btfsc	3,2
   942  0379  2B7B               	goto	u1601
   943  037A  2B7C               	goto	u1600
   944  037B                     u1601:
   945  037B  2B87               	goto	l1754
   946  037C                     u1600:
   947  037C                     l1750:
   948                           
   949                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-'
      +                          )));
   950  037C  302D               	movlw	45
   951  037D  00B3               	movwf	??_sprintf
   952  037E  083B               	movf	sprintf@sp,w
   953  037F  0084               	movwf	4
   954  0380  0833               	movf	??_sprintf,w
   955  0381  1383               	bcf	3,7	;select IRP bank0
   956  0382  0080               	movwf	0
   957  0383                     l1752:
   958  0383  3001               	movlw	1
   959  0384  00B3               	movwf	??_sprintf
   960  0385  0833               	movf	??_sprintf,w
   961  0386  07BB               	addwf	sprintf@sp,f
   962  0387                     l1754:
   963                           
   964                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1495:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   965  0387  083C               	movf	sprintf@c,w
   966  0388  00B3               	movwf	??_sprintf
   967  0389  0833               	movf	??_sprintf,w
   968  038A  00B8               	movwf	sprintf@prec
   969                           
   970                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
   971  038B  2BC7               	goto	l1762
   972  038C                     l1756:
   973                           
   974                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned
      +                           char)prec]) % 10 + '0';
   975  038C  300A               	movlw	10
   976  038D  00A8               	movwf	___lwmod@divisor
   977  038E  3000               	movlw	0
   978  038F  00A9               	movwf	___lwmod@divisor+1
   979  0390  0838               	movf	sprintf@prec,w
   980  0391  00B3               	movwf	??_sprintf
   981  0392  0733               	addwf	??_sprintf,w
   982  0393  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   983  0394  0084               	movwf	4
   984  0395  120A  118A  2495  120A  118A  	fcall	stringdir
   985  039A  00A0               	movwf	___lwdiv@divisor
   986  039B  120A  118A  2495  120A  118A  	fcall	stringdir
   987  03A0  00A1               	movwf	___lwdiv@divisor+1
   988  03A1  083A               	movf	sprintf@val+1,w
   989  03A2  00A3               	movwf	___lwdiv@dividend+1
   990  03A3  0839               	movf	sprintf@val,w
   991  03A4  00A2               	movwf	___lwdiv@dividend
   992  03A5  120A  118A  2445  120A  118A  	fcall	___lwdiv
   993  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   994  03AB  1303               	bcf	3,6	;RP1=0, select bank0
   995  03AC  0821               	movf	?___lwdiv+1,w
   996  03AD  00AB               	movwf	___lwmod@dividend+1
   997  03AE  0820               	movf	?___lwdiv,w
   998  03AF  00AA               	movwf	___lwmod@dividend
   999  03B0  120A  118A  24CB  120A  118A  	fcall	___lwmod
  1000  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1001  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1002  03B7  0828               	movf	?___lwmod,w
  1003  03B8  3E30               	addlw	48
  1004  03B9  00B4               	movwf	??_sprintf+1
  1005  03BA  0834               	movf	??_sprintf+1,w
  1006  03BB  00BC               	movwf	sprintf@c
  1007  03BC                     l1758:
  1008                           
  1009                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1549:    };D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1010  03BC  083C               	movf	sprintf@c,w
  1011  03BD  00B3               	movwf	??_sprintf
  1012  03BE  083B               	movf	sprintf@sp,w
  1013  03BF  0084               	movwf	4
  1014  03C0  0833               	movf	??_sprintf,w
  1015  03C1  1383               	bcf	3,7	;select IRP bank0
  1016  03C2  0080               	movwf	0
  1017  03C3                     l1760:
  1018  03C3  3001               	movlw	1
  1019  03C4  00B3               	movwf	??_sprintf
  1020  03C5  0833               	movf	??_sprintf,w
  1021  03C6  07BB               	addwf	sprintf@sp,f
  1022  03C7                     l1762:
  1023                           
  1024                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1025  03C7  30FF               	movlw	255
  1026  03C8  00B3               	movwf	??_sprintf
  1027  03C9  0833               	movf	??_sprintf,w
  1028  03CA  07B8               	addwf	sprintf@prec,f
  1029  03CB  0A38               	incf	sprintf@prec,w
  1030  03CC  1D03               	btfss	3,2
  1031  03CD  2BCF               	goto	u1611
  1032  03CE  2BD0               	goto	u1610
  1033  03CF                     u1611:
  1034  03CF  2B8C               	goto	l1756
  1035  03D0                     u1610:
  1036  03D0                     l1764:
  1037                           
  1038                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1039  03D0  3001               	movlw	1
  1040  03D1  07AE               	addwf	sprintf@f,f
  1041  03D2  30FF               	movlw	-1
  1042  03D3  072E               	addwf	sprintf@f,w
  1043  03D4  0084               	movwf	4
  1044  03D5  120A  118A  2495  120A  118A  	fcall	stringdir
  1045  03DA  00B3               	movwf	??_sprintf
  1046  03DB  0833               	movf	??_sprintf,w
  1047  03DC  00BC               	movwf	sprintf@c
  1048  03DD  083C               	movf	sprintf@c,w
  1049  03DE  1D03               	btfss	3,2
  1050  03DF  2BE1               	goto	u1621
  1051  03E0  2BE2               	goto	u1620
  1052  03E1                     u1621:
  1053  03E1  2B05               	goto	l1714
  1054  03E2                     u1620:
  1055  03E2                     l1766:
  1056                           
  1057                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1058  03E2  083B               	movf	sprintf@sp,w
  1059  03E3  0084               	movwf	4
  1060  03E4  1383               	bcf	3,7	;select IRP bank0
  1061  03E5  0180               	clrf	0
  1062  03E6                     l308:
  1063  03E6  0008               	return
  1064  03E7                     __end_of_sprintf:
  1065                           
  1066                           	psect	text2
  1067  04CB                     __ptext2:	
  1068 ;; *************** function ___lwmod *****************
  1069 ;; Defined at:
  1070 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  divisor         2    8[BANK0 ] unsigned int 
  1073 ;;  dividend        2   10[BANK0 ] unsigned int 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  counter         1   13[BANK0 ] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2    8[BANK0 ] unsigned int 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       4       0       0       0
  1086 ;;      Locals:         0       1       0       0       0
  1087 ;;      Temps:          0       1       0       0       0
  1088 ;;      Totals:         0       6       0       0       0
  1089 ;;Total ram usage:        6 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 4
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_sprintf
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function ___lwmod
  1101  04CB                     ___lwmod:
  1102  04CB                     l1370:	
  1103                           ;incstack = 0
  1104                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1105                           
  1106  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1107  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1108  04CD  0828               	movf	___lwmod@divisor,w
  1109  04CE  0429               	iorwf	___lwmod@divisor+1,w
  1110  04CF  1903               	btfsc	3,2
  1111  04D0  2CD2               	goto	u941
  1112  04D1  2CD3               	goto	u940
  1113  04D2                     u941:
  1114  04D2  2D02               	goto	l1388
  1115  04D3                     u940:
  1116  04D3                     l1372:
  1117  04D3  01AD               	clrf	___lwmod@counter
  1118  04D4  0AAD               	incf	___lwmod@counter,f
  1119  04D5  2CE1               	goto	l1378
  1120  04D6                     l1374:
  1121  04D6  3001               	movlw	1
  1122  04D7                     u955:
  1123  04D7  1003               	clrc
  1124  04D8  0DA8               	rlf	___lwmod@divisor,f
  1125  04D9  0DA9               	rlf	___lwmod@divisor+1,f
  1126  04DA  3EFF               	addlw	-1
  1127  04DB  1D03               	skipz
  1128  04DC  2CD7               	goto	u955
  1129  04DD                     l1376:
  1130  04DD  3001               	movlw	1
  1131  04DE  00AC               	movwf	??___lwmod
  1132  04DF  082C               	movf	??___lwmod,w
  1133  04E0  07AD               	addwf	___lwmod@counter,f
  1134  04E1                     l1378:
  1135  04E1  1FA9               	btfss	___lwmod@divisor+1,7
  1136  04E2  2CE4               	goto	u961
  1137  04E3  2CE5               	goto	u960
  1138  04E4                     u961:
  1139  04E4  2CD6               	goto	l1374
  1140  04E5                     u960:
  1141  04E5                     l1380:
  1142  04E5  0829               	movf	___lwmod@divisor+1,w
  1143  04E6  022B               	subwf	___lwmod@dividend+1,w
  1144  04E7  1D03               	skipz
  1145  04E8  2CEB               	goto	u975
  1146  04E9  0828               	movf	___lwmod@divisor,w
  1147  04EA  022A               	subwf	___lwmod@dividend,w
  1148  04EB                     u975:
  1149  04EB  1C03               	skipc
  1150  04EC  2CEE               	goto	u971
  1151  04ED  2CEF               	goto	u970
  1152  04EE                     u971:
  1153  04EE  2CF5               	goto	l1384
  1154  04EF                     u970:
  1155  04EF                     l1382:
  1156  04EF  0828               	movf	___lwmod@divisor,w
  1157  04F0  02AA               	subwf	___lwmod@dividend,f
  1158  04F1  0829               	movf	___lwmod@divisor+1,w
  1159  04F2  1C03               	skipc
  1160  04F3  03AB               	decf	___lwmod@dividend+1,f
  1161  04F4  02AB               	subwf	___lwmod@dividend+1,f
  1162  04F5                     l1384:
  1163  04F5  3001               	movlw	1
  1164  04F6                     u985:
  1165  04F6  1003               	clrc
  1166  04F7  0CA9               	rrf	___lwmod@divisor+1,f
  1167  04F8  0CA8               	rrf	___lwmod@divisor,f
  1168  04F9  3EFF               	addlw	-1
  1169  04FA  1D03               	skipz
  1170  04FB  2CF6               	goto	u985
  1171  04FC                     l1386:
  1172  04FC  3001               	movlw	1
  1173  04FD  02AD               	subwf	___lwmod@counter,f
  1174  04FE  1D03               	btfss	3,2
  1175  04FF  2D01               	goto	u991
  1176  0500  2D02               	goto	u990
  1177  0501                     u991:
  1178  0501  2CE5               	goto	l1380
  1179  0502                     u990:
  1180  0502                     l1388:
  1181  0502  082B               	movf	___lwmod@dividend+1,w
  1182  0503  00A9               	movwf	?___lwmod+1
  1183  0504  082A               	movf	___lwmod@dividend,w
  1184  0505  00A8               	movwf	?___lwmod
  1185  0506                     l594:
  1186  0506  0008               	return
  1187  0507                     __end_of___lwmod:
  1188                           
  1189                           	psect	text3
  1190  0445                     __ptext3:	
  1191 ;; *************** function ___lwdiv *****************
  1192 ;; Defined at:
  1193 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  divisor         2    0[BANK0 ] unsigned int 
  1196 ;;  dividend        2    2[BANK0 ] unsigned int 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  quotient        2    5[BANK0 ] unsigned int 
  1199 ;;  counter         1    7[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  2    0[BANK0 ] unsigned int 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       4       0       0       0
  1210 ;;      Locals:         0       3       0       0       0
  1211 ;;      Temps:          0       1       0       0       0
  1212 ;;      Totals:         0       8       0       0       0
  1213 ;;Total ram usage:        8 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 4
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_sprintf
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function ___lwdiv
  1225  0445                     ___lwdiv:
  1226  0445                     l1344:	
  1227                           ;incstack = 0
  1228                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1229                           
  1230  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0446  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0447  01A5               	clrf	___lwdiv@quotient
  1233  0448  01A6               	clrf	___lwdiv@quotient+1
  1234  0449                     l1346:
  1235  0449  0820               	movf	___lwdiv@divisor,w
  1236  044A  0421               	iorwf	___lwdiv@divisor+1,w
  1237  044B  1903               	btfsc	3,2
  1238  044C  2C4E               	goto	u871
  1239  044D  2C4F               	goto	u870
  1240  044E                     u871:
  1241  044E  2C86               	goto	l1366
  1242  044F                     u870:
  1243  044F                     l1348:
  1244  044F  01A7               	clrf	___lwdiv@counter
  1245  0450  0AA7               	incf	___lwdiv@counter,f
  1246  0451  2C5D               	goto	l1354
  1247  0452                     l1350:
  1248  0452  3001               	movlw	1
  1249  0453                     u885:
  1250  0453  1003               	clrc
  1251  0454  0DA0               	rlf	___lwdiv@divisor,f
  1252  0455  0DA1               	rlf	___lwdiv@divisor+1,f
  1253  0456  3EFF               	addlw	-1
  1254  0457  1D03               	skipz
  1255  0458  2C53               	goto	u885
  1256  0459                     l1352:
  1257  0459  3001               	movlw	1
  1258  045A  00A4               	movwf	??___lwdiv
  1259  045B  0824               	movf	??___lwdiv,w
  1260  045C  07A7               	addwf	___lwdiv@counter,f
  1261  045D                     l1354:
  1262  045D  1FA1               	btfss	___lwdiv@divisor+1,7
  1263  045E  2C60               	goto	u891
  1264  045F  2C61               	goto	u890
  1265  0460                     u891:
  1266  0460  2C52               	goto	l1350
  1267  0461                     u890:
  1268  0461                     l1356:
  1269  0461  3001               	movlw	1
  1270  0462                     u905:
  1271  0462  1003               	clrc
  1272  0463  0DA5               	rlf	___lwdiv@quotient,f
  1273  0464  0DA6               	rlf	___lwdiv@quotient+1,f
  1274  0465  3EFF               	addlw	-1
  1275  0466  1D03               	skipz
  1276  0467  2C62               	goto	u905
  1277  0468  0821               	movf	___lwdiv@divisor+1,w
  1278  0469  0223               	subwf	___lwdiv@dividend+1,w
  1279  046A  1D03               	skipz
  1280  046B  2C6E               	goto	u915
  1281  046C  0820               	movf	___lwdiv@divisor,w
  1282  046D  0222               	subwf	___lwdiv@dividend,w
  1283  046E                     u915:
  1284  046E  1C03               	skipc
  1285  046F  2C71               	goto	u911
  1286  0470  2C72               	goto	u910
  1287  0471                     u911:
  1288  0471  2C79               	goto	l1362
  1289  0472                     u910:
  1290  0472                     l1358:
  1291  0472  0820               	movf	___lwdiv@divisor,w
  1292  0473  02A2               	subwf	___lwdiv@dividend,f
  1293  0474  0821               	movf	___lwdiv@divisor+1,w
  1294  0475  1C03               	skipc
  1295  0476  03A3               	decf	___lwdiv@dividend+1,f
  1296  0477  02A3               	subwf	___lwdiv@dividend+1,f
  1297  0478                     l1360:
  1298  0478  1425               	bsf	___lwdiv@quotient,0
  1299  0479                     l1362:
  1300  0479  3001               	movlw	1
  1301  047A                     u925:
  1302  047A  1003               	clrc
  1303  047B  0CA1               	rrf	___lwdiv@divisor+1,f
  1304  047C  0CA0               	rrf	___lwdiv@divisor,f
  1305  047D  3EFF               	addlw	-1
  1306  047E  1D03               	skipz
  1307  047F  2C7A               	goto	u925
  1308  0480                     l1364:
  1309  0480  3001               	movlw	1
  1310  0481  02A7               	subwf	___lwdiv@counter,f
  1311  0482  1D03               	btfss	3,2
  1312  0483  2C85               	goto	u931
  1313  0484  2C86               	goto	u930
  1314  0485                     u931:
  1315  0485  2C61               	goto	l1356
  1316  0486                     u930:
  1317  0486                     l1366:
  1318  0486  0826               	movf	___lwdiv@quotient+1,w
  1319  0487  00A1               	movwf	?___lwdiv+1
  1320  0488  0825               	movf	___lwdiv@quotient,w
  1321  0489  00A0               	movwf	?___lwdiv
  1322  048A                     l584:
  1323  048A  0008               	return
  1324  048B                     __end_of___lwdiv:
  1325                           
  1326                           	psect	text4
  1327  0542                     __ptext4:	
  1328 ;; *************** function _UART_Transmit_Text *****************
  1329 ;; Defined at:
  1330 ;;		line 69 in file "newmain.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  str             2    1[BANK0 ] PTR unsigned char 
  1333 ;;		 -> STR_2(7), main@text(40), RX_Buffer(50), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  i               1    4[BANK0 ] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       2       0       0       0
  1346 ;;      Locals:         0       1       0       0       0
  1347 ;;      Temps:          0       1       0       0       0
  1348 ;;      Totals:         0       4       0       0       0
  1349 ;;Total ram usage:        4 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 5
  1352 ;; This function calls:
  1353 ;;		_UART_Transmit
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _UART_Transmit_Text
  1361  0542                     _UART_Transmit_Text:
  1362  0542                     l1418:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _UART_Transmit_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1365                           
  1366                           
  1367                           ;newmain.c: 69: void UART_Transmit_Text(char *str);newmain.c: 70: {;newmain.c: 71:     u
      +                          nsigned char i=0;
  1368  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0544  01A4               	clrf	UART_Transmit_Text@i
  1371                           
  1372                           ;newmain.c: 72:     while(str[i] != 0)
  1373  0545  2D5D               	goto	l1424
  1374  0546                     l1420:
  1375                           
  1376                           ;newmain.c: 73:     {;newmain.c: 74:         UART_Transmit(str[i]);
  1377  0546  0824               	movf	UART_Transmit_Text@i,w
  1378  0547  0721               	addwf	UART_Transmit_Text@str,w
  1379  0548  0084               	movwf	4
  1380  0549  0822               	movf	UART_Transmit_Text@str+1,w
  1381  054A  1803               	skipnc
  1382  054B  0A22               	incf	UART_Transmit_Text@str+1,w
  1383  054C  00FF               	movwf	btemp+1
  1384  054D  120A  118A  248B  120A  118A  	fcall	stringtab
  1385  0552  120A  118A  25BF  120A  118A  	fcall	_UART_Transmit
  1386  0557                     l1422:
  1387                           
  1388                           ;newmain.c: 75:         i++;
  1389  0557  3001               	movlw	1
  1390  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1392  055A  00A3               	movwf	??_UART_Transmit_Text
  1393  055B  0823               	movf	??_UART_Transmit_Text,w
  1394  055C  07A4               	addwf	UART_Transmit_Text@i,f
  1395  055D                     l1424:
  1396                           
  1397                           ;newmain.c: 72:     while(str[i] != 0)
  1398  055D  0824               	movf	UART_Transmit_Text@i,w
  1399  055E  0721               	addwf	UART_Transmit_Text@str,w
  1400  055F  0084               	movwf	4
  1401  0560  0822               	movf	UART_Transmit_Text@str+1,w
  1402  0561  1803               	skipnc
  1403  0562  0A22               	incf	UART_Transmit_Text@str+1,w
  1404  0563  00FF               	movwf	btemp+1
  1405  0564  120A  118A  248B  120A  118A  	fcall	stringtab
  1406  0569  3A00               	xorlw	0
  1407  056A  1D03               	skipz
  1408  056B  2D6D               	goto	u1011
  1409  056C  2D6E               	goto	u1010
  1410  056D                     u1011:
  1411  056D  2D46               	goto	l1420
  1412  056E                     u1010:
  1413  056E                     l64:
  1414  056E  0008               	return
  1415  056F                     __end_of_UART_Transmit_Text:
  1416                           
  1417                           	psect	text5
  1418  05BF                     __ptext5:	
  1419 ;; *************** function _UART_Transmit *****************
  1420 ;; Defined at:
  1421 ;;		line 64 in file "newmain.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  c               1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  c               1    0[BANK0 ] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         0       1       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         0       1       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 4
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_UART_Transmit_Text
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _UART_Transmit
  1451  05BF                     _UART_Transmit:
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _UART_Transmit: [wreg]
  1455                           ;UART_Transmit@c stored from wreg
  1456  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1457  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1458  05C1  00A0               	movwf	UART_Transmit@c
  1459  05C2                     l1332:
  1460  05C2                     l55:	
  1461                           ;newmain.c: 64: void UART_Transmit(char c);newmain.c: 65: {;newmain.c: 66:     while(!TR
      +                          MT);
  1462                           
  1463  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1464  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1465  05C4  1C98               	btfss	24,1	;volatile
  1466  05C5  2DC7               	goto	u861
  1467  05C6  2DC8               	goto	u860
  1468  05C7                     u861:
  1469  05C7  2DC2               	goto	l55
  1470  05C8                     u860:
  1471  05C8                     l1334:
  1472                           
  1473                           ;newmain.c: 67:     TXREG = c;
  1474  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1475  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1476  05CA  0820               	movf	UART_Transmit@c,w
  1477  05CB  0099               	movwf	25	;volatile
  1478  05CC                     l58:
  1479  05CC  0008               	return
  1480  05CD                     __end_of_UART_Transmit:
  1481                           
  1482                           	psect	text6
  1483  059A                     __ptext6:	
  1484 ;; *************** function _UART_Init *****************
  1485 ;; Defined at:
  1486 ;;		line 53 in file "newmain.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 4
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _UART_Init
  1516  059A                     _UART_Init:
  1517  059A                     l1404:	
  1518                           ;incstack = 0
  1519                           ; Regs used in _UART_Init: [wreg]
  1520                           
  1521                           
  1522                           ;newmain.c: 56:     SPBRG = 32;
  1523  059A  3020               	movlw	32
  1524  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1525  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1526  059D  0099               	movwf	25	;volatile
  1527  059E                     l1406:
  1528                           
  1529                           ;newmain.c: 57:     SPEN = 1;
  1530  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1531  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1532  05A0  1798               	bsf	24,7	;volatile
  1533  05A1                     l1408:
  1534                           
  1535                           ;newmain.c: 58:     TXEN = 1;
  1536  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1537  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1538  05A3  1698               	bsf	24,5	;volatile
  1539  05A4                     l1410:
  1540                           
  1541                           ;newmain.c: 59:     CREN = 1;
  1542  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1543  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1544  05A6  1618               	bsf	24,4	;volatile
  1545  05A7                     l1412:
  1546                           
  1547                           ;newmain.c: 60:     RCIE = 1;
  1548  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  1549  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  1550  05A9  168C               	bsf	12,5	;volatile
  1551  05AA                     l1414:
  1552                           
  1553                           ;newmain.c: 61:     INTCONbits.GIE = 1;
  1554  05AA  178B               	bsf	11,7	;volatile
  1555  05AB                     l1416:
  1556                           
  1557                           ;newmain.c: 62:     INTCONbits.PEIE = 1;
  1558  05AB  170B               	bsf	11,6	;volatile
  1559  05AC                     l52:
  1560  05AC  0008               	return
  1561  05AD                     __end_of_UART_Init:
  1562                           
  1563                           	psect	text7
  1564  0023                     __ptext7:	
  1565 ;; *************** function _ReadDHT11 *****************
  1566 ;; Defined at:
  1567 ;;		line 130 in file "newmain.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  u8Buff          1    wreg     PTR unsigned char 
  1570 ;;		 -> main@data(5), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  u8Buff          1    7[BANK0 ] PTR unsigned char 
  1573 ;;		 -> main@data(5), 
  1574 ;;  u8TimeOut       1    8[BANK0 ] unsigned char 
  1575 ;;  i               1    6[BANK0 ] unsigned char 
  1576 ;;  u8Check         1    5[BANK0 ] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       4       0       0       0
  1588 ;;      Temps:          0       4       0       0       0
  1589 ;;      Totals:         0       8       0       0       0
  1590 ;;Total ram usage:        8 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 5
  1593 ;; This function calls:
  1594 ;;		_TMR0_Get_Value
  1595 ;;		_TMR0_Set_Value
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _ReadDHT11
  1603  0023                     _ReadDHT11:
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _ReadDHT11: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1607                           ;ReadDHT11@u8Buff stored from wreg
  1608  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0025  00A7               	movwf	ReadDHT11@u8Buff
  1611  0026                     l1446:
  1612                           
  1613                           ;newmain.c: 130: unsigned char ReadDHT11(unsigned char* u8Buff);newmain.c: 131: {;newmai
      +                          n.c: 132:     unsigned char u8Check, i, u8TimeOut;;newmain.c: 133:     TRISDbits.TRISD1 
      +                          = 0;
  1614  0026  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0027  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0028  1088               	bcf	8,1	;volatile
  1617                           
  1618                           ;newmain.c: 134:     PORTDbits.RD1 = 0;
  1619  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1620  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1621  002B  1088               	bcf	8,1	;volatile
  1622  002C                     l1448:
  1623                           
  1624                           ;newmain.c: 135:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1625  002C  3082               	movlw	130
  1626  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1627  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1628  002F  00A2               	movwf	??_ReadDHT11+1
  1629  0030  30DD               	movlw	221
  1630  0031  00A1               	movwf	??_ReadDHT11
  1631  0032                     u1707:
  1632  0032  0BA1               	decfsz	??_ReadDHT11,f
  1633  0033  2832               	goto	u1707
  1634  0034  0BA2               	decfsz	??_ReadDHT11+1,f
  1635  0035  2832               	goto	u1707
  1636  0036                     l1450:
  1637                           
  1638                           ;newmain.c: 136:     PORTDbits.RD1 = 1;
  1639  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0038  1488               	bsf	8,1	;volatile
  1642  0039                     l1452:
  1643                           
  1644                           ;newmain.c: 138:     u8TimeOut = 1;
  1645  0039  01A8               	clrf	ReadDHT11@u8TimeOut
  1646  003A  0AA8               	incf	ReadDHT11@u8TimeOut,f
  1647  003B                     l1454:
  1648                           
  1649                           ;newmain.c: 139:     TMR0_Set_Value(0);
  1650  003B  3000               	movlw	0
  1651  003C  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  1652                           
  1653                           ;newmain.c: 140:     while(TMR0_Get_Value() < 15)
  1654  0041  2848               	goto	l1458
  1655  0042                     l94:
  1656                           
  1657                           ;newmain.c: 141:     {;newmain.c: 142:         if(PORTDbits.RD1)
  1658  0042  1C88               	btfss	8,1	;volatile
  1659  0043  2845               	goto	u1031
  1660  0044  2846               	goto	u1030
  1661  0045                     u1031:
  1662  0045  2848               	goto	l1458
  1663  0046                     u1030:
  1664  0046                     l1456:
  1665                           
  1666                           ;newmain.c: 143:         {;newmain.c: 144:             u8TimeOut = 0;
  1667  0046  01A8               	clrf	ReadDHT11@u8TimeOut
  1668                           
  1669                           ;newmain.c: 145:             break;
  1670  0047  2856               	goto	l1460
  1671  0048                     l1458:
  1672                           
  1673                           ;newmain.c: 140:     while(TMR0_Get_Value() < 15)
  1674  0048  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1675  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1676  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1677  004F  00A1               	movwf	??_ReadDHT11
  1678  0050  300F               	movlw	15
  1679  0051  0221               	subwf	??_ReadDHT11,w
  1680  0052  1C03               	skipc
  1681  0053  2855               	goto	u1041
  1682  0054  2856               	goto	u1040
  1683  0055                     u1041:
  1684  0055  2842               	goto	l94
  1685  0056                     u1040:
  1686  0056                     l1460:
  1687                           
  1688                           ;newmain.c: 148:     if(u8TimeOut) return 0;
  1689  0056  0828               	movf	ReadDHT11@u8TimeOut,w
  1690  0057  1903               	btfsc	3,2
  1691  0058  285A               	goto	u1051
  1692  0059  285B               	goto	u1050
  1693  005A                     u1051:
  1694  005A  285D               	goto	l97
  1695  005B                     u1050:
  1696  005B                     l1462:
  1697  005B  3000               	movlw	0
  1698  005C  2AFC               	goto	l98
  1699  005D                     l97:
  1700                           
  1701                           ;newmain.c: 150:     TRISDbits.TRISD1 = 1;
  1702  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1703  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1704  005F  1488               	bsf	8,1	;volatile
  1705                           
  1706                           ;newmain.c: 151:     u8TimeOut = 1;
  1707  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0062  01A8               	clrf	ReadDHT11@u8TimeOut
  1710  0063  0AA8               	incf	ReadDHT11@u8TimeOut,f
  1711  0064                     l1466:
  1712                           
  1713                           ;newmain.c: 152:     TMR0_Set_Value(0);
  1714  0064  3000               	movlw	0
  1715  0065  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  1716                           
  1717                           ;newmain.c: 153:     while(TMR0_Get_Value() < 70)
  1718  006A  2871               	goto	l1470
  1719  006B                     l100:
  1720                           
  1721                           ;newmain.c: 154:     {;newmain.c: 155:         if(!PORTDbits.RD1)
  1722  006B  1888               	btfsc	8,1	;volatile
  1723  006C  286E               	goto	u1061
  1724  006D  286F               	goto	u1060
  1725  006E                     u1061:
  1726  006E  2871               	goto	l1470
  1727  006F                     u1060:
  1728  006F                     l1468:
  1729                           
  1730                           ;newmain.c: 156:         {;newmain.c: 157:             u8TimeOut = 0;
  1731  006F  01A8               	clrf	ReadDHT11@u8TimeOut
  1732                           
  1733                           ;newmain.c: 158:             break;
  1734  0070  287F               	goto	l1472
  1735  0071                     l1470:
  1736                           
  1737                           ;newmain.c: 153:     while(TMR0_Get_Value() < 70)
  1738  0071  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1739  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0078  00A1               	movwf	??_ReadDHT11
  1742  0079  3046               	movlw	70
  1743  007A  0221               	subwf	??_ReadDHT11,w
  1744  007B  1C03               	skipc
  1745  007C  287E               	goto	u1071
  1746  007D  287F               	goto	u1070
  1747  007E                     u1071:
  1748  007E  286B               	goto	l100
  1749  007F                     u1070:
  1750  007F                     l1472:
  1751                           
  1752                           ;newmain.c: 161:     if(u8TimeOut) return 0;
  1753  007F  0828               	movf	ReadDHT11@u8TimeOut,w
  1754  0080  1903               	btfsc	3,2
  1755  0081  2883               	goto	u1081
  1756  0082  2884               	goto	u1080
  1757  0083                     u1081:
  1758  0083  2885               	goto	l103
  1759  0084                     u1080:
  1760  0084  285B               	goto	l1462
  1761  0085                     l103:
  1762                           
  1763                           ;newmain.c: 163:     u8TimeOut = 1;
  1764  0085  01A8               	clrf	ReadDHT11@u8TimeOut
  1765  0086  0AA8               	incf	ReadDHT11@u8TimeOut,f
  1766  0087                     l1478:
  1767                           
  1768                           ;newmain.c: 164:     TMR0_Set_Value(0);
  1769  0087  3000               	movlw	0
  1770  0088  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  1771                           
  1772                           ;newmain.c: 165:     while(TMR0_Get_Value() < 115)
  1773  008D  2894               	goto	l1482
  1774  008E                     l105:
  1775                           
  1776                           ;newmain.c: 166:     {;newmain.c: 167:         if(PORTDbits.RD1)
  1777  008E  1C88               	btfss	8,1	;volatile
  1778  008F  2891               	goto	u1091
  1779  0090  2892               	goto	u1090
  1780  0091                     u1091:
  1781  0091  2894               	goto	l1482
  1782  0092                     u1090:
  1783  0092                     l1480:
  1784                           
  1785                           ;newmain.c: 168:         {;newmain.c: 169:             u8TimeOut = 0;
  1786  0092  01A8               	clrf	ReadDHT11@u8TimeOut
  1787                           
  1788                           ;newmain.c: 170:             break;
  1789  0093  28A2               	goto	l1484
  1790  0094                     l1482:
  1791                           
  1792                           ;newmain.c: 165:     while(TMR0_Get_Value() < 115)
  1793  0094  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1794  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1795  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1796  009B  00A1               	movwf	??_ReadDHT11
  1797  009C  3073               	movlw	115
  1798  009D  0221               	subwf	??_ReadDHT11,w
  1799  009E  1C03               	skipc
  1800  009F  28A1               	goto	u1101
  1801  00A0  28A2               	goto	u1100
  1802  00A1                     u1101:
  1803  00A1  288E               	goto	l105
  1804  00A2                     u1100:
  1805  00A2                     l1484:
  1806                           
  1807                           ;newmain.c: 174:     if(u8TimeOut) return 0;
  1808  00A2  0828               	movf	ReadDHT11@u8TimeOut,w
  1809  00A3  1903               	btfsc	3,2
  1810  00A4  28A6               	goto	u1111
  1811  00A5  28A7               	goto	u1110
  1812  00A6                     u1111:
  1813  00A6  28A8               	goto	l108
  1814  00A7                     u1110:
  1815  00A7  285B               	goto	l1462
  1816  00A8                     l108:
  1817                           
  1818                           ;newmain.c: 176:     u8TimeOut = 1;
  1819  00A8  01A8               	clrf	ReadDHT11@u8TimeOut
  1820  00A9  0AA8               	incf	ReadDHT11@u8TimeOut,f
  1821  00AA                     l1490:
  1822                           
  1823                           ;newmain.c: 177:     TMR0_Set_Value(0);
  1824  00AA  3000               	movlw	0
  1825  00AB  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  1826                           
  1827                           ;newmain.c: 178:     while(TMR0_Get_Value() < 115)
  1828  00B0  28B7               	goto	l1494
  1829  00B1                     l110:
  1830                           
  1831                           ;newmain.c: 179:     {;newmain.c: 180:         if(!PORTDbits.RD1)
  1832  00B1  1888               	btfsc	8,1	;volatile
  1833  00B2  28B4               	goto	u1121
  1834  00B3  28B5               	goto	u1120
  1835  00B4                     u1121:
  1836  00B4  28B7               	goto	l1494
  1837  00B5                     u1120:
  1838  00B5                     l1492:
  1839                           
  1840                           ;newmain.c: 181:         {;newmain.c: 182:             u8TimeOut = 0;
  1841  00B5  01A8               	clrf	ReadDHT11@u8TimeOut
  1842                           
  1843                           ;newmain.c: 183:             break;
  1844  00B6  28C5               	goto	l1496
  1845  00B7                     l1494:
  1846                           
  1847                           ;newmain.c: 178:     while(TMR0_Get_Value() < 115)
  1848  00B7  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1849  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1850  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1851  00BE  00A1               	movwf	??_ReadDHT11
  1852  00BF  3073               	movlw	115
  1853  00C0  0221               	subwf	??_ReadDHT11,w
  1854  00C1  1C03               	skipc
  1855  00C2  28C4               	goto	u1131
  1856  00C3  28C5               	goto	u1130
  1857  00C4                     u1131:
  1858  00C4  28B1               	goto	l110
  1859  00C5                     u1130:
  1860  00C5                     l1496:
  1861                           
  1862                           ;newmain.c: 186:     if(u8TimeOut) return 0;
  1863  00C5  0828               	movf	ReadDHT11@u8TimeOut,w
  1864  00C6  1903               	btfsc	3,2
  1865  00C7  28C9               	goto	u1141
  1866  00C8  28CA               	goto	u1140
  1867  00C9                     u1141:
  1868  00C9  28CB               	goto	l1502
  1869  00CA                     u1140:
  1870  00CA  285B               	goto	l1462
  1871  00CB                     l1502:
  1872                           
  1873                           ;newmain.c: 189:     for(i=0;i<8;i++)
  1874  00CB  01A6               	clrf	ReadDHT11@i
  1875  00CC                     l114:
  1876                           
  1877                           ;newmain.c: 190:     {;newmain.c: 191:         u8TimeOut = 1;
  1878  00CC  01A8               	clrf	ReadDHT11@u8TimeOut
  1879  00CD  0AA8               	incf	ReadDHT11@u8TimeOut,f
  1880  00CE                     l1508:
  1881                           
  1882                           ;newmain.c: 192:         TMR0_Set_Value(0);
  1883  00CE  3000               	movlw	0
  1884  00CF  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  1885                           
  1886                           ;newmain.c: 193:         while(TMR0_Get_Value() < 85)
  1887  00D4  28DB               	goto	l1512
  1888  00D5                     l117:
  1889                           
  1890                           ;newmain.c: 194:         {;newmain.c: 195:             if(PORTDbits.RD1)
  1891  00D5  1C88               	btfss	8,1	;volatile
  1892  00D6  28D8               	goto	u1151
  1893  00D7  28D9               	goto	u1150
  1894  00D8                     u1151:
  1895  00D8  28DB               	goto	l1512
  1896  00D9                     u1150:
  1897  00D9                     l1510:
  1898                           
  1899                           ;newmain.c: 196:             {;newmain.c: 197:                 u8TimeOut = 0;
  1900  00D9  01A8               	clrf	ReadDHT11@u8TimeOut
  1901                           
  1902                           ;newmain.c: 198:                 break;
  1903  00DA  28E9               	goto	l1514
  1904  00DB                     l1512:
  1905                           
  1906                           ;newmain.c: 193:         while(TMR0_Get_Value() < 85)
  1907  00DB  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1908  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1909  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1910  00E2  00A1               	movwf	??_ReadDHT11
  1911  00E3  3055               	movlw	85
  1912  00E4  0221               	subwf	??_ReadDHT11,w
  1913  00E5  1C03               	skipc
  1914  00E6  28E8               	goto	u1161
  1915  00E7  28E9               	goto	u1160
  1916  00E8                     u1161:
  1917  00E8  28D5               	goto	l117
  1918  00E9                     u1160:
  1919  00E9                     l1514:
  1920                           
  1921                           ;newmain.c: 201:         if(u8TimeOut) return 0;
  1922  00E9  0828               	movf	ReadDHT11@u8TimeOut,w
  1923  00EA  1903               	btfsc	3,2
  1924  00EB  28ED               	goto	u1171
  1925  00EC  28EE               	goto	u1170
  1926  00ED                     u1171:
  1927  00ED  28EF               	goto	l120
  1928  00EE                     u1170:
  1929  00EE  285B               	goto	l1462
  1930  00EF                     l120:
  1931                           
  1932                           ;newmain.c: 203:         u8TimeOut = 1;
  1933  00EF  01A8               	clrf	ReadDHT11@u8TimeOut
  1934  00F0  0AA8               	incf	ReadDHT11@u8TimeOut,f
  1935  00F1                     l1520:
  1936                           
  1937                           ;newmain.c: 204:         TMR0_Set_Value(0);
  1938  00F1  3000               	movlw	0
  1939  00F2  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  1940                           
  1941                           ;newmain.c: 205:         while(TMR0_Get_Value() < 110)
  1942  00F7  28FE               	goto	l1524
  1943  00F8                     l122:
  1944                           
  1945                           ;newmain.c: 206:         {;newmain.c: 207:             if(!PORTDbits.RD1)
  1946  00F8  1888               	btfsc	8,1	;volatile
  1947  00F9  28FB               	goto	u1181
  1948  00FA  28FC               	goto	u1180
  1949  00FB                     u1181:
  1950  00FB  28FE               	goto	l1524
  1951  00FC                     u1180:
  1952  00FC                     l1522:
  1953                           
  1954                           ;newmain.c: 208:             {;newmain.c: 209:                 u8TimeOut = 0;
  1955  00FC  01A8               	clrf	ReadDHT11@u8TimeOut
  1956                           
  1957                           ;newmain.c: 210:                 break;
  1958  00FD  290C               	goto	l1526
  1959  00FE                     l1524:
  1960                           
  1961                           ;newmain.c: 205:         while(TMR0_Get_Value() < 110)
  1962  00FE  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1963  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0105  00A1               	movwf	??_ReadDHT11
  1966  0106  306E               	movlw	110
  1967  0107  0221               	subwf	??_ReadDHT11,w
  1968  0108  1C03               	skipc
  1969  0109  290B               	goto	u1191
  1970  010A  290C               	goto	u1190
  1971  010B                     u1191:
  1972  010B  28F8               	goto	l122
  1973  010C                     u1190:
  1974  010C                     l1526:
  1975                           
  1976                           ;newmain.c: 213:         if(u8TimeOut) return 0;
  1977  010C  0828               	movf	ReadDHT11@u8TimeOut,w
  1978  010D  1903               	btfsc	3,2
  1979  010E  2910               	goto	u1201
  1980  010F  2911               	goto	u1200
  1981  0110                     u1201:
  1982  0110  2912               	goto	l1532
  1983  0111                     u1200:
  1984  0111  285B               	goto	l1462
  1985  0112                     l1532:
  1986                           
  1987                           ;newmain.c: 215:         u8Buff[0] <<= 1;
  1988  0112  0827               	movf	ReadDHT11@u8Buff,w
  1989  0113  0084               	movwf	4
  1990  0114  1003               	clrc
  1991  0115  1383               	bcf	3,7	;select IRP bank0
  1992  0116  0D80               	rlf	0,f
  1993  0117                     l1534:
  1994                           
  1995                           ;newmain.c: 216:         if(TMR0_Get_Value() > 60)
  1996  0117  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  1997  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1998  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1999  011E  00A1               	movwf	??_ReadDHT11
  2000  011F  303D               	movlw	61
  2001  0120  0221               	subwf	??_ReadDHT11,w
  2002  0121  1C03               	skipc
  2003  0122  2924               	goto	u1211
  2004  0123  2925               	goto	u1210
  2005  0124                     u1211:
  2006  0124  2929               	goto	l1538
  2007  0125                     u1210:
  2008  0125                     l1536:
  2009                           
  2010                           ;newmain.c: 217:         {;newmain.c: 218:             u8Buff[0] |= 0x01;
  2011  0125  0827               	movf	ReadDHT11@u8Buff,w
  2012  0126  0084               	movwf	4
  2013  0127  1383               	bcf	3,7	;select IRP bank0
  2014  0128  1400               	bsf	0,0
  2015  0129                     l1538:
  2016                           
  2017                           ;newmain.c: 220:     }
  2018  0129  3001               	movlw	1
  2019  012A  00A1               	movwf	??_ReadDHT11
  2020  012B  0821               	movf	??_ReadDHT11,w
  2021  012C  07A6               	addwf	ReadDHT11@i,f
  2022  012D                     l1540:
  2023  012D  3008               	movlw	8
  2024  012E  0226               	subwf	ReadDHT11@i,w
  2025  012F  1C03               	skipc
  2026  0130  2932               	goto	u1221
  2027  0131  2933               	goto	u1220
  2028  0132                     u1221:
  2029  0132  28CC               	goto	l114
  2030  0133                     u1220:
  2031  0133                     l1542:
  2032                           
  2033                           ;newmain.c: 223:     for(i=0;i<8;i++)
  2034  0133  01A6               	clrf	ReadDHT11@i
  2035  0134                     l127:
  2036                           
  2037                           ;newmain.c: 224:     {;newmain.c: 225:         u8TimeOut = 1;
  2038  0134  01A8               	clrf	ReadDHT11@u8TimeOut
  2039  0135  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2040  0136                     l1548:
  2041                           
  2042                           ;newmain.c: 226:         TMR0_Set_Value(0);
  2043  0136  3000               	movlw	0
  2044  0137  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2045                           
  2046                           ;newmain.c: 227:         while(TMR0_Get_Value() < 85)
  2047  013C  2943               	goto	l1552
  2048  013D                     l130:
  2049                           
  2050                           ;newmain.c: 228:         {;newmain.c: 229:             if(PORTDbits.RD1)
  2051  013D  1C88               	btfss	8,1	;volatile
  2052  013E  2940               	goto	u1231
  2053  013F  2941               	goto	u1230
  2054  0140                     u1231:
  2055  0140  2943               	goto	l1552
  2056  0141                     u1230:
  2057  0141                     l1550:
  2058                           
  2059                           ;newmain.c: 230:             {;newmain.c: 231:                 u8TimeOut = 0;
  2060  0141  01A8               	clrf	ReadDHT11@u8TimeOut
  2061                           
  2062                           ;newmain.c: 232:                 break;
  2063  0142  2951               	goto	l1554
  2064  0143                     l1552:
  2065                           
  2066                           ;newmain.c: 227:         while(TMR0_Get_Value() < 85)
  2067  0143  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2068  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2070  014A  00A1               	movwf	??_ReadDHT11
  2071  014B  3055               	movlw	85
  2072  014C  0221               	subwf	??_ReadDHT11,w
  2073  014D  1C03               	skipc
  2074  014E  2950               	goto	u1241
  2075  014F  2951               	goto	u1240
  2076  0150                     u1241:
  2077  0150  293D               	goto	l130
  2078  0151                     u1240:
  2079  0151                     l1554:
  2080                           
  2081                           ;newmain.c: 235:         if(u8TimeOut) return 0;
  2082  0151  0828               	movf	ReadDHT11@u8TimeOut,w
  2083  0152  1903               	btfsc	3,2
  2084  0153  2955               	goto	u1251
  2085  0154  2956               	goto	u1250
  2086  0155                     u1251:
  2087  0155  2957               	goto	l133
  2088  0156                     u1250:
  2089  0156  285B               	goto	l1462
  2090  0157                     l133:
  2091                           
  2092                           ;newmain.c: 237:         u8TimeOut = 1;
  2093  0157  01A8               	clrf	ReadDHT11@u8TimeOut
  2094  0158  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2095  0159                     l1560:
  2096                           
  2097                           ;newmain.c: 238:         TMR0_Set_Value(0);
  2098  0159  3000               	movlw	0
  2099  015A  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2100                           
  2101                           ;newmain.c: 239:         while(TMR0_Get_Value() < 110)
  2102  015F  2966               	goto	l1564
  2103  0160                     l135:
  2104                           
  2105                           ;newmain.c: 240:         {;newmain.c: 241:             if(!PORTDbits.RD1)
  2106  0160  1888               	btfsc	8,1	;volatile
  2107  0161  2963               	goto	u1261
  2108  0162  2964               	goto	u1260
  2109  0163                     u1261:
  2110  0163  2966               	goto	l1564
  2111  0164                     u1260:
  2112  0164                     l1562:
  2113                           
  2114                           ;newmain.c: 242:             {;newmain.c: 243:                 u8TimeOut = 0;
  2115  0164  01A8               	clrf	ReadDHT11@u8TimeOut
  2116                           
  2117                           ;newmain.c: 244:                 break;
  2118  0165  2974               	goto	l1566
  2119  0166                     l1564:
  2120                           
  2121                           ;newmain.c: 239:         while(TMR0_Get_Value() < 110)
  2122  0166  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2123  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2124  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2125  016D  00A1               	movwf	??_ReadDHT11
  2126  016E  306E               	movlw	110
  2127  016F  0221               	subwf	??_ReadDHT11,w
  2128  0170  1C03               	skipc
  2129  0171  2973               	goto	u1271
  2130  0172  2974               	goto	u1270
  2131  0173                     u1271:
  2132  0173  2960               	goto	l135
  2133  0174                     u1270:
  2134  0174                     l1566:
  2135                           
  2136                           ;newmain.c: 247:         if(u8TimeOut) return 0;
  2137  0174  0828               	movf	ReadDHT11@u8TimeOut,w
  2138  0175  1903               	btfsc	3,2
  2139  0176  2978               	goto	u1281
  2140  0177  2979               	goto	u1280
  2141  0178                     u1281:
  2142  0178  297A               	goto	l1572
  2143  0179                     u1280:
  2144  0179  285B               	goto	l1462
  2145  017A                     l1572:
  2146                           
  2147                           ;newmain.c: 249:         u8Buff[1] <<= 1;
  2148  017A  0A27               	incf	ReadDHT11@u8Buff,w
  2149  017B  0084               	movwf	4
  2150  017C  1003               	clrc
  2151  017D  1383               	bcf	3,7	;select IRP bank0
  2152  017E  0D80               	rlf	0,f
  2153  017F                     l1574:
  2154                           
  2155                           ;newmain.c: 250:         if(TMR0_Get_Value() > 60)
  2156  017F  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2157  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0186  00A1               	movwf	??_ReadDHT11
  2160  0187  303D               	movlw	61
  2161  0188  0221               	subwf	??_ReadDHT11,w
  2162  0189  1C03               	skipc
  2163  018A  298C               	goto	u1291
  2164  018B  298D               	goto	u1290
  2165  018C                     u1291:
  2166  018C  2991               	goto	l1578
  2167  018D                     u1290:
  2168  018D                     l1576:
  2169                           
  2170                           ;newmain.c: 251:         {;newmain.c: 252:             u8Buff[1] |= 0x01;
  2171  018D  0A27               	incf	ReadDHT11@u8Buff,w
  2172  018E  0084               	movwf	4
  2173  018F  1383               	bcf	3,7	;select IRP bank0
  2174  0190  1400               	bsf	0,0
  2175  0191                     l1578:
  2176                           
  2177                           ;newmain.c: 254:     }
  2178  0191  3001               	movlw	1
  2179  0192  00A1               	movwf	??_ReadDHT11
  2180  0193  0821               	movf	??_ReadDHT11,w
  2181  0194  07A6               	addwf	ReadDHT11@i,f
  2182  0195                     l1580:
  2183  0195  3008               	movlw	8
  2184  0196  0226               	subwf	ReadDHT11@i,w
  2185  0197  1C03               	skipc
  2186  0198  299A               	goto	u1301
  2187  0199  299B               	goto	u1300
  2188  019A                     u1301:
  2189  019A  2934               	goto	l127
  2190  019B                     u1300:
  2191  019B                     l1582:
  2192                           
  2193                           ;newmain.c: 257:     for(i=0;i<8;i++)
  2194  019B  01A6               	clrf	ReadDHT11@i
  2195  019C                     l140:
  2196                           
  2197                           ;newmain.c: 258:     {;newmain.c: 259:         u8TimeOut = 1;
  2198  019C  01A8               	clrf	ReadDHT11@u8TimeOut
  2199  019D  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2200  019E                     l1588:
  2201                           
  2202                           ;newmain.c: 260:         TMR0_Set_Value(0);
  2203  019E  3000               	movlw	0
  2204  019F  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2205                           
  2206                           ;newmain.c: 261:         while(TMR0_Get_Value() < 85)
  2207  01A4  29AB               	goto	l1592
  2208  01A5                     l143:
  2209                           
  2210                           ;newmain.c: 262:         {;newmain.c: 263:             if(PORTDbits.RD1)
  2211  01A5  1C88               	btfss	8,1	;volatile
  2212  01A6  29A8               	goto	u1311
  2213  01A7  29A9               	goto	u1310
  2214  01A8                     u1311:
  2215  01A8  29AB               	goto	l1592
  2216  01A9                     u1310:
  2217  01A9                     l1590:
  2218                           
  2219                           ;newmain.c: 264:             {;newmain.c: 265:                 u8TimeOut = 0;
  2220  01A9  01A8               	clrf	ReadDHT11@u8TimeOut
  2221                           
  2222                           ;newmain.c: 266:                 break;
  2223  01AA  29B9               	goto	l1594
  2224  01AB                     l1592:
  2225                           
  2226                           ;newmain.c: 261:         while(TMR0_Get_Value() < 85)
  2227  01AB  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2228  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2229  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2230  01B2  00A1               	movwf	??_ReadDHT11
  2231  01B3  3055               	movlw	85
  2232  01B4  0221               	subwf	??_ReadDHT11,w
  2233  01B5  1C03               	skipc
  2234  01B6  29B8               	goto	u1321
  2235  01B7  29B9               	goto	u1320
  2236  01B8                     u1321:
  2237  01B8  29A5               	goto	l143
  2238  01B9                     u1320:
  2239  01B9                     l1594:
  2240                           
  2241                           ;newmain.c: 269:         if(u8TimeOut) return 0;
  2242  01B9  0828               	movf	ReadDHT11@u8TimeOut,w
  2243  01BA  1903               	btfsc	3,2
  2244  01BB  29BD               	goto	u1331
  2245  01BC  29BE               	goto	u1330
  2246  01BD                     u1331:
  2247  01BD  29BF               	goto	l146
  2248  01BE                     u1330:
  2249  01BE  285B               	goto	l1462
  2250  01BF                     l146:
  2251                           
  2252                           ;newmain.c: 271:         u8TimeOut = 1;
  2253  01BF  01A8               	clrf	ReadDHT11@u8TimeOut
  2254  01C0  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2255  01C1                     l1600:
  2256                           
  2257                           ;newmain.c: 272:         TMR0_Set_Value(0);
  2258  01C1  3000               	movlw	0
  2259  01C2  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2260                           
  2261                           ;newmain.c: 273:         while(TMR0_Get_Value() < 110)
  2262  01C7  29CE               	goto	l1604
  2263  01C8                     l148:
  2264                           
  2265                           ;newmain.c: 274:         {;newmain.c: 275:             if(!PORTDbits.RD1)
  2266  01C8  1888               	btfsc	8,1	;volatile
  2267  01C9  29CB               	goto	u1341
  2268  01CA  29CC               	goto	u1340
  2269  01CB                     u1341:
  2270  01CB  29CE               	goto	l1604
  2271  01CC                     u1340:
  2272  01CC                     l1602:
  2273                           
  2274                           ;newmain.c: 276:             {;newmain.c: 277:                 u8TimeOut = 0;
  2275  01CC  01A8               	clrf	ReadDHT11@u8TimeOut
  2276                           
  2277                           ;newmain.c: 278:                 break;
  2278  01CD  29DC               	goto	l1606
  2279  01CE                     l1604:
  2280                           
  2281                           ;newmain.c: 273:         while(TMR0_Get_Value() < 110)
  2282  01CE  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2283  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2284  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2285  01D5  00A1               	movwf	??_ReadDHT11
  2286  01D6  306E               	movlw	110
  2287  01D7  0221               	subwf	??_ReadDHT11,w
  2288  01D8  1C03               	skipc
  2289  01D9  29DB               	goto	u1351
  2290  01DA  29DC               	goto	u1350
  2291  01DB                     u1351:
  2292  01DB  29C8               	goto	l148
  2293  01DC                     u1350:
  2294  01DC                     l1606:
  2295                           
  2296                           ;newmain.c: 281:         if(u8TimeOut) return 0;
  2297  01DC  0828               	movf	ReadDHT11@u8TimeOut,w
  2298  01DD  1903               	btfsc	3,2
  2299  01DE  29E0               	goto	u1361
  2300  01DF  29E1               	goto	u1360
  2301  01E0                     u1361:
  2302  01E0  29E2               	goto	l1612
  2303  01E1                     u1360:
  2304  01E1  285B               	goto	l1462
  2305  01E2                     l1612:
  2306                           
  2307                           ;newmain.c: 283:         u8Buff[2] <<= 1;
  2308  01E2  0827               	movf	ReadDHT11@u8Buff,w
  2309  01E3  3E02               	addlw	2
  2310  01E4  0084               	movwf	4
  2311  01E5  1003               	clrc
  2312  01E6  1383               	bcf	3,7	;select IRP bank0
  2313  01E7  0D80               	rlf	0,f
  2314  01E8                     l1614:
  2315                           
  2316                           ;newmain.c: 284:         if(TMR0_Get_Value() > 60)
  2317  01E8  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2318  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2319  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2320  01EF  00A1               	movwf	??_ReadDHT11
  2321  01F0  303D               	movlw	61
  2322  01F1  0221               	subwf	??_ReadDHT11,w
  2323  01F2  1C03               	skipc
  2324  01F3  29F5               	goto	u1371
  2325  01F4  29F6               	goto	u1370
  2326  01F5                     u1371:
  2327  01F5  29FB               	goto	l1618
  2328  01F6                     u1370:
  2329  01F6                     l1616:
  2330                           
  2331                           ;newmain.c: 285:         {;newmain.c: 286:             u8Buff[2] |= 0x01;
  2332  01F6  0827               	movf	ReadDHT11@u8Buff,w
  2333  01F7  3E02               	addlw	2
  2334  01F8  0084               	movwf	4
  2335  01F9  1383               	bcf	3,7	;select IRP bank0
  2336  01FA  1400               	bsf	0,0
  2337  01FB                     l1618:
  2338                           
  2339                           ;newmain.c: 288:     }
  2340  01FB  3001               	movlw	1
  2341  01FC  00A1               	movwf	??_ReadDHT11
  2342  01FD  0821               	movf	??_ReadDHT11,w
  2343  01FE  07A6               	addwf	ReadDHT11@i,f
  2344  01FF                     l1620:
  2345  01FF  3008               	movlw	8
  2346  0200  0226               	subwf	ReadDHT11@i,w
  2347  0201  1C03               	skipc
  2348  0202  2A04               	goto	u1381
  2349  0203  2A05               	goto	u1380
  2350  0204                     u1381:
  2351  0204  299C               	goto	l140
  2352  0205                     u1380:
  2353  0205                     l1622:
  2354                           
  2355                           ;newmain.c: 291:     for(i=0;i<8;i++)
  2356  0205  01A6               	clrf	ReadDHT11@i
  2357  0206                     l153:
  2358                           
  2359                           ;newmain.c: 292:     {;newmain.c: 293:         u8TimeOut = 1;
  2360  0206  01A8               	clrf	ReadDHT11@u8TimeOut
  2361  0207  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2362  0208                     l1628:
  2363                           
  2364                           ;newmain.c: 294:         TMR0_Set_Value(0);
  2365  0208  3000               	movlw	0
  2366  0209  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2367                           
  2368                           ;newmain.c: 295:         while(TMR0_Get_Value() < 85)
  2369  020E  2A15               	goto	l1632
  2370  020F                     l156:
  2371                           
  2372                           ;newmain.c: 296:         {;newmain.c: 297:             if(PORTDbits.RD1)
  2373  020F  1C88               	btfss	8,1	;volatile
  2374  0210  2A12               	goto	u1391
  2375  0211  2A13               	goto	u1390
  2376  0212                     u1391:
  2377  0212  2A15               	goto	l1632
  2378  0213                     u1390:
  2379  0213                     l1630:
  2380                           
  2381                           ;newmain.c: 298:             {;newmain.c: 299:                 u8TimeOut = 0;
  2382  0213  01A8               	clrf	ReadDHT11@u8TimeOut
  2383                           
  2384                           ;newmain.c: 300:                 break;
  2385  0214  2A23               	goto	l1634
  2386  0215                     l1632:
  2387                           
  2388                           ;newmain.c: 295:         while(TMR0_Get_Value() < 85)
  2389  0215  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2390  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2391  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2392  021C  00A1               	movwf	??_ReadDHT11
  2393  021D  3055               	movlw	85
  2394  021E  0221               	subwf	??_ReadDHT11,w
  2395  021F  1C03               	skipc
  2396  0220  2A22               	goto	u1401
  2397  0221  2A23               	goto	u1400
  2398  0222                     u1401:
  2399  0222  2A0F               	goto	l156
  2400  0223                     u1400:
  2401  0223                     l1634:
  2402                           
  2403                           ;newmain.c: 303:         if(u8TimeOut) return 0;
  2404  0223  0828               	movf	ReadDHT11@u8TimeOut,w
  2405  0224  1903               	btfsc	3,2
  2406  0225  2A27               	goto	u1411
  2407  0226  2A28               	goto	u1410
  2408  0227                     u1411:
  2409  0227  2A29               	goto	l159
  2410  0228                     u1410:
  2411  0228  285B               	goto	l1462
  2412  0229                     l159:
  2413                           
  2414                           ;newmain.c: 305:         u8TimeOut = 1;
  2415  0229  01A8               	clrf	ReadDHT11@u8TimeOut
  2416  022A  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2417  022B                     l1640:
  2418                           
  2419                           ;newmain.c: 306:         TMR0_Set_Value(0);
  2420  022B  3000               	movlw	0
  2421  022C  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2422                           
  2423                           ;newmain.c: 307:         while(TMR0_Get_Value() < 110)
  2424  0231  2A38               	goto	l1644
  2425  0232                     l161:
  2426                           
  2427                           ;newmain.c: 308:         {;newmain.c: 309:             if(!PORTDbits.RD1)
  2428  0232  1888               	btfsc	8,1	;volatile
  2429  0233  2A35               	goto	u1421
  2430  0234  2A36               	goto	u1420
  2431  0235                     u1421:
  2432  0235  2A38               	goto	l1644
  2433  0236                     u1420:
  2434  0236                     l1642:
  2435                           
  2436                           ;newmain.c: 310:             {;newmain.c: 311:                 u8TimeOut = 0;
  2437  0236  01A8               	clrf	ReadDHT11@u8TimeOut
  2438                           
  2439                           ;newmain.c: 312:                 break;
  2440  0237  2A46               	goto	l1646
  2441  0238                     l1644:
  2442                           
  2443                           ;newmain.c: 307:         while(TMR0_Get_Value() < 110)
  2444  0238  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2445  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2446  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2447  023F  00A1               	movwf	??_ReadDHT11
  2448  0240  306E               	movlw	110
  2449  0241  0221               	subwf	??_ReadDHT11,w
  2450  0242  1C03               	skipc
  2451  0243  2A45               	goto	u1431
  2452  0244  2A46               	goto	u1430
  2453  0245                     u1431:
  2454  0245  2A32               	goto	l161
  2455  0246                     u1430:
  2456  0246                     l1646:
  2457                           
  2458                           ;newmain.c: 315:         if(u8TimeOut) return 0;
  2459  0246  0828               	movf	ReadDHT11@u8TimeOut,w
  2460  0247  1903               	btfsc	3,2
  2461  0248  2A4A               	goto	u1441
  2462  0249  2A4B               	goto	u1440
  2463  024A                     u1441:
  2464  024A  2A4C               	goto	l1652
  2465  024B                     u1440:
  2466  024B  285B               	goto	l1462
  2467  024C                     l1652:
  2468                           
  2469                           ;newmain.c: 317:         u8Buff[3] <<= 1;
  2470  024C  0827               	movf	ReadDHT11@u8Buff,w
  2471  024D  3E03               	addlw	3
  2472  024E  0084               	movwf	4
  2473  024F  1003               	clrc
  2474  0250  1383               	bcf	3,7	;select IRP bank0
  2475  0251  0D80               	rlf	0,f
  2476  0252                     l1654:
  2477                           
  2478                           ;newmain.c: 318:         if(TMR0_Get_Value() > 60)
  2479  0252  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2480  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0259  00A1               	movwf	??_ReadDHT11
  2483  025A  303D               	movlw	61
  2484  025B  0221               	subwf	??_ReadDHT11,w
  2485  025C  1C03               	skipc
  2486  025D  2A5F               	goto	u1451
  2487  025E  2A60               	goto	u1450
  2488  025F                     u1451:
  2489  025F  2A65               	goto	l1658
  2490  0260                     u1450:
  2491  0260                     l1656:
  2492                           
  2493                           ;newmain.c: 319:         {;newmain.c: 320:             u8Buff[3] |= 0x01;
  2494  0260  0827               	movf	ReadDHT11@u8Buff,w
  2495  0261  3E03               	addlw	3
  2496  0262  0084               	movwf	4
  2497  0263  1383               	bcf	3,7	;select IRP bank0
  2498  0264  1400               	bsf	0,0
  2499  0265                     l1658:
  2500                           
  2501                           ;newmain.c: 322:     }
  2502  0265  3001               	movlw	1
  2503  0266  00A1               	movwf	??_ReadDHT11
  2504  0267  0821               	movf	??_ReadDHT11,w
  2505  0268  07A6               	addwf	ReadDHT11@i,f
  2506  0269                     l1660:
  2507  0269  3008               	movlw	8
  2508  026A  0226               	subwf	ReadDHT11@i,w
  2509  026B  1C03               	skipc
  2510  026C  2A6E               	goto	u1461
  2511  026D  2A6F               	goto	u1460
  2512  026E                     u1461:
  2513  026E  2A06               	goto	l153
  2514  026F                     u1460:
  2515  026F                     l1662:
  2516                           
  2517                           ;newmain.c: 325:     for(i=0;i<8;i++)
  2518  026F  01A6               	clrf	ReadDHT11@i
  2519  0270                     l166:
  2520                           
  2521                           ;newmain.c: 326:     {;newmain.c: 327:         u8TimeOut = 1;
  2522  0270  01A8               	clrf	ReadDHT11@u8TimeOut
  2523  0271  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2524  0272                     l1668:
  2525                           
  2526                           ;newmain.c: 328:         TMR0_Set_Value(0);
  2527  0272  3000               	movlw	0
  2528  0273  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2529                           
  2530                           ;newmain.c: 329:         while(TMR0_Get_Value() < 85)
  2531  0278  2A7F               	goto	l1672
  2532  0279                     l169:
  2533                           
  2534                           ;newmain.c: 330:         {;newmain.c: 331:             if(PORTDbits.RD1)
  2535  0279  1C88               	btfss	8,1	;volatile
  2536  027A  2A7C               	goto	u1471
  2537  027B  2A7D               	goto	u1470
  2538  027C                     u1471:
  2539  027C  2A7F               	goto	l1672
  2540  027D                     u1470:
  2541  027D                     l1670:
  2542                           
  2543                           ;newmain.c: 332:             {;newmain.c: 333:                 u8TimeOut = 0;
  2544  027D  01A8               	clrf	ReadDHT11@u8TimeOut
  2545                           
  2546                           ;newmain.c: 334:                 break;
  2547  027E  2A8D               	goto	l1674
  2548  027F                     l1672:
  2549                           
  2550                           ;newmain.c: 329:         while(TMR0_Get_Value() < 85)
  2551  027F  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2552  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0286  00A1               	movwf	??_ReadDHT11
  2555  0287  3055               	movlw	85
  2556  0288  0221               	subwf	??_ReadDHT11,w
  2557  0289  1C03               	skipc
  2558  028A  2A8C               	goto	u1481
  2559  028B  2A8D               	goto	u1480
  2560  028C                     u1481:
  2561  028C  2A79               	goto	l169
  2562  028D                     u1480:
  2563  028D                     l1674:
  2564                           
  2565                           ;newmain.c: 337:         if(u8TimeOut) return 0;
  2566  028D  0828               	movf	ReadDHT11@u8TimeOut,w
  2567  028E  1903               	btfsc	3,2
  2568  028F  2A91               	goto	u1491
  2569  0290  2A92               	goto	u1490
  2570  0291                     u1491:
  2571  0291  2A93               	goto	l172
  2572  0292                     u1490:
  2573  0292  285B               	goto	l1462
  2574  0293                     l172:
  2575                           
  2576                           ;newmain.c: 339:         u8TimeOut = 1;
  2577  0293  01A8               	clrf	ReadDHT11@u8TimeOut
  2578  0294  0AA8               	incf	ReadDHT11@u8TimeOut,f
  2579  0295                     l1680:
  2580                           
  2581                           ;newmain.c: 340:         TMR0_Set_Value(0);
  2582  0295  3000               	movlw	0
  2583  0296  120A  118A  2609  120A  118A  	fcall	_TMR0_Set_Value
  2584                           
  2585                           ;newmain.c: 341:         while(TMR0_Get_Value() < 110)
  2586  029B  2AA2               	goto	l1684
  2587  029C                     l174:
  2588                           
  2589                           ;newmain.c: 342:         {;newmain.c: 343:             if(!PORTDbits.RD1)
  2590  029C  1888               	btfsc	8,1	;volatile
  2591  029D  2A9F               	goto	u1501
  2592  029E  2AA0               	goto	u1500
  2593  029F                     u1501:
  2594  029F  2AA2               	goto	l1684
  2595  02A0                     u1500:
  2596  02A0                     l1682:
  2597                           
  2598                           ;newmain.c: 344:             {;newmain.c: 345:                 u8TimeOut = 0;
  2599  02A0  01A8               	clrf	ReadDHT11@u8TimeOut
  2600                           
  2601                           ;newmain.c: 346:                 break;
  2602  02A1  2AB0               	goto	l1686
  2603  02A2                     l1684:
  2604                           
  2605                           ;newmain.c: 341:         while(TMR0_Get_Value() < 110)
  2606  02A2  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2607  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2608  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2609  02A9  00A1               	movwf	??_ReadDHT11
  2610  02AA  306E               	movlw	110
  2611  02AB  0221               	subwf	??_ReadDHT11,w
  2612  02AC  1C03               	skipc
  2613  02AD  2AAF               	goto	u1511
  2614  02AE  2AB0               	goto	u1510
  2615  02AF                     u1511:
  2616  02AF  2A9C               	goto	l174
  2617  02B0                     u1510:
  2618  02B0                     l1686:
  2619                           
  2620                           ;newmain.c: 349:         if(u8TimeOut) return 0;
  2621  02B0  0828               	movf	ReadDHT11@u8TimeOut,w
  2622  02B1  1903               	btfsc	3,2
  2623  02B2  2AB4               	goto	u1521
  2624  02B3  2AB5               	goto	u1520
  2625  02B4                     u1521:
  2626  02B4  2AB6               	goto	l1692
  2627  02B5                     u1520:
  2628  02B5  285B               	goto	l1462
  2629  02B6                     l1692:
  2630                           
  2631                           ;newmain.c: 351:         u8Buff[4] <<= 1;
  2632  02B6  0827               	movf	ReadDHT11@u8Buff,w
  2633  02B7  3E04               	addlw	4
  2634  02B8  0084               	movwf	4
  2635  02B9  1003               	clrc
  2636  02BA  1383               	bcf	3,7	;select IRP bank0
  2637  02BB  0D80               	rlf	0,f
  2638  02BC                     l1694:
  2639                           
  2640                           ;newmain.c: 352:         if(TMR0_Get_Value() > 60)
  2641  02BC  120A  118A  260F  120A  118A  	fcall	_TMR0_Get_Value
  2642  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2643  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2644  02C3  00A1               	movwf	??_ReadDHT11
  2645  02C4  303D               	movlw	61
  2646  02C5  0221               	subwf	??_ReadDHT11,w
  2647  02C6  1C03               	skipc
  2648  02C7  2AC9               	goto	u1531
  2649  02C8  2ACA               	goto	u1530
  2650  02C9                     u1531:
  2651  02C9  2ACF               	goto	l1698
  2652  02CA                     u1530:
  2653  02CA                     l1696:
  2654                           
  2655                           ;newmain.c: 353:         {;newmain.c: 354:             u8Buff[4] |= 0x01;
  2656  02CA  0827               	movf	ReadDHT11@u8Buff,w
  2657  02CB  3E04               	addlw	4
  2658  02CC  0084               	movwf	4
  2659  02CD  1383               	bcf	3,7	;select IRP bank0
  2660  02CE  1400               	bsf	0,0
  2661  02CF                     l1698:
  2662                           
  2663                           ;newmain.c: 356:     }
  2664  02CF  3001               	movlw	1
  2665  02D0  00A1               	movwf	??_ReadDHT11
  2666  02D1  0821               	movf	??_ReadDHT11,w
  2667  02D2  07A6               	addwf	ReadDHT11@i,f
  2668  02D3                     l1700:
  2669  02D3  3008               	movlw	8
  2670  02D4  0226               	subwf	ReadDHT11@i,w
  2671  02D5  1C03               	skipc
  2672  02D6  2AD8               	goto	u1541
  2673  02D7  2AD9               	goto	u1540
  2674  02D8                     u1541:
  2675  02D8  2A70               	goto	l166
  2676  02D9                     u1540:
  2677  02D9                     l1702:
  2678                           
  2679                           ;newmain.c: 359:     u8Check = u8Buff[0] + u8Buff[1] + u8Buff[2] + u8Buff[3];
  2680  02D9  0A27               	incf	ReadDHT11@u8Buff,w
  2681  02DA  0084               	movwf	4
  2682  02DB  1383               	bcf	3,7	;select IRP bank0
  2683  02DC  0800               	movf	0,w
  2684  02DD  00A1               	movwf	??_ReadDHT11
  2685  02DE  0827               	movf	ReadDHT11@u8Buff,w
  2686  02DF  0084               	movwf	4
  2687  02E0  0800               	movf	0,w
  2688  02E1  0721               	addwf	??_ReadDHT11,w
  2689  02E2  00A2               	movwf	??_ReadDHT11+1
  2690  02E3  0827               	movf	ReadDHT11@u8Buff,w
  2691  02E4  3E02               	addlw	2
  2692  02E5  0084               	movwf	4
  2693  02E6  0800               	movf	0,w
  2694  02E7  0722               	addwf	??_ReadDHT11+1,w
  2695  02E8  00A3               	movwf	??_ReadDHT11+2
  2696  02E9  0827               	movf	ReadDHT11@u8Buff,w
  2697  02EA  3E03               	addlw	3
  2698  02EB  0084               	movwf	4
  2699  02EC  0800               	movf	0,w
  2700  02ED  0723               	addwf	??_ReadDHT11+2,w
  2701  02EE  00A4               	movwf	??_ReadDHT11+3
  2702  02EF  0824               	movf	??_ReadDHT11+3,w
  2703  02F0  00A5               	movwf	ReadDHT11@u8Check
  2704                           
  2705                           ;newmain.c: 360:     if(u8Check != u8Buff[4])
  2706  02F1  0827               	movf	ReadDHT11@u8Buff,w
  2707  02F2  3E04               	addlw	4
  2708  02F3  0084               	movwf	4
  2709  02F4  0800               	movf	0,w
  2710  02F5  0625               	xorwf	ReadDHT11@u8Check,w
  2711  02F6  1903               	skipnz
  2712  02F7  2AF9               	goto	u1551
  2713  02F8  2AFA               	goto	u1550
  2714  02F9                     u1551:
  2715  02F9  2AFB               	goto	l1708
  2716  02FA                     u1550:
  2717  02FA  285B               	goto	l1462
  2718  02FB                     l1708:
  2719                           
  2720                           ;newmain.c: 364:     return 1;
  2721  02FB  3001               	movlw	1
  2722  02FC                     l98:
  2723  02FC  0008               	return
  2724  02FD                     __end_of_ReadDHT11:
  2725                           
  2726                           	psect	text8
  2727  0609                     __ptext8:	
  2728 ;; *************** function _TMR0_Set_Value *****************
  2729 ;; Defined at:
  2730 ;;		line 120 in file "newmain.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  value           1    wreg     unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  value           1    0[BANK0 ] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         0       1       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       1       0       0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 4
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_ReadDHT11
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _TMR0_Set_Value
  2760  0609                     _TMR0_Set_Value:
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _TMR0_Set_Value: [wreg]
  2764                           ;TMR0_Set_Value@value stored from wreg
  2765  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2766  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2767  060B  00A0               	movwf	TMR0_Set_Value@value
  2768  060C                     l1342:
  2769                           
  2770                           ;newmain.c: 120: void TMR0_Set_Value(unsigned char value);newmain.c: 121: {;newmain.c: 1
      +                          22:     TMR0 = value;
  2771  060C  0820               	movf	TMR0_Set_Value@value,w
  2772  060D  0081               	movwf	1	;volatile
  2773  060E                     l87:
  2774  060E  0008               	return
  2775  060F                     __end_of_TMR0_Set_Value:
  2776                           
  2777                           	psect	text9
  2778  060F                     __ptext9:	
  2779 ;; *************** function _TMR0_Get_Value *****************
  2780 ;; Defined at:
  2781 ;;		line 116 in file "newmain.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      unsigned char 
  2788 ;; Registers used:
  2789 ;;		wreg
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 4
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_ReadDHT11
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _TMR0_Get_Value
  2811  060F                     _TMR0_Get_Value:
  2812  060F                     l1338:	
  2813                           ;incstack = 0
  2814                           ; Regs used in _TMR0_Get_Value: [wreg]
  2815                           
  2816                           
  2817                           ;newmain.c: 118:     return TMR0;
  2818  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0611  0801               	movf	1,w	;volatile
  2821  0612                     l84:
  2822  0612  0008               	return
  2823  0613                     __end_of_TMR0_Get_Value:
  2824                           
  2825                           	psect	text10
  2826  05F0                     __ptext10:	
  2827 ;; *************** function _IO_Init *****************
  2828 ;; Defined at:
  2829 ;;		line 46 in file "newmain.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		status,2
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 4
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _IO_Init
  2859  05F0                     _IO_Init:
  2860  05F0                     l1400:	
  2861                           ;incstack = 0
  2862                           ; Regs used in _IO_Init: [status,2]
  2863                           
  2864                           
  2865                           ;newmain.c: 48:     TRISCbits.TRISC6 = 0;
  2866  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  2867  05F1  1303               	bcf	3,6	;RP1=0, select bank1
  2868  05F2  1307               	bcf	7,6	;volatile
  2869                           
  2870                           ;newmain.c: 49:     TRISCbits.TRISC7 = 1;
  2871  05F3  1787               	bsf	7,7	;volatile
  2872  05F4                     l1402:
  2873                           
  2874                           ;newmain.c: 50:     TRISB = 0;
  2875  05F4  0186               	clrf	6	;volatile
  2876                           
  2877                           ;newmain.c: 51:     PORTB = 0x00;
  2878  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2879  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  2880  05F7  0186               	clrf	6	;volatile
  2881  05F8                     l49:
  2882  05F8  0008               	return
  2883  05F9                     __end_of_IO_Init:
  2884                           
  2885                           	psect	text11
  2886  05CD                     __ptext11:	
  2887 ;; *************** function _DHT11_Init *****************
  2888 ;; Defined at:
  2889 ;;		line 124 in file "newmain.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		status,2, status,0, pclath, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2903 ;;      Params:         0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 5
  2910 ;; This function calls:
  2911 ;;		_TMR0_Config
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _DHT11_Init
  2919  05CD                     _DHT11_Init:
  2920  05CD                     l1442:	
  2921                           ;incstack = 0
  2922                           ; Regs used in _DHT11_Init: [status,2+status,0+pclath+cstack]
  2923                           
  2924                           
  2925                           ;newmain.c: 126:     TRISDbits.TRISD1 = 0;
  2926  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  2927  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  2928  05CF  1088               	bcf	8,1	;volatile
  2929                           
  2930                           ;newmain.c: 127:     PORTDbits.RD1 = 0;
  2931  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2932  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2933  05D2  1088               	bcf	8,1	;volatile
  2934  05D3                     l1444:
  2935                           
  2936                           ;newmain.c: 128:     TMR0_Config();
  2937  05D3  120A  118A  2601  120A  118A  	fcall	_TMR0_Config
  2938  05D8                     l90:
  2939  05D8  0008               	return
  2940  05D9                     __end_of_DHT11_Init:
  2941                           
  2942                           	psect	text12
  2943  0601                     __ptext12:	
  2944 ;; *************** function _TMR0_Config *****************
  2945 ;; Defined at:
  2946 ;;		line 108 in file "newmain.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		None
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 4
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_DHT11_Init
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _TMR0_Config
  2976  0601                     _TMR0_Config:
  2977  0601                     l1336:	
  2978                           ;incstack = 0
  2979                           ; Regs used in _TMR0_Config: []
  2980                           
  2981                           
  2982                           ;newmain.c: 110:     OPTION_REGbits.T0CS = 0;
  2983  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0603  1281               	bcf	1,5	;volatile
  2986                           
  2987                           ;newmain.c: 111:     OPTION_REGbits.PSA = 0;
  2988  0604  1181               	bcf	1,3	;volatile
  2989                           
  2990                           ;newmain.c: 112:     OPTION_REGbits.PS2 = 0;
  2991  0605  1101               	bcf	1,2	;volatile
  2992                           
  2993                           ;newmain.c: 113:     OPTION_REGbits.PS1 = 0;
  2994  0606  1081               	bcf	1,1	;volatile
  2995                           
  2996                           ;newmain.c: 114:     OPTION_REGbits.PS0 = 1;
  2997  0607  1401               	bsf	1,0	;volatile
  2998  0608                     l81:
  2999  0608  0008               	return
  3000  0609                     __end_of_TMR0_Config:
  3001                           
  3002                           	psect	text13
  3003  0507                     __ptext13:	
  3004 ;; *************** function _RX *****************
  3005 ;; Defined at:
  3006 ;;		line 391 in file "newmain.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  ReceivedData    1   11[COMMON] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0
  3022 ;;      Temps:          5       0       0       0       0
  3023 ;;      Totals:         6       0       0       0       0
  3024 ;;Total ram usage:        6 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 3
  3027 ;; This function calls:
  3028 ;;		_ClearRX_Buffer
  3029 ;;		_HandleData
  3030 ;; This function is called by:
  3031 ;;		Interrupt level 1
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _RX
  3037  0507                     _RX:
  3038  0507                     i1l1802:
  3039                           
  3040                           ;newmain.c: 393:     if(RCIE)
  3041  0507  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0508  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0509  1E8C               	btfss	12,5	;volatile
  3044  050A  2D0C               	goto	u166_21
  3045  050B  2D0D               	goto	u166_20
  3046  050C                     u166_21:
  3047  050C  2D35               	goto	i1l198
  3048  050D                     u166_20:
  3049  050D                     i1l1804:
  3050                           
  3051                           ;newmain.c: 394:     {;newmain.c: 395:         if(RCIF)
  3052  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3053  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3054  050F  1E8C               	btfss	12,5	;volatile
  3055  0510  2D12               	goto	u167_21
  3056  0511  2D13               	goto	u167_20
  3057  0512                     u167_21:
  3058  0512  2D35               	goto	i1l198
  3059  0513                     u167_20:
  3060  0513                     i1l1806:
  3061                           
  3062                           ;newmain.c: 396:         {;newmain.c: 397:             char ReceivedData;;newmain.c: 398
      +                          :             ReceivedData = RCREG;
  3063  0513  081A               	movf	26,w	;volatile
  3064  0514  00F6               	movwf	??_RX
  3065  0515  0876               	movf	??_RX,w
  3066  0516  00FB               	movwf	RX@ReceivedData
  3067  0517                     i1l1808:
  3068                           
  3069                           ;newmain.c: 399:             if(ReceivedData != '\n')
  3070  0517  300A               	movlw	10
  3071  0518  067B               	xorwf	RX@ReceivedData,w
  3072  0519  1903               	btfsc	3,2
  3073  051A  2D1C               	goto	u168_21
  3074  051B  2D1D               	goto	u168_20
  3075  051C                     u168_21:
  3076  051C  2D2A               	goto	i1l1814
  3077  051D                     u168_20:
  3078  051D                     i1l1810:
  3079                           
  3080                           ;newmain.c: 400:             {;newmain.c: 401:                 RX_Buffer[rx_index++] = R
      +                          CREG;
  3081  051D  081A               	movf	26,w	;volatile
  3082  051E  00F6               	movwf	??_RX
  3083  051F  087C               	movf	_rx_index,w
  3084  0520  3EA0               	addlw	(low (_RX_Buffer| 0))& (0+255)
  3085  0521  0084               	movwf	4
  3086  0522  0876               	movf	??_RX,w
  3087  0523  1383               	bcf	3,7	;select IRP bank1
  3088  0524  0080               	movwf	0
  3089  0525                     i1l1812:
  3090  0525  3001               	movlw	1
  3091  0526  00F6               	movwf	??_RX
  3092  0527  0876               	movf	??_RX,w
  3093  0528  07FC               	addwf	_rx_index,f
  3094                           
  3095                           ;newmain.c: 402:             }
  3096  0529  2D35               	goto	i1l198
  3097  052A                     i1l1814:
  3098                           
  3099                           ;newmain.c: 404:             {;newmain.c: 405:                 HandleData(RX_Buffer);
  3100  052A  30A0               	movlw	(low (_RX_Buffer| 0))& (0+255)
  3101  052B  120A  118A  25E5  120A  118A  	fcall	_HandleData
  3102  0530                     i1l1816:
  3103                           
  3104                           ;newmain.c: 406:                 ClearRX_Buffer();
  3105  0530  120A  118A  25AD  120A  118A  	fcall	_ClearRX_Buffer
  3106  0535                     i1l198:
  3107  0535  087A               	movf	??_RX+4,w
  3108  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0538  00FF               	movwf	btemp+1
  3111  0539  0879               	movf	??_RX+3,w
  3112  053A  008A               	movwf	10
  3113  053B  0878               	movf	??_RX+2,w
  3114  053C  0084               	movwf	4
  3115  053D  0E77               	swapf	??_RX+1,w
  3116  053E  0083               	movwf	3
  3117  053F  0EFE               	swapf	btemp,f
  3118  0540  0E7E               	swapf	btemp,w
  3119  0541  0009               	retfie
  3120  0542                     __end_of_RX:
  3121                           
  3122                           	psect	intentry
  3123  0004                     __pintentry:	
  3124                           ;incstack = 0
  3125                           ; Regs used in _RX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3126                           
  3127  0004                     interrupt_function:
  3128  007E                     saved_w	set	btemp
  3129  0004  00FE               	movwf	btemp
  3130  0005  0E03               	swapf	3,w
  3131  0006  00F7               	movwf	??_RX+1
  3132  0007  0804               	movf	4,w
  3133  0008  00F8               	movwf	??_RX+2
  3134  0009  080A               	movf	10,w
  3135  000A  00F9               	movwf	??_RX+3
  3136  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3137  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3138  000D  087F               	movf	btemp+1,w
  3139  000E  00FA               	movwf	??_RX+4
  3140  000F  120A  118A  2D07   	ljmp	_RX
  3141                           
  3142                           	psect	text14
  3143  05E5                     __ptext14:	
  3144 ;; *************** function _HandleData *****************
  3145 ;; Defined at:
  3146 ;;		line 95 in file "newmain.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  RX              1    wreg     PTR unsigned char 
  3149 ;;		 -> RX_Buffer(50), 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  RX              1    5[COMMON] PTR unsigned char 
  3152 ;;		 -> RX_Buffer(50), 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       0       0       0       0
  3163 ;;      Locals:         1       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0
  3165 ;;      Totals:         1       0       0       0       0
  3166 ;;Total ram usage:        1 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 2
  3169 ;; This function calls:
  3170 ;;		i1_UART_Transmit_Text
  3171 ;; This function is called by:
  3172 ;;		_RX
  3173 ;;		_UART_Receive
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _HandleData
  3179  05E5                     _HandleData:
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _HandleData: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3183                           ;HandleData@RX stored from wreg
  3184  05E5  00F5               	movwf	HandleData@RX
  3185  05E6                     i1l1426:
  3186                           
  3187                           ;newmain.c: 95: void HandleData(char *RX);newmain.c: 96: {;newmain.c: 97:     UART_Trans
      +                          mit_Text(RX);
  3188  05E6  0875               	movf	HandleData@RX,w
  3189  05E7  00F1               	movwf	i1UART_Transmit_Text@str
  3190  05E8  3000               	movlw	0
  3191  05E9  00F2               	movwf	i1UART_Transmit_Text@str+1
  3192  05EA  120A  118A  256F  120A  118A  	fcall	i1_UART_Transmit_Text
  3193  05EF                     i1l73:
  3194  05EF  0008               	return
  3195  05F0                     __end_of_HandleData:
  3196                           
  3197                           	psect	text15
  3198  056F                     __ptext15:	
  3199 ;; *************** function i1_UART_Transmit_Text *****************
  3200 ;; Defined at:
  3201 ;;		line 69 in file "newmain.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  str             2    1[COMMON] PTR unsigned char 
  3204 ;;		 -> STR_2(7), main@text(40), RX_Buffer(50), 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  i               1    4[COMMON] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         2       0       0       0       0
  3217 ;;      Locals:         1       0       0       0       0
  3218 ;;      Temps:          1       0       0       0       0
  3219 ;;      Totals:         4       0       0       0       0
  3220 ;;Total ram usage:        4 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 1
  3223 ;; This function calls:
  3224 ;;		i1_UART_Transmit
  3225 ;; This function is called by:
  3226 ;;		_HandleData
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function i1_UART_Transmit_Text
  3232  056F                     i1_UART_Transmit_Text:
  3233  056F                     i1l1392:	
  3234                           ;incstack = 0
  3235                           ; Regs used in i1_UART_Transmit_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3236                           
  3237                           
  3238                           ;newmain.c: 69: void UART_Transmit_Text(char *str);newmain.c: 70: {;newmain.c: 71:     u
      +                          nsigned char i=0;
  3239  056F  01F4               	clrf	i1UART_Transmit_Text@i
  3240                           
  3241                           ;newmain.c: 72:     while(str[i] != 0)
  3242  0570  2D86               	goto	i1l1398
  3243  0571                     i1l1394:
  3244                           
  3245                           ;newmain.c: 73:     {;newmain.c: 74:         UART_Transmit(str[i]);
  3246  0571  0874               	movf	i1UART_Transmit_Text@i,w
  3247  0572  0771               	addwf	i1UART_Transmit_Text@str,w
  3248  0573  0084               	movwf	4
  3249  0574  0872               	movf	i1UART_Transmit_Text@str+1,w
  3250  0575  1803               	skipnc
  3251  0576  0A72               	incf	i1UART_Transmit_Text@str+1,w
  3252  0577  00FF               	movwf	btemp+1
  3253  0578  120A  118A  248B  120A  118A  	fcall	stringtab
  3254  057D  120A  118A  25D9  120A  118A  	fcall	i1_UART_Transmit
  3255  0582                     i1l1396:
  3256                           
  3257                           ;newmain.c: 75:         i++;
  3258  0582  3001               	movlw	1
  3259  0583  00F3               	movwf	??i1_UART_Transmit_Text
  3260  0584  0873               	movf	??i1_UART_Transmit_Text,w
  3261  0585  07F4               	addwf	i1UART_Transmit_Text@i,f
  3262  0586                     i1l1398:
  3263                           
  3264                           ;newmain.c: 72:     while(str[i] != 0)
  3265  0586  0874               	movf	i1UART_Transmit_Text@i,w
  3266  0587  0771               	addwf	i1UART_Transmit_Text@str,w
  3267  0588  0084               	movwf	4
  3268  0589  0872               	movf	i1UART_Transmit_Text@str+1,w
  3269  058A  1803               	skipnc
  3270  058B  0A72               	incf	i1UART_Transmit_Text@str+1,w
  3271  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3272  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3273  058E  00FF               	movwf	btemp+1
  3274  058F  120A  118A  248B  120A  118A  	fcall	stringtab
  3275  0594  3A00               	xorlw	0
  3276  0595  1D03               	skipz
  3277  0596  2D98               	goto	u100_21
  3278  0597  2D99               	goto	u100_20
  3279  0598                     u100_21:
  3280  0598  2D71               	goto	i1l1394
  3281  0599                     u100_20:
  3282  0599                     i1l64:
  3283  0599  0008               	return
  3284  059A                     __end_ofi1_UART_Transmit_Text:
  3285                           
  3286                           	psect	text16
  3287  05D9                     __ptext16:	
  3288 ;; *************** function i1_UART_Transmit *****************
  3289 ;; Defined at:
  3290 ;;		line 64 in file "newmain.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  c               1    wreg     unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  c               1    0[COMMON] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         1       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0
  3307 ;;      Totals:         1       0       0       0       0
  3308 ;;Total ram usage:        1 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		i1_UART_Transmit_Text
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function i1_UART_Transmit
  3319  05D9                     i1_UART_Transmit:
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in i1_UART_Transmit: [wreg]
  3323                           ;i1UART_Transmit@c stored from wreg
  3324  05D9  00F0               	movwf	i1UART_Transmit@c
  3325  05DA                     i1l1328:
  3326  05DA                     i1l55:	
  3327                           ;newmain.c: 64: void UART_Transmit(char c);newmain.c: 65: {;newmain.c: 66:     while(!TR
      +                          MT);
  3328                           
  3329  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3330  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3331  05DC  1C98               	btfss	24,1	;volatile
  3332  05DD  2DDF               	goto	u85_21
  3333  05DE  2DE0               	goto	u85_20
  3334  05DF                     u85_21:
  3335  05DF  2DDA               	goto	i1l55
  3336  05E0                     u85_20:
  3337  05E0                     i1l1330:
  3338                           
  3339                           ;newmain.c: 67:     TXREG = c;
  3340  05E0  0870               	movf	i1UART_Transmit@c,w
  3341  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3342  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  3343  05E3  0099               	movwf	25	;volatile
  3344  05E4                     i1l58:
  3345  05E4  0008               	return
  3346  05E5                     __end_ofi1_UART_Transmit:
  3347                           
  3348                           	psect	text17
  3349  05AD                     __ptext17:	
  3350 ;; *************** function _ClearRX_Buffer *****************
  3351 ;; Defined at:
  3352 ;;		line 99 in file "newmain.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  i               1    1[COMMON] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         1       0       0       0       0
  3368 ;;      Temps:          1       0       0       0       0
  3369 ;;      Totals:         2       0       0       0       0
  3370 ;;Total ram usage:        2 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_RX
  3376 ;;		_UART_Receive
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _ClearRX_Buffer
  3382  05AD                     _ClearRX_Buffer:
  3383  05AD                     i1l1428:	
  3384                           ;incstack = 0
  3385                           ; Regs used in _ClearRX_Buffer: [wreg-fsr0h+status,2+status,0]
  3386                           
  3387                           
  3388                           ;newmain.c: 101:  char i;;newmain.c: 102:  for(i = 0; i < 50; i++)
  3389  05AD  01F1               	clrf	ClearRX_Buffer@i
  3390  05AE                     i1l1434:
  3391                           
  3392                           ;newmain.c: 103:  {;newmain.c: 104:   RX_Buffer[i] = 0;
  3393  05AE  0871               	movf	ClearRX_Buffer@i,w
  3394  05AF  3EA0               	addlw	(low (_RX_Buffer| 0))& (0+255)
  3395  05B0  0084               	movwf	4
  3396  05B1  1383               	bcf	3,7	;select IRP bank1
  3397  05B2  0180               	clrf	0
  3398  05B3                     i1l1436:
  3399                           
  3400                           ;newmain.c: 105:  }
  3401  05B3  3001               	movlw	1
  3402  05B4  00F0               	movwf	??_ClearRX_Buffer
  3403  05B5  0870               	movf	??_ClearRX_Buffer,w
  3404  05B6  07F1               	addwf	ClearRX_Buffer@i,f
  3405  05B7                     i1l1438:
  3406  05B7  3032               	movlw	50
  3407  05B8  0271               	subwf	ClearRX_Buffer@i,w
  3408  05B9  1C03               	skipc
  3409  05BA  2DBC               	goto	u102_21
  3410  05BB  2DBD               	goto	u102_20
  3411  05BC                     u102_21:
  3412  05BC  2DAE               	goto	i1l1434
  3413  05BD                     u102_20:
  3414  05BD                     i1l1440:
  3415                           
  3416                           ;newmain.c: 106:  rx_index = 0;
  3417  05BD  01FC               	clrf	_rx_index
  3418  05BE                     i1l78:
  3419  05BE  0008               	return
  3420  05BF                     __end_of_ClearRX_Buffer:
  3421  007E                     btemp	set	126	;btemp
  3422  007E                     wtemp0	set	126
  3423                           
  3424                           	psect	config
  3425                           
  3426                           ;Config register CONFIG @ 0x2007
  3427                           ;	Oscillator Selection bits
  3428                           ;	FOSC = HS, HS oscillator
  3429                           ;	Watchdog Timer Enable bit
  3430                           ;	WDTE = OFF, WDT disabled
  3431                           ;	Power-up Timer Enable bit
  3432                           ;	PWRTE = OFF, PWRT disabled
  3433                           ;	Brown-out Reset Enable bit
  3434                           ;	BOREN = OFF, BOR disabled
  3435                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3436                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3437                           ;	Data EEPROM Memory Code Protection bit
  3438                           ;	CPD = OFF, Data EEPROM code protection off
  3439                           ;	Flash Program Memory Write Enable bits
  3440                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3441                           ;	In-Circuit Debugger Mode bit
  3442                           ;	DEBUG = 0x1, unprogrammed default
  3443                           ;	Flash Program Memory Code Protection bit
  3444                           ;	CP = OFF, Code protection off
  3445  2007                     	org	8199
  3446  2007  3F3A               	dw	16186

Data Sizes:
    Strings     38
    Constant    10
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     79      79
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 31
		 -> STR_1(CODE[31]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> main@text(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ReadDHT11@u8Buff	PTR unsigned char  size(1) Largest target is 5
		 -> main@data(BANK0[5]), 

    HandleData@RX	PTR unsigned char  size(1) Largest target is 50
		 -> RX_Buffer(BANK1[50]), 

    UART_Transmit_Text@str	PTR unsigned char  size(2) Largest target is 50
		 -> STR_2(CODE[7]), main@text(BANK0[40]), RX_Buffer(BANK1[50]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _RX in COMMON

    _RX->_HandleData
    _HandleData->i1_UART_Transmit_Text
    i1_UART_Transmit_Text->i1_UART_Transmit

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Transmit_Text->_UART_Transmit
    _ReadDHT11->_TMR0_Set_Value

Critical Paths under _RX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RX in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RX in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RX in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0    2647
                                             29 BANK0     50    50      0
                         _DHT11_Init
                            _IO_Init
                          _ReadDHT11
                          _UART_Init
                 _UART_Transmit_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    18      5    1211
                                             14 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit_Text                                   4     2      2     314
                                              1 BANK0      4     2      2
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadDHT11                                            8     8      0     974
                                              1 BANK0      8     8      0
                     _TMR0_Get_Value
                     _TMR0_Set_Value
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set_Value                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Get_Value                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Init                                           0     0      0       0
                        _TMR0_Config
 ---------------------------------------------------------------------------------
 (2) _TMR0_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _RX                                                   6     6      0     317
                                              6 COMMON     6     6      0
                     _ClearRX_Buffer
                         _HandleData
 ---------------------------------------------------------------------------------
 (4) _HandleData                                           1     1      0     226
                                              5 COMMON     1     1      0
               i1_UART_Transmit_Text
 ---------------------------------------------------------------------------------
 (5) i1_UART_Transmit_Text                                 4     2      2     138
                                              1 COMMON     4     2      2
                    i1_UART_Transmit
 ---------------------------------------------------------------------------------
 (6) i1_UART_Transmit                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ClearRX_Buffer                                       2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_Init
     _TMR0_Config
   _IO_Init
   _ReadDHT11
     _TMR0_Get_Value
     _TMR0_Set_Value
   _UART_Init
   _UART_Transmit_Text
     _UART_Transmit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _RX (ROOT)
   _ClearRX_Buffer
   _HandleData
     i1_UART_Transmit_Text
       i1_UART_Transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 10:47:12 2022

                            pc 0002                             l52 05AC                             l55 05C2  
                           l64 056E                             l81 0608                             l49 05F8  
                           l90 05D8                             l58 05CC                             l84 0612  
                           l94 0042                             l87 060E                             l97 005D  
                           l98 02FC                             _RX 0507                     ReadDHT11@i 0026  
                           fsr 0004                            ?_RX 0070                            l100 006B  
                          l110 00B1                            l103 0085                            l120 00EF  
                          l105 008E                            l130 013D                            l122 00F8  
                          l114 00CC                            l140 019C                            l108 00A8  
                          l133 0157                            l117 00D5                            l143 01A5  
                          l135 0160                            l127 0134                            l161 0232  
                          l153 0206                            l146 01BF                            l172 0293  
                          l156 020F                            l148 01C8                            l308 03E6  
                          l174 029C                            l166 0270                            l159 0229  
                          l169 0279                            l584 048A                            l594 0506  
                          u910 0472                            u911 0471                            u905 0462  
                          u930 0486                            u931 0485                            u915 046E  
                          u860 05C8                            u940 04D3                            u861 05C7  
                          u925 047A                            u941 04D2                            u870 044F  
                          u871 044E                            u960 04E5                            u961 04E4  
                          u890 0461                            u970 04EF                            u891 0460  
                          u971 04EE                            u955 04D7                            u885 0453  
                          u990 0502                            u991 0501                            u975 04EB  
                          u985 04F6                            fsr0 0004                            indf 0000  
          __size_of_DHT11_Init 000C                           ??_RX 0076                           l1400 05F0  
                         l1402 05F4                           l1410 05A4                           l1412 05A7  
                         l1404 059A                           l1332 05C2                           l1420 0546  
                         l1342 060C                           l1510 00D9                           l1502 00CB  
                         l1414 05AA                           l1406 059E                           l1334 05C8  
                         l1422 0557                           l1350 0452                           l1336 0601  
                         l1600 01C1                           l1520 00F1                           l1512 00DB  
                         l1416 05AB                           l1408 05A1                           l1424 055D  
                         l1360 0478                           l1352 0459                           l1344 0445  
                         l1442 05CD                           l1338 060F                           l1602 01CC  
                         l1522 00FC                           l1514 00E9                           l1450 0036  
                         l1418 0542                           l1362 0479                           l1354 045D  
                         l1346 0449                           l1370 04CB                           l1444 05D3  
                         l1700 02D3                           l1620 01FF                           l1612 01E2  
                         l1604 01CE                           l1540 012D                           l1532 0112  
                         l1524 00FE                           l1508 00CE                           l1460 0056  
                         l1452 0039                           l1364 0480                           l1356 0461  
                         l1348 044F                           l1380 04E5                           l1372 04D3  
                         l1702 02D9                           l1630 0213                           l1622 0205  
                         l1614 01E8                           l1606 01DC                           l1550 0141  
                         l1542 0133                           l1534 0117                           l1526 010C  
                         l1470 0071                           l1462 005B                           l1454 003B  
                         l1446 0026                           l1358 0472                           l1366 0486  
                         l1382 04EF                           l1374 04D6                           l1640 022B  
                         l1632 0215                           l1616 01F6                           l1560 0159  
                         l1552 0143                           l1536 0125                           l1480 0092  
                         l1472 007F                           l1456 0046                           l1448 002C  
                         l1384 04F5                           l1376 04DD                           l1720 0317  
                         l1712 0300                           l1800 0432                           l1642 0236  
                         l1634 0223                           l1618 01FB                           l1562 0164  
                         l1554 0151                           l1538 0129                           l1490 00AA  
                         l1482 0094                           l1466 0064                           l1458 0048  
                         l1386 04FC                           l1378 04E1                           l1730 0341  
                         l1714 0305                           l1708 02FB                           l1660 0269  
                         l1652 024C                           l1644 0238                           l1628 0208  
                         l1580 0195                           l1572 017A                           l1564 0166  
                         l1548 0136                           l1492 00B5                           l1484 00A2  
                         l1468 006F                           l1388 0502                           l1732 0345  
                         l1724 0318                           l1716 030B                           l1670 027D  
                         l1662 026F                           l1654 0252                           l1646 0246  
                         l1590 01A9                           l1582 019B                           l1574 017F  
                         l1566 0174                           l1494 00B7                           l1478 0087  
                         l1750 037C                           l1742 0350                           l1734 0349  
                         l1726 0335                           l1718 0312                           l1680 0295  
                         l1672 027F                           l1656 0260                           l1592 01AB  
                         l1576 018D                           l1496 00C5                           l1760 03C3  
                         l1752 0383                           l1736 034E                           l1728 033D  
                         l1682 02A0                           l1674 028D                           l1658 0265  
                         l1594 01B9                           l1578 0191                           l1762 03C7  
                         l1754 0387                           l1746 036C                           l1692 02B6  
                         l1684 02A2                           l1668 0272                           l1588 019E  
                         l1756 038C                           l1748 0376                           l1764 03D0  
                         l1694 02BC                           l1686 02B0                           l1758 03BC  
                         l1766 03E2                           l1838 032A                           l1790 03EC  
                         l1696 02CA                           l1792 03F1                           l1698 02CF  
                         l1794 03F6                           l1796 0401                           l1788 03E7  
                         l1798 0427                           STR_1 04A5                           STR_2 04C4  
                         _CREN 00C4                           u1010 056E                           u1011 056D  
                         u1100 00A2                           u1101 00A1                           u1110 00A7  
                         u1030 0046                           u1111 00A6                           u1031 0045  
                         u1200 0111                           u1120 00B5                           u1040 0056  
                         u1201 0110                           u1121 00B4                           u1041 0055  
                         u1210 0125                           u1130 00C5                           u1050 005B  
                         u1211 0124                           u1131 00C4                           u1051 005A  
                         u1300 019B                           u1220 0133                           u1140 00CA  
                         u1060 006F                           u1301 019A                           u1221 0132  
                         u1141 00C9                           u1061 006E                           u1310 01A9  
                         u1230 0141                           u1150 00D9                           u1070 007F  
                         u1311 01A8                           u1231 0140                           u1151 00D8  
                         u1071 007E                           u1400 0223                           u1320 01B9  
                         u1240 0151                           u1160 00E9                           u1080 0084  
                         u1401 0222                           u1321 01B8                           u1241 0150  
                         u1161 00E8                           u1081 0083                           u1410 0228  
                         u1330 01BE                           u1250 0156                           u1170 00EE  
                         u1090 0092                           u1411 0227                           u1331 01BD  
                         u1251 0155                           u1171 00ED                           u1091 0091  
                         u1500 02A0                           u1420 0236                           u1340 01CC  
                         u1260 0164                           u1180 00FC                           u1501 029F  
                         u1421 0235                           u1341 01CB                           u1261 0163  
                         u1181 00FB                           u1510 02B0                           u1430 0246  
                         u1350 01DC                           u1270 0174                           u1190 010C  
                         u1511 02AF                           u1431 0245                           u1351 01DB  
                         u1271 0173                           u1191 010B                           u1520 02B5  
                         u1440 024B                           u1360 01E1                           u1280 0179  
                         u1600 037C                           u1521 02B4                           u1441 024A  
                         u1361 01E0                           u1281 0178                           u1601 037B  
                         u1530 02CA                           u1450 0260                           u1370 01F6  
                         u1290 018D                           u1610 03D0                           u1531 02C9  
                         u1451 025F                           u1371 01F5                           u1291 018C  
                         u1611 03CF                           u1540 02D9                           u1460 026F  
                         u1380 0205                           u1620 03E2                           u1541 02D8  
                         u1461 026E                           u1381 0204                           u1621 03E1  
                         u1550 02FA                           u1470 027D                           u1390 0213  
                         u1551 02F9                           u1471 027C                           u1391 0212  
                         u1480 028D                           u1560 030B                           u1481 028C  
                         u1561 030A                           u1490 0292                           u1570 0345  
                         u1650 0401                           u1491 0291                           u1707 0032  
                         u1571 0344                           u1651 0400                           u1580 036B  
                         u1581 036A                           u1590 0376                           u1591 0375  
                         u1585 0367                           u1697 043A                           _RCIE 0465  
                         _RCIF 0065                           i1l55 05DA                           i1l64 0599  
                         i1l73 05EF                           i1l58 05E4                           i1l78 05BE  
                         _TMR0 0001                           _SPEN 00C7                           _TRMT 04C1  
                         _TXEN 04C5                __end_of_IO_Init 05F9                           _main 03E7  
                         btemp 007E                           start 0012     __end_of_UART_Transmit_Text 056F  
                   _HandleData 05E5                          ?_main 0070                __end_of___lwdiv 048B  
              __end_of___lwmod 0507                          i1l198 0535                          _RCREG 001A  
                        _SPBRG 0099                          _PORTB 0006                          _TRISB 0086  
                        u85_20 05E0                          u85_21 05DF                          _TXREG 0019  
         i1_UART_Transmit_Text 056F             __size_of_UART_Init 0013                __end_of_dpowers 04A5  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __end_of_sprintf 03E7               ?i1_UART_Transmit 0070                __initialization 0015  
           ReadDHT11@u8TimeOut 0028                   __end_of_main 0445                         ??_main 003D  
        ?i1_UART_Transmit_Text 0071                      ??_IO_Init 0020             __size_of_ReadDHT11 02DA  
                       u100_20 0599                         u100_21 0598                         u102_20 05BD  
                       u102_21 05BC                         i1l1330 05E0                         i1l1440 05BD  
                       i1l1328 05DA                         i1l1434 05AE                         i1l1426 05E6  
                       i1l1436 05B3                         i1l1428 05AD                         i1l1438 05B7  
                       i1l1392 056F                         i1l1394 0571                         i1l1810 051D  
                       i1l1802 0507                         i1l1396 0582                         i1l1812 0525  
                       i1l1804 050D                         i1l1398 0586                         i1l1814 052A  
                       i1l1806 0513                         i1l1816 0530                         i1l1808 0517  
                       u166_20 050D                         u166_21 050C                         u167_20 0513  
                       u167_21 0512                         u168_20 051D                         u168_21 051C  
                 ??_DHT11_Init 0020                   ?_TMR0_Config 0070              __end_of_UART_Init 05AD  
        i1UART_Transmit_Text@i 0074                    ?_HandleData 0070                      ??___lwdiv 0024  
                    ??___lwmod 002C                         saved_w 007E             __end_of_DHT11_Init 05D9  
          TMR0_Set_Value@value 0020                      ??_sprintf 0033               ??_ClearRX_Buffer 0070  
      __end_of__initialization 001F        __size_of_TMR0_Get_Value 0004          __end_of_UART_Transmit 05CD  
               __pcstackCOMMON 0070              __end_of_ReadDHT11 02FD                     __end_of_RX 0542  
       ??i1_UART_Transmit_Text 0073                 _OPTION_REGbits 0081        __size_of_TMR0_Set_Value 0006  
          __size_of_HandleData 000B                     __pbssBANK1 00A0                     __pmaintext 03E7  
                   __pintentry 0004             _UART_Transmit_Text 0542                        _IO_Init 05F0  
                   __stringtab 048B            ?_UART_Transmit_Text 0021                ReadDHT11@u8Buff 0027  
         __size_of_TMR0_Config 0008                        ___lwdiv 0445                        ___lwmod 04CB  
         ??_UART_Transmit_Text 0023                        __ptext1 02FD                        __ptext2 04CB  
                      __ptext3 0445                        __ptext4 0542                        __ptext5 05BF  
                      __ptext6 059A                        __ptext7 0023                        __ptext8 0609  
                      __ptext9 060F                        _dpowers 049B                        _sprintf 02FD  
                      clrloop0 05FA           end_of_initialization 001F                 _TMR0_Get_Value 060F  
               UART_Transmit@c 0020                   ??_HandleData 0075                      _UART_Init 059A  
     __size_ofi1_UART_Transmit 000C                      _PORTDbits 0008                      _TRISCbits 0087  
                    _TRISDbits 0088                 _TMR0_Set_Value 0609         __end_of_TMR0_Get_Value 0613  
           __end_of_HandleData 05F0                      _RX_Buffer 00A0                     ?_UART_Init 0070  
              ClearRX_Buffer@i 0071                      _ReadDHT11 0023         __end_of_TMR0_Set_Value 060F  
          start_initialization 0015                ?_TMR0_Get_Value 0070                     ?_ReadDHT11 0070  
              ?_TMR0_Set_Value 0070  __size_ofi1_UART_Transmit_Text 002B                    __pbssCOMMON 007C  
                    ___latbits 0002         __size_of_UART_Transmit 000E                  __pcstackBANK0 0020  
            ??i1_UART_Transmit 0070                       ?_IO_Init 0070                    sprintf@flag 0037  
                  sprintf@prec 0038                 RX@ReceivedData 007B               ___lwdiv@dividend 0022  
      __size_of_ClearRX_Buffer 0012                       ?___lwdiv 0020                       ?___lwmod 0028  
                  ??_UART_Init 0020                      __pstrings 048B               ___lwdiv@quotient 0025  
                     ?_sprintf 002E                    __size_of_RX 003B                   HandleData@RX 0075  
            interrupt_function 0004                      clear_ram0 05F9                  ??_TMR0_Config 0020  
                _UART_Transmit 05BF            UART_Transmit_Text@i 0024    __size_of_UART_Transmit_Text 002D  
                  __stringbase 049A               i1UART_Transmit@c 0070                    ??_ReadDHT11 0021  
             __size_of_IO_Init 0009               ReadDHT11@u8Check 0025                     _DHT11_Init 05CD  
               ?_UART_Transmit 0070        i1UART_Transmit_Text@str 0071            __end_of_TMR0_Config 0609  
             __size_of___lwdiv 0046               __size_of___lwmod 003C             __end_of__stringtab 049B  
             ??_TMR0_Get_Value 0020                     sprintf@val 0039                ___lwdiv@divisor 0020  
              ___lwdiv@counter 0027                       __ptext10 05F0                       __ptext11 05CD  
                     __ptext12 0601                       __ptext13 0507                       __ptext14 05E5  
                     __ptext15 056F                       __ptext16 05D9                       __ptext17 05AD  
             __size_of_sprintf 00EA                  __size_of_main 005E                 _ClearRX_Buffer 05AD  
                     _rx_index 007C               ??_TMR0_Set_Value 0020                i1_UART_Transmit 05D9  
                     main@data 006A                       main@text 0042                     _INTCONbits 000B  
                     intlevel1 0000                      sprintf@ap 0036                      sprintf@sp 003B  
             ___lwmod@dividend 002A                ??_UART_Transmit 0020   __end_ofi1_UART_Transmit_Text 059A  
                  ?_DHT11_Init 0070         __end_of_ClearRX_Buffer 05BF                      stringcode 0495  
                  _TMR0_Config 0601          UART_Transmit_Text@str 0021                       sprintf@c 003C  
                     sprintf@f 002E                ___lwmod@divisor 0028                ___lwmod@counter 002D  
                     stringdir 0495                       stringtab 048B                ?_ClearRX_Buffer 0070  
      __end_ofi1_UART_Transmit 05E5  

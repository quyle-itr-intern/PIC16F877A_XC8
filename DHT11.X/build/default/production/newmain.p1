Version 4.0 HI-TECH Software Intermediate Code
"1444 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1444:     struct {
[s S58 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S58 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1443
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1443: typedef union {
[u S57 `S58 1 ]
[n S57 . . ]
"1455
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1455: extern volatile TRISCbits_t TRISCbits __attribute__((address(0x087)));
[v _TRISCbits `VS57 ~T0 @X0 0 e@135 ]
"1376
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1376: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"217
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 217: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"2081
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2081: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"2813
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2813: extern volatile __bit SPEN __attribute__((address(0xC7)));
[v _SPEN `Vb ~T0 @X0 0 e@199 ]
"3032
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 3032: extern volatile __bit TXEN __attribute__((address(0x4C5)));
[v _TXEN `Vb ~T0 @X0 0 e@1221 ]
"2516
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2516: extern volatile __bit CREN __attribute__((address(0xC4)));
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"2741
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2741: extern volatile __bit RCIE __attribute__((address(0x465)));
[v _RCIE `Vb ~T0 @X0 0 e@1125 ]
"461
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 461:     struct {
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF TMR0IF RBIE INTE TMR0IE PEIE GIE ]
"471
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 471:     struct {
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . T0IF . T0IE ]
"460
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 460: typedef union {
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"478
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 478: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"3017
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 3017: extern volatile __bit TRMT __attribute__((address(0x4C1)));
[v _TRMT `Vb ~T0 @X0 0 e@1217 ]
"1060
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1060: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"2744
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2744: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1067
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1067: extern volatile unsigned char RCREG __attribute__((address(0x01A)));
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"40 newmain.c
[; ;newmain.c: 40: void HandleData(char *RX);
[v _HandleData `(v ~T0 @X0 0 ef1`*uc ]
"41
[; ;newmain.c: 41: void ClearRX_Buffer(void);
[v _ClearRX_Buffer `(v ~T0 @X0 0 ef ]
"1262 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1262:     struct {
[s S51 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S51 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1270
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1270:     struct {
[s S52 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S52 . PS0 PS1 PS2 ]
"1261
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1261: typedef union {
[u S50 `S51 1 `S52 1 ]
[n S50 . . . ]
"1276
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1276: extern volatile OPTION_REGbits_t OPTION_REGbits __attribute__((address(0x081)));
[v _OPTION_REGbits `VS50 ~T0 @X0 0 e@129 ]
"60
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 60: extern volatile unsigned char TMR0 __attribute__((address(0x001)));
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"1506
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1506:     struct {
[s S60 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S60 . TRISD0 TRISD1 TRISD2 TRISD3 TRISD4 TRISD5 TRISD6 TRISD7 ]
"1505
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1505: typedef union {
[u S59 `S60 1 ]
[n S59 . . ]
"1517
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1517: extern volatile TRISDbits_t TRISDbits __attribute__((address(0x088)));
[v _TRISDbits `VS59 ~T0 @X0 0 e@136 ]
"347
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 347:     struct {
[s S12 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S12 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"346
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 346: typedef union {
[u S11 `S12 1 ]
[n S11 . . ]
"358
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 358: extern volatile PORTDbits_t PORTDbits __attribute__((address(0x008)));
[v _PORTDbits `VS11 ~T0 @X0 0 e@8 ]
[v F36 `(v ~T0 @X0 1 tf1`ul ]
"12 D:\File Install MBLAB IDE\XC8\pic\include\builtins.h
[v __delay `JF36 ~T0 @X0 0 e ]
[p i __delay ]
[p mainexit ]
"194 D:\File Install MBLAB IDE\XC8\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"12 newmain.c
[p x FOSC  =  HS         ]
"13
[p x WDTE  =  OFF        ]
"14
[p x PWRTE  =  OFF       ]
"15
[p x BOREN  =  OFF       ]
"16
[p x LVP  =  OFF         ]
"17
[p x CPD  =  OFF         ]
"18
[p x WRT  =  OFF         ]
"19
[p x CP  =  OFF          ]
"55 D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"219
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 219: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"281
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 281: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"343
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 343: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"405
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 405: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"437
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 437: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"457
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 457: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"535
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 535: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"597
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 597: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"637
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 637: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"644
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 644: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"651
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 651: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"658
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 658: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"733
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 733: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"740
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 740: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"811
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 811: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"818
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 818: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"888
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 888: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"895
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 895: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"902
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 902: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"909
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 909: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"967
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 967: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1062
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1062: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1069
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1069: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1076
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1076: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1083
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1083: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1090
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1090: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1097
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1097: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1155
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1155: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1162
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1162: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1258
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1258: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1328
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1328: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1378
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1378: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1440
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1440: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1502
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1502: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1564
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1564: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1621
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1621: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1683
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1683: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1723
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1723: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1757
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1757: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1819
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1819: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1826
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1826: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1833
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 1833: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2002
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2002: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2083
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2083: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2090
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2090: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2160
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2160: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2225
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2225: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2232
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2232: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2291
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2291: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2298
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2298: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2305
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2305: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2312
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2312: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2319
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2319: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2364
[; ;D:\File Install MBLAB IDE\XC8\pic\include\proc\pic16f877a.h: 2364: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"32 newmain.c
[; ;newmain.c: 32: char RX_Buffer[50];
[v _RX_Buffer `uc ~T0 @X0 -> 50 `i e ]
"33
[; ;newmain.c: 33: char rx_index = 0;
[v _rx_index `uc ~T0 @X0 1 e ]
[i _rx_index
-> -> 0 `i `uc
]
"46
[; ;newmain.c: 46: void IO_Init()
[v _IO_Init `(v ~T0 @X0 1 ef ]
"47
[; ;newmain.c: 47: {
{
[e :U _IO_Init ]
[f ]
"48
[; ;newmain.c: 48:     TRISCbits.TRISC6 = 0;
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
"49
[; ;newmain.c: 49:     TRISCbits.TRISC7 = 1;
[e = . . _TRISCbits 0 7 -> -> 1 `i `uc ]
"50
[; ;newmain.c: 50:     TRISB = 0;
[e = _TRISB -> -> 0 `i `uc ]
"51
[; ;newmain.c: 51:     PORTB = 0x00;
[e = _PORTB -> -> 0 `i `uc ]
"52
[; ;newmain.c: 52: }
[e :UE 96 ]
}
"53
[; ;newmain.c: 53: void UART_Init()
[v _UART_Init `(v ~T0 @X0 1 ef ]
"54
[; ;newmain.c: 54: {
{
[e :U _UART_Init ]
[f ]
"56
[; ;newmain.c: 56:     SPBRG = 32;
[e = _SPBRG -> -> 32 `i `uc ]
"57
[; ;newmain.c: 57:     SPEN = 1;
[e = _SPEN -> -> 1 `i `b ]
"58
[; ;newmain.c: 58:     TXEN = 1;
[e = _TXEN -> -> 1 `i `b ]
"59
[; ;newmain.c: 59:     CREN = 1;
[e = _CREN -> -> 1 `i `b ]
"60
[; ;newmain.c: 60:     RCIE = 1;
[e = _RCIE -> -> 1 `i `b ]
"61
[; ;newmain.c: 61:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"62
[; ;newmain.c: 62:     INTCONbits.PEIE = 1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"63
[; ;newmain.c: 63: }
[e :UE 97 ]
}
"64
[; ;newmain.c: 64: void UART_Transmit(char c)
[v _UART_Transmit `(v ~T0 @X0 1 ef1`uc ]
"65
[; ;newmain.c: 65: {
{
[e :U _UART_Transmit ]
"64
[; ;newmain.c: 64: void UART_Transmit(char c)
[v _c `uc ~T0 @X0 1 r1 ]
"65
[; ;newmain.c: 65: {
[f ]
"66
[; ;newmain.c: 66:     while(!TRMT);
[e $U 99  ]
[e :U 100 ]
[e :U 99 ]
[e $ ! _TRMT 100  ]
[e :U 101 ]
"67
[; ;newmain.c: 67:     TXREG = c;
[e = _TXREG -> _c `uc ]
"68
[; ;newmain.c: 68: }
[e :UE 98 ]
}
"69
[; ;newmain.c: 69: void UART_Transmit_Text(char *str)
[v _UART_Transmit_Text `(v ~T0 @X0 1 ef1`*uc ]
"70
[; ;newmain.c: 70: {
{
[e :U _UART_Transmit_Text ]
"69
[; ;newmain.c: 69: void UART_Transmit_Text(char *str)
[v _str `*uc ~T0 @X0 1 r1 ]
"70
[; ;newmain.c: 70: {
[f ]
"71
[; ;newmain.c: 71:     unsigned char i=0;
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
"72
[; ;newmain.c: 72:     while(str[i] != 0)
[e $U 103  ]
[e :U 104 ]
"73
[; ;newmain.c: 73:     {
{
"74
[; ;newmain.c: 74:         UART_Transmit(str[i]);
[e ( _UART_Transmit (1 *U + _str * -> _i `ux -> -> # *U _str `ui `ux ]
"75
[; ;newmain.c: 75:         i++;
[e ++ _i -> -> 1 `i `uc ]
"76
[; ;newmain.c: 76:     }
}
[e :U 103 ]
"72
[; ;newmain.c: 72:     while(str[i] != 0)
[e $ != -> *U + _str * -> _i `ux -> -> # *U _str `ui `ux `i -> 0 `i 104  ]
[e :U 105 ]
"77
[; ;newmain.c: 77: }
[e :UE 102 ]
}
"78
[; ;newmain.c: 78: void UART_Receive()
[v _UART_Receive `(v ~T0 @X0 1 ef ]
"79
[; ;newmain.c: 79: {
{
[e :U _UART_Receive ]
[f ]
"80
[; ;newmain.c: 80:     if(RCIF)
[e $ ! _RCIF 107  ]
"81
[; ;newmain.c: 81:     {
{
"82
[; ;newmain.c: 82:         char ReceivedData;
[v _ReceivedData `uc ~T0 @X0 1 a ]
"83
[; ;newmain.c: 83:         ReceivedData = RCREG;
[e = _ReceivedData -> _RCREG `uc ]
"84
[; ;newmain.c: 84:         if(ReceivedData != '\n')
[e $ ! != -> _ReceivedData `ui -> 10 `ui 108  ]
"85
[; ;newmain.c: 85:         {
{
"86
[; ;newmain.c: 86:             RX_Buffer[rx_index++] = RCREG;
[e = *U + &U _RX_Buffer * -> ++ _rx_index -> -> 1 `i `uc `ux -> -> # *U &U _RX_Buffer `ui `ux -> _RCREG `uc ]
"87
[; ;newmain.c: 87:         }
}
[e $U 109  ]
"88
[; ;newmain.c: 88:         else
[e :U 108 ]
"89
[; ;newmain.c: 89:         {
{
"90
[; ;newmain.c: 90:             HandleData(RX_Buffer);
[e ( _HandleData (1 &U _RX_Buffer ]
"91
[; ;newmain.c: 91:             ClearRX_Buffer();
[e ( _ClearRX_Buffer ..  ]
"92
[; ;newmain.c: 92:         }
}
[e :U 109 ]
"93
[; ;newmain.c: 93:     }
}
[e :U 107 ]
"94
[; ;newmain.c: 94: }
[e :UE 106 ]
}
"95
[; ;newmain.c: 95: void HandleData(char *RX)
[v _HandleData `(v ~T0 @X0 1 ef1`*uc ]
"96
[; ;newmain.c: 96: {
{
[e :U _HandleData ]
"95
[; ;newmain.c: 95: void HandleData(char *RX)
[v _RX `*uc ~T0 @X0 1 r1 ]
"96
[; ;newmain.c: 96: {
[f ]
"97
[; ;newmain.c: 97:     UART_Transmit_Text(RX);
[e ( _UART_Transmit_Text (1 _RX ]
"98
[; ;newmain.c: 98: }
[e :UE 110 ]
}
"99
[; ;newmain.c: 99: void ClearRX_Buffer(void)
[v _ClearRX_Buffer `(v ~T0 @X0 1 ef ]
"100
[; ;newmain.c: 100: {
{
[e :U _ClearRX_Buffer ]
[f ]
"101
[; ;newmain.c: 101:  char i;
[v _i `uc ~T0 @X0 1 a ]
"102
[; ;newmain.c: 102:  for(i = 0; i < 50; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 50 `i 112  ]
[e $U 113  ]
[e :U 112 ]
"103
[; ;newmain.c: 103:  {
{
"104
[; ;newmain.c: 104:   RX_Buffer[i] = 0;
[e = *U + &U _RX_Buffer * -> _i `ux -> -> # *U &U _RX_Buffer `ui `ux -> -> 0 `i `uc ]
"105
[; ;newmain.c: 105:  }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 50 `i 112  ]
[e :U 113 ]
}
"106
[; ;newmain.c: 106:  rx_index = 0;
[e = _rx_index -> -> 0 `i `uc ]
"107
[; ;newmain.c: 107: }
[e :UE 111 ]
}
"108
[; ;newmain.c: 108: void TMR0_Config(void)
[v _TMR0_Config `(v ~T0 @X0 1 ef ]
"109
[; ;newmain.c: 109: {
{
[e :U _TMR0_Config ]
[f ]
"110
[; ;newmain.c: 110:     OPTION_REGbits.T0CS = 0;
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
"111
[; ;newmain.c: 111:     OPTION_REGbits.PSA = 0;
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
"112
[; ;newmain.c: 112:     OPTION_REGbits.PS2 = 0;
[e = . . _OPTION_REGbits 1 2 -> -> 0 `i `uc ]
"113
[; ;newmain.c: 113:     OPTION_REGbits.PS1 = 0;
[e = . . _OPTION_REGbits 1 1 -> -> 0 `i `uc ]
"114
[; ;newmain.c: 114:     OPTION_REGbits.PS0 = 1;
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
"115
[; ;newmain.c: 115: }
[e :UE 115 ]
}
"116
[; ;newmain.c: 116: unsigned char TMR0_Get_Value(void)
[v _TMR0_Get_Value `(uc ~T0 @X0 1 ef ]
"117
[; ;newmain.c: 117: {
{
[e :U _TMR0_Get_Value ]
[f ]
"118
[; ;newmain.c: 118:     return TMR0;
[e ) _TMR0 ]
[e $UE 116  ]
"119
[; ;newmain.c: 119: }
[e :UE 116 ]
}
"120
[; ;newmain.c: 120: void TMR0_Set_Value(unsigned char value)
[v _TMR0_Set_Value `(v ~T0 @X0 1 ef1`uc ]
"121
[; ;newmain.c: 121: {
{
[e :U _TMR0_Set_Value ]
"120
[; ;newmain.c: 120: void TMR0_Set_Value(unsigned char value)
[v _value `uc ~T0 @X0 1 r1 ]
"121
[; ;newmain.c: 121: {
[f ]
"122
[; ;newmain.c: 122:     TMR0 = value;
[e = _TMR0 _value ]
"123
[; ;newmain.c: 123: }
[e :UE 117 ]
}
"124
[; ;newmain.c: 124: void DHT11_Init(void)
[v _DHT11_Init `(v ~T0 @X0 1 ef ]
"125
[; ;newmain.c: 125: {
{
[e :U _DHT11_Init ]
[f ]
"126
[; ;newmain.c: 126:     TRISDbits.TRISD1 = 0;
[e = . . _TRISDbits 0 1 -> -> 0 `i `uc ]
"127
[; ;newmain.c: 127:     PORTDbits.RD1 = 0;
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
"128
[; ;newmain.c: 128:     TMR0_Config();
[e ( _TMR0_Config ..  ]
"129
[; ;newmain.c: 129: }
[e :UE 118 ]
}
"130
[; ;newmain.c: 130: unsigned char ReadDHT11(unsigned char* u8Buff)
[v _ReadDHT11 `(uc ~T0 @X0 1 ef1`*uc ]
"131
[; ;newmain.c: 131: {
{
[e :U _ReadDHT11 ]
"130
[; ;newmain.c: 130: unsigned char ReadDHT11(unsigned char* u8Buff)
[v _u8Buff `*uc ~T0 @X0 1 r1 ]
"131
[; ;newmain.c: 131: {
[f ]
"132
[; ;newmain.c: 132:     unsigned char u8Check, i, u8TimeOut;
[v _u8Check `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _u8TimeOut `uc ~T0 @X0 1 a ]
"133
[; ;newmain.c: 133:     TRISDbits.TRISD1 = 0;
[e = . . _TRISDbits 0 1 -> -> 0 `i `uc ]
"134
[; ;newmain.c: 134:     PORTDbits.RD1 = 0;
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
"135
[; ;newmain.c: 135:     _delay((unsigned long)((20)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"136
[; ;newmain.c: 136:     PORTDbits.RD1 = 1;
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
"138
[; ;newmain.c: 138:     u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"139
[; ;newmain.c: 139:     TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"140
[; ;newmain.c: 140:     while(TMR0_Get_Value() < 15)
[e $U 120  ]
[e :U 121 ]
"141
[; ;newmain.c: 141:     {
{
"142
[; ;newmain.c: 142:         if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 123  ]
"143
[; ;newmain.c: 143:         {
{
"144
[; ;newmain.c: 144:             u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"145
[; ;newmain.c: 145:             break;
[e $U 122  ]
"146
[; ;newmain.c: 146:         }
}
[e :U 123 ]
"147
[; ;newmain.c: 147:     }
}
[e :U 120 ]
"140
[; ;newmain.c: 140:     while(TMR0_Get_Value() < 15)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 15 `i 121  ]
[e :U 122 ]
"148
[; ;newmain.c: 148:     if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 124  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 124 ]
"150
[; ;newmain.c: 150:     TRISDbits.TRISD1 = 1;
[e = . . _TRISDbits 0 1 -> -> 1 `i `uc ]
"151
[; ;newmain.c: 151:     u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"152
[; ;newmain.c: 152:     TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"153
[; ;newmain.c: 153:     while(TMR0_Get_Value() < 70)
[e $U 125  ]
[e :U 126 ]
"154
[; ;newmain.c: 154:     {
{
"155
[; ;newmain.c: 155:         if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 128  ]
"156
[; ;newmain.c: 156:         {
{
"157
[; ;newmain.c: 157:             u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"158
[; ;newmain.c: 158:             break;
[e $U 127  ]
"159
[; ;newmain.c: 159:         }
}
[e :U 128 ]
"160
[; ;newmain.c: 160:     }
}
[e :U 125 ]
"153
[; ;newmain.c: 153:     while(TMR0_Get_Value() < 70)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 70 `i 126  ]
[e :U 127 ]
"161
[; ;newmain.c: 161:     if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 129  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 129 ]
"163
[; ;newmain.c: 163:     u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"164
[; ;newmain.c: 164:     TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"165
[; ;newmain.c: 165:     while(TMR0_Get_Value() < 115)
[e $U 130  ]
[e :U 131 ]
"166
[; ;newmain.c: 166:     {
{
"167
[; ;newmain.c: 167:         if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 133  ]
"168
[; ;newmain.c: 168:         {
{
"169
[; ;newmain.c: 169:             u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"170
[; ;newmain.c: 170:             break;
[e $U 132  ]
"171
[; ;newmain.c: 171:         }
}
[e :U 133 ]
"172
[; ;newmain.c: 172:     }
}
[e :U 130 ]
"165
[; ;newmain.c: 165:     while(TMR0_Get_Value() < 115)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 115 `i 131  ]
[e :U 132 ]
"174
[; ;newmain.c: 174:     if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 134  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 134 ]
"176
[; ;newmain.c: 176:     u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"177
[; ;newmain.c: 177:     TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"178
[; ;newmain.c: 178:     while(TMR0_Get_Value() < 115)
[e $U 135  ]
[e :U 136 ]
"179
[; ;newmain.c: 179:     {
{
"180
[; ;newmain.c: 180:         if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 138  ]
"181
[; ;newmain.c: 181:         {
{
"182
[; ;newmain.c: 182:             u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"183
[; ;newmain.c: 183:             break;
[e $U 137  ]
"184
[; ;newmain.c: 184:         }
}
[e :U 138 ]
"185
[; ;newmain.c: 185:     }
}
[e :U 135 ]
"178
[; ;newmain.c: 178:     while(TMR0_Get_Value() < 115)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 115 `i 136  ]
[e :U 137 ]
"186
[; ;newmain.c: 186:     if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 139  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 139 ]
"189
[; ;newmain.c: 189:     for(i=0;i<8;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 140  ]
[e $U 141  ]
[e :U 140 ]
"190
[; ;newmain.c: 190:     {
{
"191
[; ;newmain.c: 191:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"192
[; ;newmain.c: 192:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"193
[; ;newmain.c: 193:         while(TMR0_Get_Value() < 85)
[e $U 143  ]
[e :U 144 ]
"194
[; ;newmain.c: 194:         {
{
"195
[; ;newmain.c: 195:             if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 146  ]
"196
[; ;newmain.c: 196:             {
{
"197
[; ;newmain.c: 197:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"198
[; ;newmain.c: 198:                 break;
[e $U 145  ]
"199
[; ;newmain.c: 199:             }
}
[e :U 146 ]
"200
[; ;newmain.c: 200:         }
}
[e :U 143 ]
"193
[; ;newmain.c: 193:         while(TMR0_Get_Value() < 85)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 85 `i 144  ]
[e :U 145 ]
"201
[; ;newmain.c: 201:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 147  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 147 ]
"203
[; ;newmain.c: 203:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"204
[; ;newmain.c: 204:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"205
[; ;newmain.c: 205:         while(TMR0_Get_Value() < 110)
[e $U 148  ]
[e :U 149 ]
"206
[; ;newmain.c: 206:         {
{
"207
[; ;newmain.c: 207:             if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 151  ]
"208
[; ;newmain.c: 208:             {
{
"209
[; ;newmain.c: 209:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"210
[; ;newmain.c: 210:                 break;
[e $U 150  ]
"211
[; ;newmain.c: 211:             }
}
[e :U 151 ]
"212
[; ;newmain.c: 212:         }
}
[e :U 148 ]
"205
[; ;newmain.c: 205:         while(TMR0_Get_Value() < 110)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 110 `i 149  ]
[e :U 150 ]
"213
[; ;newmain.c: 213:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 152  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 152 ]
"215
[; ;newmain.c: 215:         u8Buff[0] <<= 1;
[e =<< *U + _u8Buff * -> -> 0 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"216
[; ;newmain.c: 216:         if(TMR0_Get_Value() > 60)
[e $ ! > -> ( _TMR0_Get_Value ..  `i -> 60 `i 153  ]
"217
[; ;newmain.c: 217:         {
{
"218
[; ;newmain.c: 218:             u8Buff[0] |= 0x01;
[e =| *U + _u8Buff * -> -> 0 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"219
[; ;newmain.c: 219:         }
}
[e :U 153 ]
"220
[; ;newmain.c: 220:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 140  ]
[e :U 141 ]
}
"223
[; ;newmain.c: 223:     for(i=0;i<8;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 154  ]
[e $U 155  ]
[e :U 154 ]
"224
[; ;newmain.c: 224:     {
{
"225
[; ;newmain.c: 225:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"226
[; ;newmain.c: 226:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"227
[; ;newmain.c: 227:         while(TMR0_Get_Value() < 85)
[e $U 157  ]
[e :U 158 ]
"228
[; ;newmain.c: 228:         {
{
"229
[; ;newmain.c: 229:             if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 160  ]
"230
[; ;newmain.c: 230:             {
{
"231
[; ;newmain.c: 231:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"232
[; ;newmain.c: 232:                 break;
[e $U 159  ]
"233
[; ;newmain.c: 233:             }
}
[e :U 160 ]
"234
[; ;newmain.c: 234:         }
}
[e :U 157 ]
"227
[; ;newmain.c: 227:         while(TMR0_Get_Value() < 85)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 85 `i 158  ]
[e :U 159 ]
"235
[; ;newmain.c: 235:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 161  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 161 ]
"237
[; ;newmain.c: 237:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"238
[; ;newmain.c: 238:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"239
[; ;newmain.c: 239:         while(TMR0_Get_Value() < 110)
[e $U 162  ]
[e :U 163 ]
"240
[; ;newmain.c: 240:         {
{
"241
[; ;newmain.c: 241:             if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 165  ]
"242
[; ;newmain.c: 242:             {
{
"243
[; ;newmain.c: 243:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"244
[; ;newmain.c: 244:                 break;
[e $U 164  ]
"245
[; ;newmain.c: 245:             }
}
[e :U 165 ]
"246
[; ;newmain.c: 246:         }
}
[e :U 162 ]
"239
[; ;newmain.c: 239:         while(TMR0_Get_Value() < 110)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 110 `i 163  ]
[e :U 164 ]
"247
[; ;newmain.c: 247:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 166  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 166 ]
"249
[; ;newmain.c: 249:         u8Buff[1] <<= 1;
[e =<< *U + _u8Buff * -> -> 1 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"250
[; ;newmain.c: 250:         if(TMR0_Get_Value() > 60)
[e $ ! > -> ( _TMR0_Get_Value ..  `i -> 60 `i 167  ]
"251
[; ;newmain.c: 251:         {
{
"252
[; ;newmain.c: 252:             u8Buff[1] |= 0x01;
[e =| *U + _u8Buff * -> -> 1 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"253
[; ;newmain.c: 253:         }
}
[e :U 167 ]
"254
[; ;newmain.c: 254:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 154  ]
[e :U 155 ]
}
"257
[; ;newmain.c: 257:     for(i=0;i<8;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 168  ]
[e $U 169  ]
[e :U 168 ]
"258
[; ;newmain.c: 258:     {
{
"259
[; ;newmain.c: 259:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"260
[; ;newmain.c: 260:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"261
[; ;newmain.c: 261:         while(TMR0_Get_Value() < 85)
[e $U 171  ]
[e :U 172 ]
"262
[; ;newmain.c: 262:         {
{
"263
[; ;newmain.c: 263:             if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 174  ]
"264
[; ;newmain.c: 264:             {
{
"265
[; ;newmain.c: 265:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"266
[; ;newmain.c: 266:                 break;
[e $U 173  ]
"267
[; ;newmain.c: 267:             }
}
[e :U 174 ]
"268
[; ;newmain.c: 268:         }
}
[e :U 171 ]
"261
[; ;newmain.c: 261:         while(TMR0_Get_Value() < 85)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 85 `i 172  ]
[e :U 173 ]
"269
[; ;newmain.c: 269:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 175  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 175 ]
"271
[; ;newmain.c: 271:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"272
[; ;newmain.c: 272:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"273
[; ;newmain.c: 273:         while(TMR0_Get_Value() < 110)
[e $U 176  ]
[e :U 177 ]
"274
[; ;newmain.c: 274:         {
{
"275
[; ;newmain.c: 275:             if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 179  ]
"276
[; ;newmain.c: 276:             {
{
"277
[; ;newmain.c: 277:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"278
[; ;newmain.c: 278:                 break;
[e $U 178  ]
"279
[; ;newmain.c: 279:             }
}
[e :U 179 ]
"280
[; ;newmain.c: 280:         }
}
[e :U 176 ]
"273
[; ;newmain.c: 273:         while(TMR0_Get_Value() < 110)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 110 `i 177  ]
[e :U 178 ]
"281
[; ;newmain.c: 281:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 180  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 180 ]
"283
[; ;newmain.c: 283:         u8Buff[2] <<= 1;
[e =<< *U + _u8Buff * -> -> 2 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"284
[; ;newmain.c: 284:         if(TMR0_Get_Value() > 60)
[e $ ! > -> ( _TMR0_Get_Value ..  `i -> 60 `i 181  ]
"285
[; ;newmain.c: 285:         {
{
"286
[; ;newmain.c: 286:             u8Buff[2] |= 0x01;
[e =| *U + _u8Buff * -> -> 2 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"287
[; ;newmain.c: 287:         }
}
[e :U 181 ]
"288
[; ;newmain.c: 288:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 168  ]
[e :U 169 ]
}
"291
[; ;newmain.c: 291:     for(i=0;i<8;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 182  ]
[e $U 183  ]
[e :U 182 ]
"292
[; ;newmain.c: 292:     {
{
"293
[; ;newmain.c: 293:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"294
[; ;newmain.c: 294:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"295
[; ;newmain.c: 295:         while(TMR0_Get_Value() < 85)
[e $U 185  ]
[e :U 186 ]
"296
[; ;newmain.c: 296:         {
{
"297
[; ;newmain.c: 297:             if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 188  ]
"298
[; ;newmain.c: 298:             {
{
"299
[; ;newmain.c: 299:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"300
[; ;newmain.c: 300:                 break;
[e $U 187  ]
"301
[; ;newmain.c: 301:             }
}
[e :U 188 ]
"302
[; ;newmain.c: 302:         }
}
[e :U 185 ]
"295
[; ;newmain.c: 295:         while(TMR0_Get_Value() < 85)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 85 `i 186  ]
[e :U 187 ]
"303
[; ;newmain.c: 303:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 189  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 189 ]
"305
[; ;newmain.c: 305:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"306
[; ;newmain.c: 306:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"307
[; ;newmain.c: 307:         while(TMR0_Get_Value() < 110)
[e $U 190  ]
[e :U 191 ]
"308
[; ;newmain.c: 308:         {
{
"309
[; ;newmain.c: 309:             if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 193  ]
"310
[; ;newmain.c: 310:             {
{
"311
[; ;newmain.c: 311:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"312
[; ;newmain.c: 312:                 break;
[e $U 192  ]
"313
[; ;newmain.c: 313:             }
}
[e :U 193 ]
"314
[; ;newmain.c: 314:         }
}
[e :U 190 ]
"307
[; ;newmain.c: 307:         while(TMR0_Get_Value() < 110)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 110 `i 191  ]
[e :U 192 ]
"315
[; ;newmain.c: 315:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 194  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 194 ]
"317
[; ;newmain.c: 317:         u8Buff[3] <<= 1;
[e =<< *U + _u8Buff * -> -> 3 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"318
[; ;newmain.c: 318:         if(TMR0_Get_Value() > 60)
[e $ ! > -> ( _TMR0_Get_Value ..  `i -> 60 `i 195  ]
"319
[; ;newmain.c: 319:         {
{
"320
[; ;newmain.c: 320:             u8Buff[3] |= 0x01;
[e =| *U + _u8Buff * -> -> 3 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"321
[; ;newmain.c: 321:         }
}
[e :U 195 ]
"322
[; ;newmain.c: 322:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 182  ]
[e :U 183 ]
}
"325
[; ;newmain.c: 325:     for(i=0;i<8;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 196  ]
[e $U 197  ]
[e :U 196 ]
"326
[; ;newmain.c: 326:     {
{
"327
[; ;newmain.c: 327:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"328
[; ;newmain.c: 328:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"329
[; ;newmain.c: 329:         while(TMR0_Get_Value() < 85)
[e $U 199  ]
[e :U 200 ]
"330
[; ;newmain.c: 330:         {
{
"331
[; ;newmain.c: 331:             if(PORTDbits.RD1)
[e $ ! != -> . . _PORTDbits 0 1 `i -> 0 `i 202  ]
"332
[; ;newmain.c: 332:             {
{
"333
[; ;newmain.c: 333:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"334
[; ;newmain.c: 334:                 break;
[e $U 201  ]
"335
[; ;newmain.c: 335:             }
}
[e :U 202 ]
"336
[; ;newmain.c: 336:         }
}
[e :U 199 ]
"329
[; ;newmain.c: 329:         while(TMR0_Get_Value() < 85)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 85 `i 200  ]
[e :U 201 ]
"337
[; ;newmain.c: 337:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 203  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 203 ]
"339
[; ;newmain.c: 339:         u8TimeOut = 1;
[e = _u8TimeOut -> -> 1 `i `uc ]
"340
[; ;newmain.c: 340:         TMR0_Set_Value(0);
[e ( _TMR0_Set_Value (1 -> -> 0 `i `uc ]
"341
[; ;newmain.c: 341:         while(TMR0_Get_Value() < 110)
[e $U 204  ]
[e :U 205 ]
"342
[; ;newmain.c: 342:         {
{
"343
[; ;newmain.c: 343:             if(!PORTDbits.RD1)
[e $ ! ! != -> . . _PORTDbits 0 1 `i -> 0 `i 207  ]
"344
[; ;newmain.c: 344:             {
{
"345
[; ;newmain.c: 345:                 u8TimeOut = 0;
[e = _u8TimeOut -> -> 0 `i `uc ]
"346
[; ;newmain.c: 346:                 break;
[e $U 206  ]
"347
[; ;newmain.c: 347:             }
}
[e :U 207 ]
"348
[; ;newmain.c: 348:         }
}
[e :U 204 ]
"341
[; ;newmain.c: 341:         while(TMR0_Get_Value() < 110)
[e $ < -> ( _TMR0_Get_Value ..  `i -> 110 `i 205  ]
[e :U 206 ]
"349
[; ;newmain.c: 349:         if(u8TimeOut) return 0;
[e $ ! != -> _u8TimeOut `i -> 0 `i 208  ]
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
[e :U 208 ]
"351
[; ;newmain.c: 351:         u8Buff[4] <<= 1;
[e =<< *U + _u8Buff * -> -> 4 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"352
[; ;newmain.c: 352:         if(TMR0_Get_Value() > 60)
[e $ ! > -> ( _TMR0_Get_Value ..  `i -> 60 `i 209  ]
"353
[; ;newmain.c: 353:         {
{
"354
[; ;newmain.c: 354:             u8Buff[4] |= 0x01;
[e =| *U + _u8Buff * -> -> 4 `i `x -> -> # *U _u8Buff `i `x -> -> 1 `i `uc ]
"355
[; ;newmain.c: 355:         }
}
[e :U 209 ]
"356
[; ;newmain.c: 356:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 196  ]
[e :U 197 ]
}
"359
[; ;newmain.c: 359:     u8Check = u8Buff[0] + u8Buff[1] + u8Buff[2] + u8Buff[3];
[e = _u8Check -> + + + -> *U + _u8Buff * -> -> 0 `i `x -> -> # *U _u8Buff `i `x `i -> *U + _u8Buff * -> -> 1 `i `x -> -> # *U _u8Buff `i `x `i -> *U + _u8Buff * -> -> 2 `i `x -> -> # *U _u8Buff `i `x `i -> *U + _u8Buff * -> -> 3 `i `x -> -> # *U _u8Buff `i `x `i `uc ]
"360
[; ;newmain.c: 360:     if(u8Check != u8Buff[4])
[e $ ! != -> _u8Check `i -> *U + _u8Buff * -> -> 4 `i `x -> -> # *U _u8Buff `i `x `i 210  ]
"361
[; ;newmain.c: 361:     {
{
"362
[; ;newmain.c: 362:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 119  ]
"363
[; ;newmain.c: 363:     }
}
[e :U 210 ]
"364
[; ;newmain.c: 364:     return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 119  ]
"365
[; ;newmain.c: 365: }
[e :UE 119 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"367
[; ;newmain.c: 367: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"368
[; ;newmain.c: 368: {
{
[e :U _main ]
[f ]
"369
[; ;newmain.c: 369:     unsigned char data[5];
[v _data `uc ~T0 @X0 -> 5 `i a ]
"370
[; ;newmain.c: 370:     char text[40];
[v _text `uc ~T0 @X0 -> 40 `i a ]
"371
[; ;newmain.c: 371:     IO_Init();
[e ( _IO_Init ..  ]
"372
[; ;newmain.c: 372:     UART_Init();
[e ( _UART_Init ..  ]
"373
[; ;newmain.c: 373:     DHT11_Init();
[e ( _DHT11_Init ..  ]
"375
[; ;newmain.c: 375:     while(1)
[e :U 213 ]
"376
[; ;newmain.c: 376:     {
{
"377
[; ;newmain.c: 377:         if(ReadDHT11(data) == 1)
[e $ ! == -> ( _ReadDHT11 (1 &U _data `i -> 1 `i 215  ]
"378
[; ;newmain.c: 378:         {
{
"379
[; ;newmain.c: 379:             sprintf(text, "Temperature: %d, Humidity: %d\n", data[2], data[0]);
[e ( _sprintf (1 , , (. , &U _text :s 1C -> *U + &U _data * -> -> -> 2 `i `ui `ux -> -> # *U &U _data `ui `ux `i -> *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux `i ]
"380
[; ;newmain.c: 380:             UART_Transmit_Text(text);
[e ( _UART_Transmit_Text (1 &U _text ]
"381
[; ;newmain.c: 381:         }
}
[e $U 216  ]
"382
[; ;newmain.c: 382:         else
[e :U 215 ]
"383
[; ;newmain.c: 383:         {
{
"384
[; ;newmain.c: 384:             UART_Transmit_Text("Error\n");
[e ( _UART_Transmit_Text (1 :s 2C ]
"385
[; ;newmain.c: 385:         }
}
[e :U 216 ]
"386
[; ;newmain.c: 386:         _delay((unsigned long)((500)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"387
[; ;newmain.c: 387:     }
}
[e :U 212 ]
[e $U 213  ]
[e :U 214 ]
"388
[; ;newmain.c: 388:     return;
[e $UE 211  ]
"389
[; ;newmain.c: 389: }
[e :UE 211 ]
}
[v $root$_RX `(v ~T0 @X0 0 e ]
"391
[; ;newmain.c: 391: void __attribute__((picinterrupt(("")))) RX()
[v _RX `(v ~T1 @X0 1 ef ]
"392
[; ;newmain.c: 392: {
{
[e :U _RX ]
[f ]
"393
[; ;newmain.c: 393:     if(RCIE)
[e $ ! _RCIE 218  ]
"394
[; ;newmain.c: 394:     {
{
"395
[; ;newmain.c: 395:         if(RCIF)
[e $ ! _RCIF 219  ]
"396
[; ;newmain.c: 396:         {
{
"397
[; ;newmain.c: 397:             char ReceivedData;
[v _ReceivedData `uc ~T0 @X0 1 a ]
"398
[; ;newmain.c: 398:             ReceivedData = RCREG;
[e = _ReceivedData -> _RCREG `uc ]
"399
[; ;newmain.c: 399:             if(ReceivedData != '\n')
[e $ ! != -> _ReceivedData `ui -> 10 `ui 220  ]
"400
[; ;newmain.c: 400:             {
{
"401
[; ;newmain.c: 401:                 RX_Buffer[rx_index++] = RCREG;
[e = *U + &U _RX_Buffer * -> ++ _rx_index -> -> 1 `i `uc `ux -> -> # *U &U _RX_Buffer `ui `ux -> _RCREG `uc ]
"402
[; ;newmain.c: 402:             }
}
[e $U 221  ]
"403
[; ;newmain.c: 403:             else
[e :U 220 ]
"404
[; ;newmain.c: 404:             {
{
"405
[; ;newmain.c: 405:                 HandleData(RX_Buffer);
[e ( _HandleData (1 &U _RX_Buffer ]
"406
[; ;newmain.c: 406:                 ClearRX_Buffer();
[e ( _ClearRX_Buffer ..  ]
"407
[; ;newmain.c: 407:             }
}
[e :U 221 ]
"408
[; ;newmain.c: 408:         }
}
[e :U 219 ]
"409
[; ;newmain.c: 409:     }
}
[e :U 218 ]
"410
[; ;newmain.c: 410: }
[e :UE 217 ]
}
[p f _sprintf 8388736 ]
[a 2C 69 114 114 111 114 10 0 ]
[a 1C 84 101 109 112 101 114 97 116 117 114 101 58 32 37 100 44 32 72 117 109 105 100 105 116 121 58 32 37 100 10 0 ]

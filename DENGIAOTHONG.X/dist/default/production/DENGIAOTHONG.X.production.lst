

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 21 16:30:15 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.32
    17                           ; Generated 02/02/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173  05C5                     __pidataBANK0:
   174                           
   175                           ;initializer for _Number
   176  05C5  343F               	retlw	63
   177  05C6  3406               	retlw	6
   178  05C7  345B               	retlw	91
   179  05C8  344F               	retlw	79
   180  05C9  3466               	retlw	102
   181  05CA  346D               	retlw	109
   182  05CB  347D               	retlw	125
   183  05CC  3407               	retlw	7
   184  05CD  34FF               	retlw	255
   185  05CE  346F               	retlw	111
   186  0006                     _PORTB	set	6
   187  0007                     _PORTCbits	set	7
   188  0007                     _PORTC	set	7
   189  0086                     _TRISB	set	134
   190  0087                     _TRISC	set	135
   191                           
   192                           	psect	cinit
   193  07EE                     start_initialization:	
   194                           ; #config settings
   195                           
   196  07EE                     __initialization:
   197                           
   198                           ; Initialize objects allocated to BANK0
   199  07EE  1383               	bcf	3,7	;select IRP bank0
   200  07EF  302A               	movlw	low (__pdataBANK0+10)
   201  07F0  00FD               	movwf	btemp+-1
   202  07F1  3005               	movlw	high __pidataBANK0
   203  07F2  00FE               	movwf	btemp
   204  07F3  30C5               	movlw	low __pidataBANK0
   205  07F4  00FF               	movwf	btemp+1
   206  07F5  3020               	movlw	low __pdataBANK0
   207  07F6  0084               	movwf	4
   208  07F7  120A  118A  25D3  120A  118A  	fcall	init_ram0
   209  07FC                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212  07FC                     __end_of__initialization:
   213  07FC  0183               	clrf	3
   214  07FD  120A  118A  2EA2   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	dataBANK0
   217  0020                     __pdataBANK0:
   218  0020                     _Number:
   219  0020                     	ds	10
   220                           
   221                           	psect	inittext
   222  05CF                     init_fetch0:	
   223                           ;	Called with low address in FSR and high address in W
   224                           
   225  05CF  087E               	movf	btemp,w
   226  05D0  008A               	movwf	10
   227  05D1  087F               	movf	btemp+1,w
   228  05D2  0082               	movwf	2
   229  05D3                     init_ram0:	
   230                           ;Called with:
   231                           ;	high address of idata address in btemp 
   232                           ;	low address of idata address in btemp+1 
   233                           ;	low address of data in FSR
   234                           ;	high address + 1 of data in btemp-1
   235                           
   236  05D3  120A  118A  25CF  120A  118A  	fcall	init_fetch0
   237  05D8  0080               	movwf	0
   238  05D9  0A84               	incf	4,f
   239  05DA  0804               	movf	4,w
   240  05DB  067D               	xorwf	btemp+-1,w
   241  05DC  1903               	btfsc	3,2
   242  05DD  3400               	retlw	0
   243  05DE  0AFF               	incf	btemp+1,f
   244  05DF  1903               	btfsc	3,2
   245  05E0  0AFE               	incf	btemp,f
   246  05E1  2DD3               	goto	init_ram0
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:
   250  0070                     ?_main:
   251  0070                     ?___awdiv:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?___awmod:	
   255                           ; 2 bytes @ 0x0
   256                           
   257  0070                     ___awdiv@divisor:	
   258                           ; 2 bytes @ 0x0
   259                           
   260  0070                     ___awmod@divisor:	
   261                           ; 2 bytes @ 0x0
   262                           
   263                           
   264                           ; 2 bytes @ 0x0
   265  0070                     	ds	2
   266  0072                     ___awdiv@dividend:
   267  0072                     ___awmod@dividend:	
   268                           ; 2 bytes @ 0x2
   269                           
   270                           
   271                           ; 2 bytes @ 0x2
   272  0072                     	ds	2
   273  0074                     ??___awdiv:
   274  0074                     ??___awmod:	
   275                           ; 1 bytes @ 0x4
   276                           
   277                           
   278                           ; 1 bytes @ 0x4
   279  0074                     	ds	1
   280  0075                     ___awdiv@counter:
   281  0075                     ___awmod@counter:	
   282                           ; 1 bytes @ 0x5
   283                           
   284                           
   285                           ; 1 bytes @ 0x5
   286  0075                     	ds	1
   287  0076                     ___awdiv@sign:
   288  0076                     ___awmod@sign:	
   289                           ; 1 bytes @ 0x6
   290                           
   291                           
   292                           ; 1 bytes @ 0x6
   293  0076                     	ds	1
   294  0077                     ___awdiv@quotient:
   295                           
   296                           ; 2 bytes @ 0x7
   297  0077                     	ds	2
   298  0079                     ??_main:
   299                           
   300                           ; 1 bytes @ 0x9
   301  0079                     	ds	2
   302                           
   303                           	psect	cstackBANK0
   304  002A                     __pcstackBANK0:
   305  002A                     main@LED_CHUC:
   306                           
   307                           ; 1 bytes @ 0x0
   308  002A                     	ds	1
   309  002B                     main@LED_DVI:
   310                           
   311                           ; 1 bytes @ 0x1
   312  002B                     	ds	1
   313  002C                     main@i:
   314                           
   315                           ; 2 bytes @ 0x2
   316  002C                     	ds	2
   317  002E                     main@dem:
   318                           
   319                           ; 1 bytes @ 0x4
   320  002E                     	ds	1
   321                           
   322                           	psect	maintext
   323  06A2                     __pmaintext:	
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 28 in file "newmain.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  i               2    2[BANK0 ] unsigned int 
   334 ;;  dem             1    4[BANK0 ] char 
   335 ;;  LED_DVI         1    1[BANK0 ] unsigned char 
   336 ;;  LED_CHUC        1    0[BANK0 ] unsigned char 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         0       5       0       0       0
   348 ;;      Temps:          2       0       0       0       0
   349 ;;      Totals:         2       5       0       0       0
   350 ;;Total ram usage:        7 bytes
   351 ;; Hardware stack levels required when called: 1
   352 ;; This function calls:
   353 ;;		___awdiv
   354 ;;		___awmod
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           
   361                           ;psect for function _main
   362  06A2                     _main:
   363  06A2                     l890:	
   364                           ;incstack = 0
   365                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   366                           
   367                           
   368                           ;newmain.c: 30:     signed char dem;;newmain.c: 31:     unsigned char LED_CHUC, LED_DVI;
      +                          ;newmain.c: 32:     unsigned int i;;newmain.c: 33:     TRISC = 0;
   369  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   370  06A3  1303               	bcf	3,6	;RP1=0, select bank1
   371  06A4  0187               	clrf	7	;volatile
   372                           
   373                           ;newmain.c: 34:     TRISB = 0;
   374  06A5  0186               	clrf	6	;volatile
   375                           
   376                           ;newmain.c: 35:     PORTC = 0;
   377  06A6  1283               	bcf	3,5	;RP0=0, select bank0
   378  06A7  1303               	bcf	3,6	;RP1=0, select bank0
   379  06A8  0187               	clrf	7	;volatile
   380  06A9                     l892:
   381                           
   382                           ;newmain.c: 37:     {;newmain.c: 38:         PORTCbits.RC0 = 1;
   383  06A9  1407               	bsf	7,0	;volatile
   384  06AA                     l894:
   385                           
   386                           ;newmain.c: 39:         for(dem = 25; dem >= 0; dem--)
   387  06AA  3019               	movlw	25
   388  06AB  00F9               	movwf	??_main
   389  06AC  0879               	movf	??_main,w
   390  06AD  00AE               	movwf	main@dem
   391  06AE                     l900:
   392                           
   393                           ;newmain.c: 40:   {;newmain.c: 41:    LED_CHUC = dem/10;
   394  06AE  300A               	movlw	10
   395  06AF  00F0               	movwf	___awdiv@divisor
   396  06B0  3000               	movlw	0
   397  06B1  00F1               	movwf	___awdiv@divisor+1
   398  06B2  082E               	movf	main@dem,w
   399  06B3  00F2               	movwf	___awdiv@dividend
   400  06B4  01F3               	clrf	___awdiv@dividend+1
   401  06B5  1BF2               	btfsc	___awdiv@dividend,7
   402  06B6  03F3               	decf	___awdiv@dividend+1,f
   403  06B7  120A  118A  263B  120A  118A  	fcall	___awdiv
   404  06BC  0870               	movf	?___awdiv,w
   405  06BD  00F9               	movwf	??_main
   406  06BE  0879               	movf	??_main,w
   407  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   408  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   409  06C1  00AA               	movwf	main@LED_CHUC
   410                           
   411                           ;newmain.c: 42:    LED_DVI = dem%10;
   412  06C2  300A               	movlw	10
   413  06C3  00F0               	movwf	___awmod@divisor
   414  06C4  3000               	movlw	0
   415  06C5  00F1               	movwf	___awmod@divisor+1
   416  06C6  082E               	movf	main@dem,w
   417  06C7  00F2               	movwf	___awmod@dividend
   418  06C8  01F3               	clrf	___awmod@dividend+1
   419  06C9  1BF2               	btfsc	___awmod@dividend,7
   420  06CA  03F3               	decf	___awmod@dividend+1,f
   421  06CB  120A  118A  25E2  120A  118A  	fcall	___awmod
   422  06D0  0870               	movf	?___awmod,w
   423  06D1  00F9               	movwf	??_main
   424  06D2  0879               	movf	??_main,w
   425  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   426  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   427  06D5  00AB               	movwf	main@LED_DVI
   428  06D6                     l902:
   429                           
   430                           ;newmain.c: 43:    for(i = 0; i < 500; i++)
   431  06D6  01AC               	clrf	main@i
   432  06D7  01AD               	clrf	main@i+1
   433  06D8                     l908:
   434                           
   435                           ;newmain.c: 44:    {;newmain.c: 46:     PORTB = Number[LED_CHUC];
   436  06D8  082A               	movf	main@LED_CHUC,w
   437  06D9  3E20               	addlw	(low (_Number| 0))& (0+255)
   438  06DA  0084               	movwf	4
   439  06DB  1383               	bcf	3,7	;select IRP bank0
   440  06DC  0800               	movf	0,w
   441  06DD  0086               	movwf	6	;volatile
   442  06DE                     l910:
   443                           
   444                           ;newmain.c: 47:     PORTCbits.RC3 = 1;
   445  06DE  1587               	bsf	7,3	;volatile
   446  06DF                     l912:
   447                           
   448                           ;newmain.c: 48:     _delay((unsigned long)((1)*(20000000/4000.0)));
   449  06DF  3007               	movlw	7
   450  06E0  00FA               	movwf	??_main+1
   451  06E1  307D               	movlw	125
   452  06E2  00F9               	movwf	??_main
   453  06E3                     u517:
   454  06E3  0BF9               	decfsz	??_main,f
   455  06E4  2EE3               	goto	u517
   456  06E5  0BFA               	decfsz	??_main+1,f
   457  06E6  2EE3               	goto	u517
   458  06E7                     l914:
   459                           
   460                           ;newmain.c: 49:     PORTCbits.RC3 = 0;
   461  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   462  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   463  06E9  1187               	bcf	7,3	;volatile
   464  06EA                     l916:
   465                           
   466                           ;newmain.c: 52:     PORTB = Number[LED_DVI];
   467  06EA  082B               	movf	main@LED_DVI,w
   468  06EB  3E20               	addlw	(low (_Number| 0))& (0+255)
   469  06EC  0084               	movwf	4
   470  06ED  1383               	bcf	3,7	;select IRP bank0
   471  06EE  0800               	movf	0,w
   472  06EF  0086               	movwf	6	;volatile
   473  06F0                     l918:
   474                           
   475                           ;newmain.c: 53:     PORTCbits.RC4 = 1;
   476  06F0  1607               	bsf	7,4	;volatile
   477                           
   478                           ;newmain.c: 54:     _delay((unsigned long)((1)*(20000000/4000.0)));
   479  06F1  3007               	movlw	7
   480  06F2  00FA               	movwf	??_main+1
   481  06F3  307D               	movlw	125
   482  06F4  00F9               	movwf	??_main
   483  06F5                     u527:
   484  06F5  0BF9               	decfsz	??_main,f
   485  06F6  2EF5               	goto	u527
   486  06F7  0BFA               	decfsz	??_main+1,f
   487  06F8  2EF5               	goto	u527
   488  06F9                     l920:
   489                           
   490                           ;newmain.c: 55:     PORTCbits.RC4 = 0;
   491  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   492  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   493  06FB  1207               	bcf	7,4	;volatile
   494                           
   495                           ;newmain.c: 56:    }
   496  06FC  3001               	movlw	1
   497  06FD  07AC               	addwf	main@i,f
   498  06FE  1803               	skipnc
   499  06FF  0AAD               	incf	main@i+1,f
   500  0700  3000               	movlw	0
   501  0701  07AD               	addwf	main@i+1,f
   502  0702  3001               	movlw	1
   503  0703  022D               	subwf	main@i+1,w
   504  0704  30F4               	movlw	244
   505  0705  1903               	skipnz
   506  0706  022C               	subwf	main@i,w
   507  0707  1C03               	skipc
   508  0708  2F0A               	goto	u451
   509  0709  2F0B               	goto	u450
   510  070A                     u451:
   511  070A  2ED8               	goto	l908
   512  070B                     u450:
   513  070B                     l922:
   514                           
   515                           ;newmain.c: 57:   }
   516  070B  30FF               	movlw	255
   517  070C  00F9               	movwf	??_main
   518  070D  0879               	movf	??_main,w
   519  070E  07AE               	addwf	main@dem,f
   520  070F                     l924:
   521  070F  1FAE               	btfss	main@dem,7
   522  0710  2F12               	goto	u461
   523  0711  2F13               	goto	u460
   524  0712                     u461:
   525  0712  2EAE               	goto	l900
   526  0713                     u460:
   527  0713                     l21:
   528                           
   529                           ;newmain.c: 58:         PORTCbits.RC0 = 0;
   530  0713  1007               	bcf	7,0	;volatile
   531                           
   532                           ;newmain.c: 60:         PORTCbits.RC1 = 1;
   533  0714  1487               	bsf	7,1	;volatile
   534  0715                     l926:
   535                           
   536                           ;newmain.c: 61:         for(dem = 5; dem >= 0; dem--)
   537  0715  3005               	movlw	5
   538  0716  00F9               	movwf	??_main
   539  0717  0879               	movf	??_main,w
   540  0718  00AE               	movwf	main@dem
   541  0719                     l932:
   542                           
   543                           ;newmain.c: 62:   {;newmain.c: 63:    LED_CHUC = dem/10;
   544  0719  300A               	movlw	10
   545  071A  00F0               	movwf	___awdiv@divisor
   546  071B  3000               	movlw	0
   547  071C  00F1               	movwf	___awdiv@divisor+1
   548  071D  082E               	movf	main@dem,w
   549  071E  00F2               	movwf	___awdiv@dividend
   550  071F  01F3               	clrf	___awdiv@dividend+1
   551  0720  1BF2               	btfsc	___awdiv@dividend,7
   552  0721  03F3               	decf	___awdiv@dividend+1,f
   553  0722  120A  118A  263B  120A  118A  	fcall	___awdiv
   554  0727  0870               	movf	?___awdiv,w
   555  0728  00F9               	movwf	??_main
   556  0729  0879               	movf	??_main,w
   557  072A  1283               	bcf	3,5	;RP0=0, select bank0
   558  072B  1303               	bcf	3,6	;RP1=0, select bank0
   559  072C  00AA               	movwf	main@LED_CHUC
   560                           
   561                           ;newmain.c: 64:    LED_DVI = dem%10;
   562  072D  300A               	movlw	10
   563  072E  00F0               	movwf	___awmod@divisor
   564  072F  3000               	movlw	0
   565  0730  00F1               	movwf	___awmod@divisor+1
   566  0731  082E               	movf	main@dem,w
   567  0732  00F2               	movwf	___awmod@dividend
   568  0733  01F3               	clrf	___awmod@dividend+1
   569  0734  1BF2               	btfsc	___awmod@dividend,7
   570  0735  03F3               	decf	___awmod@dividend+1,f
   571  0736  120A  118A  25E2  120A  118A  	fcall	___awmod
   572  073B  0870               	movf	?___awmod,w
   573  073C  00F9               	movwf	??_main
   574  073D  0879               	movf	??_main,w
   575  073E  1283               	bcf	3,5	;RP0=0, select bank0
   576  073F  1303               	bcf	3,6	;RP1=0, select bank0
   577  0740  00AB               	movwf	main@LED_DVI
   578  0741                     l934:
   579                           
   580                           ;newmain.c: 65:    for(i = 0; i < 500; i++)
   581  0741  01AC               	clrf	main@i
   582  0742  01AD               	clrf	main@i+1
   583  0743                     l940:
   584                           
   585                           ;newmain.c: 66:    {;newmain.c: 68:     PORTB = Number[LED_CHUC];
   586  0743  082A               	movf	main@LED_CHUC,w
   587  0744  3E20               	addlw	(low (_Number| 0))& (0+255)
   588  0745  0084               	movwf	4
   589  0746  1383               	bcf	3,7	;select IRP bank0
   590  0747  0800               	movf	0,w
   591  0748  0086               	movwf	6	;volatile
   592  0749                     l942:
   593                           
   594                           ;newmain.c: 69:     PORTCbits.RC3 = 1;
   595  0749  1587               	bsf	7,3	;volatile
   596  074A                     l944:
   597                           
   598                           ;newmain.c: 70:     _delay((unsigned long)((1)*(20000000/4000.0)));
   599  074A  3007               	movlw	7
   600  074B  00FA               	movwf	??_main+1
   601  074C  307D               	movlw	125
   602  074D  00F9               	movwf	??_main
   603  074E                     u537:
   604  074E  0BF9               	decfsz	??_main,f
   605  074F  2F4E               	goto	u537
   606  0750  0BFA               	decfsz	??_main+1,f
   607  0751  2F4E               	goto	u537
   608  0752                     l946:
   609                           
   610                           ;newmain.c: 71:     PORTCbits.RC3 = 0;
   611  0752  1283               	bcf	3,5	;RP0=0, select bank0
   612  0753  1303               	bcf	3,6	;RP1=0, select bank0
   613  0754  1187               	bcf	7,3	;volatile
   614  0755                     l948:
   615                           
   616                           ;newmain.c: 74:     PORTB = Number[LED_DVI];
   617  0755  082B               	movf	main@LED_DVI,w
   618  0756  3E20               	addlw	(low (_Number| 0))& (0+255)
   619  0757  0084               	movwf	4
   620  0758  1383               	bcf	3,7	;select IRP bank0
   621  0759  0800               	movf	0,w
   622  075A  0086               	movwf	6	;volatile
   623  075B                     l950:
   624                           
   625                           ;newmain.c: 75:     PORTCbits.RC4 = 1;
   626  075B  1607               	bsf	7,4	;volatile
   627                           
   628                           ;newmain.c: 76:     _delay((unsigned long)((1)*(20000000/4000.0)));
   629  075C  3007               	movlw	7
   630  075D  00FA               	movwf	??_main+1
   631  075E  307D               	movlw	125
   632  075F  00F9               	movwf	??_main
   633  0760                     u547:
   634  0760  0BF9               	decfsz	??_main,f
   635  0761  2F60               	goto	u547
   636  0762  0BFA               	decfsz	??_main+1,f
   637  0763  2F60               	goto	u547
   638  0764                     l952:
   639                           
   640                           ;newmain.c: 77:     PORTCbits.RC4 = 0;
   641  0764  1283               	bcf	3,5	;RP0=0, select bank0
   642  0765  1303               	bcf	3,6	;RP1=0, select bank0
   643  0766  1207               	bcf	7,4	;volatile
   644                           
   645                           ;newmain.c: 78:    }
   646  0767  3001               	movlw	1
   647  0768  07AC               	addwf	main@i,f
   648  0769  1803               	skipnc
   649  076A  0AAD               	incf	main@i+1,f
   650  076B  3000               	movlw	0
   651  076C  07AD               	addwf	main@i+1,f
   652  076D  3001               	movlw	1
   653  076E  022D               	subwf	main@i+1,w
   654  076F  30F4               	movlw	244
   655  0770  1903               	skipnz
   656  0771  022C               	subwf	main@i,w
   657  0772  1C03               	skipc
   658  0773  2F75               	goto	u471
   659  0774  2F76               	goto	u470
   660  0775                     u471:
   661  0775  2F43               	goto	l940
   662  0776                     u470:
   663  0776                     l954:
   664                           
   665                           ;newmain.c: 79:   }
   666  0776  30FF               	movlw	255
   667  0777  00F9               	movwf	??_main
   668  0778  0879               	movf	??_main,w
   669  0779  07AE               	addwf	main@dem,f
   670  077A                     l956:
   671  077A  1FAE               	btfss	main@dem,7
   672  077B  2F7D               	goto	u481
   673  077C  2F7E               	goto	u480
   674  077D                     u481:
   675  077D  2F19               	goto	l932
   676  077E                     u480:
   677  077E                     l25:
   678                           
   679                           ;newmain.c: 80:         PORTCbits.RC1 = 0;
   680  077E  1087               	bcf	7,1	;volatile
   681                           
   682                           ;newmain.c: 82:         PORTCbits.RC2 = 1;
   683  077F  1507               	bsf	7,2	;volatile
   684  0780                     l958:
   685                           
   686                           ;newmain.c: 83:         for(dem = 20; dem >= 0; dem--)
   687  0780  3014               	movlw	20
   688  0781  00F9               	movwf	??_main
   689  0782  0879               	movf	??_main,w
   690  0783  00AE               	movwf	main@dem
   691  0784                     l964:
   692                           
   693                           ;newmain.c: 84:   {;newmain.c: 85:    LED_CHUC = dem/10;
   694  0784  300A               	movlw	10
   695  0785  00F0               	movwf	___awdiv@divisor
   696  0786  3000               	movlw	0
   697  0787  00F1               	movwf	___awdiv@divisor+1
   698  0788  082E               	movf	main@dem,w
   699  0789  00F2               	movwf	___awdiv@dividend
   700  078A  01F3               	clrf	___awdiv@dividend+1
   701  078B  1BF2               	btfsc	___awdiv@dividend,7
   702  078C  03F3               	decf	___awdiv@dividend+1,f
   703  078D  120A  118A  263B  120A  118A  	fcall	___awdiv
   704  0792  0870               	movf	?___awdiv,w
   705  0793  00F9               	movwf	??_main
   706  0794  0879               	movf	??_main,w
   707  0795  1283               	bcf	3,5	;RP0=0, select bank0
   708  0796  1303               	bcf	3,6	;RP1=0, select bank0
   709  0797  00AA               	movwf	main@LED_CHUC
   710                           
   711                           ;newmain.c: 86:    LED_DVI = dem%10;
   712  0798  300A               	movlw	10
   713  0799  00F0               	movwf	___awmod@divisor
   714  079A  3000               	movlw	0
   715  079B  00F1               	movwf	___awmod@divisor+1
   716  079C  082E               	movf	main@dem,w
   717  079D  00F2               	movwf	___awmod@dividend
   718  079E  01F3               	clrf	___awmod@dividend+1
   719  079F  1BF2               	btfsc	___awmod@dividend,7
   720  07A0  03F3               	decf	___awmod@dividend+1,f
   721  07A1  120A  118A  25E2  120A  118A  	fcall	___awmod
   722  07A6  0870               	movf	?___awmod,w
   723  07A7  00F9               	movwf	??_main
   724  07A8  0879               	movf	??_main,w
   725  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   726  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   727  07AB  00AB               	movwf	main@LED_DVI
   728  07AC                     l966:
   729                           
   730                           ;newmain.c: 87:    for(i = 0; i < 500; i++)
   731  07AC  01AC               	clrf	main@i
   732  07AD  01AD               	clrf	main@i+1
   733  07AE                     l972:
   734                           
   735                           ;newmain.c: 88:    {;newmain.c: 90:     PORTB = Number[LED_CHUC];
   736  07AE  082A               	movf	main@LED_CHUC,w
   737  07AF  3E20               	addlw	(low (_Number| 0))& (0+255)
   738  07B0  0084               	movwf	4
   739  07B1  1383               	bcf	3,7	;select IRP bank0
   740  07B2  0800               	movf	0,w
   741  07B3  0086               	movwf	6	;volatile
   742  07B4                     l974:
   743                           
   744                           ;newmain.c: 91:     PORTCbits.RC3 = 1;
   745  07B4  1587               	bsf	7,3	;volatile
   746  07B5                     l976:
   747                           
   748                           ;newmain.c: 92:     _delay((unsigned long)((1)*(20000000/4000.0)));
   749  07B5  3007               	movlw	7
   750  07B6  00FA               	movwf	??_main+1
   751  07B7  307D               	movlw	125
   752  07B8  00F9               	movwf	??_main
   753  07B9                     u557:
   754  07B9  0BF9               	decfsz	??_main,f
   755  07BA  2FB9               	goto	u557
   756  07BB  0BFA               	decfsz	??_main+1,f
   757  07BC  2FB9               	goto	u557
   758  07BD                     l978:
   759                           
   760                           ;newmain.c: 93:     PORTCbits.RC3 = 0;
   761  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   762  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   763  07BF  1187               	bcf	7,3	;volatile
   764  07C0                     l980:
   765                           
   766                           ;newmain.c: 96:     PORTB = Number[LED_DVI];
   767  07C0  082B               	movf	main@LED_DVI,w
   768  07C1  3E20               	addlw	(low (_Number| 0))& (0+255)
   769  07C2  0084               	movwf	4
   770  07C3  1383               	bcf	3,7	;select IRP bank0
   771  07C4  0800               	movf	0,w
   772  07C5  0086               	movwf	6	;volatile
   773  07C6                     l982:
   774                           
   775                           ;newmain.c: 97:     PORTCbits.RC4 = 1;
   776  07C6  1607               	bsf	7,4	;volatile
   777                           
   778                           ;newmain.c: 98:     _delay((unsigned long)((1)*(20000000/4000.0)));
   779  07C7  3007               	movlw	7
   780  07C8  00FA               	movwf	??_main+1
   781  07C9  307D               	movlw	125
   782  07CA  00F9               	movwf	??_main
   783  07CB                     u567:
   784  07CB  0BF9               	decfsz	??_main,f
   785  07CC  2FCB               	goto	u567
   786  07CD  0BFA               	decfsz	??_main+1,f
   787  07CE  2FCB               	goto	u567
   788  07CF                     l984:
   789                           
   790                           ;newmain.c: 99:     PORTCbits.RC4 = 0;
   791  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   792  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   793  07D1  1207               	bcf	7,4	;volatile
   794                           
   795                           ;newmain.c: 100:    }
   796  07D2  3001               	movlw	1
   797  07D3  07AC               	addwf	main@i,f
   798  07D4  1803               	skipnc
   799  07D5  0AAD               	incf	main@i+1,f
   800  07D6  3000               	movlw	0
   801  07D7  07AD               	addwf	main@i+1,f
   802  07D8  3001               	movlw	1
   803  07D9  022D               	subwf	main@i+1,w
   804  07DA  30F4               	movlw	244
   805  07DB  1903               	skipnz
   806  07DC  022C               	subwf	main@i,w
   807  07DD  1C03               	skipc
   808  07DE  2FE0               	goto	u491
   809  07DF  2FE1               	goto	u490
   810  07E0                     u491:
   811  07E0  2FAE               	goto	l972
   812  07E1                     u490:
   813  07E1                     l986:
   814                           
   815                           ;newmain.c: 101:   }
   816  07E1  30FF               	movlw	255
   817  07E2  00F9               	movwf	??_main
   818  07E3  0879               	movf	??_main,w
   819  07E4  07AE               	addwf	main@dem,f
   820  07E5                     l988:
   821  07E5  1FAE               	btfss	main@dem,7
   822  07E6  2FE8               	goto	u501
   823  07E7  2FE9               	goto	u500
   824  07E8                     u501:
   825  07E8  2F84               	goto	l964
   826  07E9                     u500:
   827  07E9                     l29:
   828                           
   829                           ;newmain.c: 102:         PORTCbits.RC2 = 0;
   830  07E9  1107               	bcf	7,2	;volatile
   831  07EA  2EA9               	goto	l892
   832  07EB  120A  118A  2800   	ljmp	start
   833  07EE                     __end_of_main:
   834                           
   835                           	psect	text1
   836  05E2                     __ptext1:	
   837 ;; *************** function ___awmod *****************
   838 ;; Defined at:
   839 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awmod.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  divisor         2    0[COMMON] int 
   842 ;;  dividend        2    2[COMMON] int 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  sign            1    6[COMMON] unsigned char 
   845 ;;  counter         1    5[COMMON] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2    0[COMMON] int 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         4       0       0       0       0
   856 ;;      Locals:         2       0       0       0       0
   857 ;;      Temps:          1       0       0       0       0
   858 ;;      Totals:         7       0       0       0       0
   859 ;;Total ram usage:        7 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function ___awmod
   870  05E2                     ___awmod:
   871  05E2                     l852:	
   872                           ;incstack = 0
   873                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   874                           
   875  05E2  01F6               	clrf	___awmod@sign
   876  05E3                     l854:
   877  05E3  1FF3               	btfss	___awmod@dividend+1,7
   878  05E4  2DE6               	goto	u361
   879  05E5  2DE7               	goto	u360
   880  05E6                     u361:
   881  05E6  2DEE               	goto	l860
   882  05E7                     u360:
   883  05E7                     l856:
   884  05E7  09F2               	comf	___awmod@dividend,f
   885  05E8  09F3               	comf	___awmod@dividend+1,f
   886  05E9  0AF2               	incf	___awmod@dividend,f
   887  05EA  1903               	skipnz
   888  05EB  0AF3               	incf	___awmod@dividend+1,f
   889  05EC                     l858:
   890  05EC  01F6               	clrf	___awmod@sign
   891  05ED  0AF6               	incf	___awmod@sign,f
   892  05EE                     l860:
   893  05EE  1FF1               	btfss	___awmod@divisor+1,7
   894  05EF  2DF1               	goto	u371
   895  05F0  2DF2               	goto	u370
   896  05F1                     u371:
   897  05F1  2DF7               	goto	l864
   898  05F2                     u370:
   899  05F2                     l862:
   900  05F2  09F0               	comf	___awmod@divisor,f
   901  05F3  09F1               	comf	___awmod@divisor+1,f
   902  05F4  0AF0               	incf	___awmod@divisor,f
   903  05F5  1903               	skipnz
   904  05F6  0AF1               	incf	___awmod@divisor+1,f
   905  05F7                     l864:
   906  05F7  0870               	movf	___awmod@divisor,w
   907  05F8  0471               	iorwf	___awmod@divisor+1,w
   908  05F9  1903               	btfsc	3,2
   909  05FA  2DFC               	goto	u381
   910  05FB  2DFD               	goto	u380
   911  05FC                     u381:
   912  05FC  2E2C               	goto	l882
   913  05FD                     u380:
   914  05FD                     l866:
   915  05FD  01F5               	clrf	___awmod@counter
   916  05FE  0AF5               	incf	___awmod@counter,f
   917  05FF  2E0B               	goto	l872
   918  0600                     l868:
   919  0600  3001               	movlw	1
   920  0601                     u395:
   921  0601  1003               	clrc
   922  0602  0DF0               	rlf	___awmod@divisor,f
   923  0603  0DF1               	rlf	___awmod@divisor+1,f
   924  0604  3EFF               	addlw	-1
   925  0605  1D03               	skipz
   926  0606  2E01               	goto	u395
   927  0607                     l870:
   928  0607  3001               	movlw	1
   929  0608  00F4               	movwf	??___awmod
   930  0609  0874               	movf	??___awmod,w
   931  060A  07F5               	addwf	___awmod@counter,f
   932  060B                     l872:
   933  060B  1FF1               	btfss	___awmod@divisor+1,7
   934  060C  2E0E               	goto	u401
   935  060D  2E0F               	goto	u400
   936  060E                     u401:
   937  060E  2E00               	goto	l868
   938  060F                     u400:
   939  060F                     l874:
   940  060F  0871               	movf	___awmod@divisor+1,w
   941  0610  0273               	subwf	___awmod@dividend+1,w
   942  0611  1D03               	skipz
   943  0612  2E15               	goto	u415
   944  0613  0870               	movf	___awmod@divisor,w
   945  0614  0272               	subwf	___awmod@dividend,w
   946  0615                     u415:
   947  0615  1C03               	skipc
   948  0616  2E18               	goto	u411
   949  0617  2E19               	goto	u410
   950  0618                     u411:
   951  0618  2E1F               	goto	l878
   952  0619                     u410:
   953  0619                     l876:
   954  0619  0870               	movf	___awmod@divisor,w
   955  061A  02F2               	subwf	___awmod@dividend,f
   956  061B  0871               	movf	___awmod@divisor+1,w
   957  061C  1C03               	skipc
   958  061D  03F3               	decf	___awmod@dividend+1,f
   959  061E  02F3               	subwf	___awmod@dividend+1,f
   960  061F                     l878:
   961  061F  3001               	movlw	1
   962  0620                     u425:
   963  0620  1003               	clrc
   964  0621  0CF1               	rrf	___awmod@divisor+1,f
   965  0622  0CF0               	rrf	___awmod@divisor,f
   966  0623  3EFF               	addlw	-1
   967  0624  1D03               	skipz
   968  0625  2E20               	goto	u425
   969  0626                     l880:
   970  0626  3001               	movlw	1
   971  0627  02F5               	subwf	___awmod@counter,f
   972  0628  1D03               	btfss	3,2
   973  0629  2E2B               	goto	u431
   974  062A  2E2C               	goto	u430
   975  062B                     u431:
   976  062B  2E0F               	goto	l874
   977  062C                     u430:
   978  062C                     l882:
   979  062C  0876               	movf	___awmod@sign,w
   980  062D  1903               	btfsc	3,2
   981  062E  2E30               	goto	u441
   982  062F  2E31               	goto	u440
   983  0630                     u441:
   984  0630  2E36               	goto	l886
   985  0631                     u440:
   986  0631                     l884:
   987  0631  09F2               	comf	___awmod@dividend,f
   988  0632  09F3               	comf	___awmod@dividend+1,f
   989  0633  0AF2               	incf	___awmod@dividend,f
   990  0634  1903               	skipnz
   991  0635  0AF3               	incf	___awmod@dividend+1,f
   992  0636                     l886:
   993  0636  0873               	movf	___awmod@dividend+1,w
   994  0637  00F1               	movwf	?___awmod+1
   995  0638  0872               	movf	___awmod@dividend,w
   996  0639  00F0               	movwf	?___awmod
   997  063A                     l286:
   998  063A  0008               	return
   999  063B                     __end_of___awmod:
  1000                           
  1001                           	psect	text2
  1002  063B                     __ptext2:	
  1003 ;; *************** function ___awdiv *****************
  1004 ;; Defined at:
  1005 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  divisor         2    0[COMMON] int 
  1008 ;;  dividend        2    2[COMMON] int 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  quotient        2    7[COMMON] int 
  1011 ;;  sign            1    6[COMMON] unsigned char 
  1012 ;;  counter         1    5[COMMON] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    0[COMMON] int 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         4       0       0       0       0
  1023 ;;      Locals:         4       0       0       0       0
  1024 ;;      Temps:          1       0       0       0       0
  1025 ;;      Totals:         9       0       0       0       0
  1026 ;;Total ram usage:        9 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function ___awdiv
  1037  063B                     ___awdiv:
  1038  063B                     l808:	
  1039                           ;incstack = 0
  1040                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1041                           
  1042  063B  01F6               	clrf	___awdiv@sign
  1043  063C                     l810:
  1044  063C  1FF1               	btfss	___awdiv@divisor+1,7
  1045  063D  2E3F               	goto	u261
  1046  063E  2E40               	goto	u260
  1047  063F                     u261:
  1048  063F  2E47               	goto	l816
  1049  0640                     u260:
  1050  0640                     l812:
  1051  0640  09F0               	comf	___awdiv@divisor,f
  1052  0641  09F1               	comf	___awdiv@divisor+1,f
  1053  0642  0AF0               	incf	___awdiv@divisor,f
  1054  0643  1903               	skipnz
  1055  0644  0AF1               	incf	___awdiv@divisor+1,f
  1056  0645                     l814:
  1057  0645  01F6               	clrf	___awdiv@sign
  1058  0646  0AF6               	incf	___awdiv@sign,f
  1059  0647                     l816:
  1060  0647  1FF3               	btfss	___awdiv@dividend+1,7
  1061  0648  2E4A               	goto	u271
  1062  0649  2E4B               	goto	u270
  1063  064A                     u271:
  1064  064A  2E54               	goto	l822
  1065  064B                     u270:
  1066  064B                     l818:
  1067  064B  09F2               	comf	___awdiv@dividend,f
  1068  064C  09F3               	comf	___awdiv@dividend+1,f
  1069  064D  0AF2               	incf	___awdiv@dividend,f
  1070  064E  1903               	skipnz
  1071  064F  0AF3               	incf	___awdiv@dividend+1,f
  1072  0650                     l820:
  1073  0650  3001               	movlw	1
  1074  0651  00F4               	movwf	??___awdiv
  1075  0652  0874               	movf	??___awdiv,w
  1076  0653  06F6               	xorwf	___awdiv@sign,f
  1077  0654                     l822:
  1078  0654  01F7               	clrf	___awdiv@quotient
  1079  0655  01F8               	clrf	___awdiv@quotient+1
  1080  0656                     l824:
  1081  0656  0870               	movf	___awdiv@divisor,w
  1082  0657  0471               	iorwf	___awdiv@divisor+1,w
  1083  0658  1903               	btfsc	3,2
  1084  0659  2E5B               	goto	u281
  1085  065A  2E5C               	goto	u280
  1086  065B                     u281:
  1087  065B  2E93               	goto	l844
  1088  065C                     u280:
  1089  065C                     l826:
  1090  065C  01F5               	clrf	___awdiv@counter
  1091  065D  0AF5               	incf	___awdiv@counter,f
  1092  065E  2E6A               	goto	l832
  1093  065F                     l828:
  1094  065F  3001               	movlw	1
  1095  0660                     u295:
  1096  0660  1003               	clrc
  1097  0661  0DF0               	rlf	___awdiv@divisor,f
  1098  0662  0DF1               	rlf	___awdiv@divisor+1,f
  1099  0663  3EFF               	addlw	-1
  1100  0664  1D03               	skipz
  1101  0665  2E60               	goto	u295
  1102  0666                     l830:
  1103  0666  3001               	movlw	1
  1104  0667  00F4               	movwf	??___awdiv
  1105  0668  0874               	movf	??___awdiv,w
  1106  0669  07F5               	addwf	___awdiv@counter,f
  1107  066A                     l832:
  1108  066A  1FF1               	btfss	___awdiv@divisor+1,7
  1109  066B  2E6D               	goto	u301
  1110  066C  2E6E               	goto	u300
  1111  066D                     u301:
  1112  066D  2E5F               	goto	l828
  1113  066E                     u300:
  1114  066E                     l834:
  1115  066E  3001               	movlw	1
  1116  066F                     u315:
  1117  066F  1003               	clrc
  1118  0670  0DF7               	rlf	___awdiv@quotient,f
  1119  0671  0DF8               	rlf	___awdiv@quotient+1,f
  1120  0672  3EFF               	addlw	-1
  1121  0673  1D03               	skipz
  1122  0674  2E6F               	goto	u315
  1123  0675  0871               	movf	___awdiv@divisor+1,w
  1124  0676  0273               	subwf	___awdiv@dividend+1,w
  1125  0677  1D03               	skipz
  1126  0678  2E7B               	goto	u325
  1127  0679  0870               	movf	___awdiv@divisor,w
  1128  067A  0272               	subwf	___awdiv@dividend,w
  1129  067B                     u325:
  1130  067B  1C03               	skipc
  1131  067C  2E7E               	goto	u321
  1132  067D  2E7F               	goto	u320
  1133  067E                     u321:
  1134  067E  2E86               	goto	l840
  1135  067F                     u320:
  1136  067F                     l836:
  1137  067F  0870               	movf	___awdiv@divisor,w
  1138  0680  02F2               	subwf	___awdiv@dividend,f
  1139  0681  0871               	movf	___awdiv@divisor+1,w
  1140  0682  1C03               	skipc
  1141  0683  03F3               	decf	___awdiv@dividend+1,f
  1142  0684  02F3               	subwf	___awdiv@dividend+1,f
  1143  0685                     l838:
  1144  0685  1477               	bsf	___awdiv@quotient,0
  1145  0686                     l840:
  1146  0686  3001               	movlw	1
  1147  0687                     u335:
  1148  0687  1003               	clrc
  1149  0688  0CF1               	rrf	___awdiv@divisor+1,f
  1150  0689  0CF0               	rrf	___awdiv@divisor,f
  1151  068A  3EFF               	addlw	-1
  1152  068B  1D03               	skipz
  1153  068C  2E87               	goto	u335
  1154  068D                     l842:
  1155  068D  3001               	movlw	1
  1156  068E  02F5               	subwf	___awdiv@counter,f
  1157  068F  1D03               	btfss	3,2
  1158  0690  2E92               	goto	u341
  1159  0691  2E93               	goto	u340
  1160  0692                     u341:
  1161  0692  2E6E               	goto	l834
  1162  0693                     u340:
  1163  0693                     l844:
  1164  0693  0876               	movf	___awdiv@sign,w
  1165  0694  1903               	btfsc	3,2
  1166  0695  2E97               	goto	u351
  1167  0696  2E98               	goto	u350
  1168  0697                     u351:
  1169  0697  2E9D               	goto	l848
  1170  0698                     u350:
  1171  0698                     l846:
  1172  0698  09F7               	comf	___awdiv@quotient,f
  1173  0699  09F8               	comf	___awdiv@quotient+1,f
  1174  069A  0AF7               	incf	___awdiv@quotient,f
  1175  069B  1903               	skipnz
  1176  069C  0AF8               	incf	___awdiv@quotient+1,f
  1177  069D                     l848:
  1178  069D  0878               	movf	___awdiv@quotient+1,w
  1179  069E  00F1               	movwf	?___awdiv+1
  1180  069F  0877               	movf	___awdiv@quotient,w
  1181  06A0  00F0               	movwf	?___awdiv
  1182  06A1                     l273:
  1183  06A1  0008               	return
  1184  06A2                     __end_of___awdiv:
  1185  007E                     btemp	set	126	;btemp
  1186  007E                     wtemp0	set	126
  1187                           
  1188                           	psect	config
  1189                           
  1190                           ;Config register CONFIG @ 0x2007
  1191                           ;	Oscillator Selection bits
  1192                           ;	FOSC = HS, HS oscillator
  1193                           ;	Watchdog Timer Enable bit
  1194                           ;	WDTE = OFF, WDT disabled
  1195                           ;	Power-up Timer Enable bit
  1196                           ;	PWRTE = OFF, PWRT disabled
  1197                           ;	Brown-out Reset Enable bit
  1198                           ;	BOREN = OFF, BOR disabled
  1199                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1200                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1201                           ;	Data EEPROM Memory Code Protection bit
  1202                           ;	CPD = OFF, Data EEPROM code protection off
  1203                           ;	Flash Program Memory Write Enable bits
  1204                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1205                           ;	In-Circuit Debugger Mode bit
  1206                           ;	DEBUG = 0x1, unprogrammed default
  1207                           ;	Flash Program Memory Code Protection bit
  1208                           ;	CP = OFF, Code protection off
  1209  2007                     	org	8199
  1210  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      5      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2054
                                              9 COMMON     2     2      0
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 21 16:30:15 2022

                      pc 0002                       l21 0713                       l25 077E  
                     l29 07E9             ___awdiv@sign 0076                       fsr 0004  
                    l273 06A1                      l286 063A                      l810 063C  
                    l820 0650                      l812 0640                      l900 06AE  
                    l830 0666                      l822 0654                      l814 0645  
                    l910 06DE                      l902 06D6                      l840 0686  
                    l832 066A                      l824 0656                      l816 0647  
                    l808 063B                      l920 06F9                      l912 06DF  
                    l842 068D                      l834 066E                      l826 065C  
                    l818 064B                      l922 070B                      l914 06E7  
                    l836 067F                      l828 065F                      l844 0693  
                    l860 05EE                      l852 05E2                      l940 0743  
                    l932 0719                      l924 070F                      l916 06EA  
                    l908 06D8                      l846 0698                      l838 0685  
                    l870 0607                      l862 05F2                      l854 05E3  
                    l950 075B                      l942 0749                      l934 0741  
                    l926 0715                      l918 06F0                      l848 069D  
                    l880 0626                      l872 060B                      l864 05F7  
                    l856 05E7                      l952 0764                      l944 074A  
                    l874 060F                      l866 05FD                      l882 062C  
                    l858 05EC                      l954 0776                      l946 0752  
                    l890 06A2                      l884 0631                      l876 0619  
                    l868 0600                      l980 07C0                      l972 07AE  
                    l964 0784                      l956 077A                      l948 0755  
                    l892 06A9                      l886 0636                      l878 061F  
                    l982 07C6                      l974 07B4                      l966 07AC  
                    l958 0780                      l894 06AA                      l984 07CF  
                    l976 07B5                      l986 07E1                      l978 07BD  
                    l988 07E5                      u300 066E                      u301 066D  
                    u320 067F                      u400 060F                      u321 067E  
                    u401 060E                      u410 0619                      u315 066F  
                    u411 0618                      u340 0693                      u260 0640  
                    u500 07E9                      u341 0692                      u325 067B  
                    u261 063F                      u501 07E8                      u350 0698  
                    u270 064B                      u430 062C                      u351 0697  
                    u335 0687                      u271 064A                      u431 062B  
                    u415 0615                      u280 065C                      u440 0631  
                    u360 05E7                      u281 065B                      u441 0630  
                    u425 0620                      u361 05E6                      u370 05F2  
                    u450 070B                      u371 05F1                      u451 070A  
                    u380 05FD                      u460 0713                      u381 05FC  
                    u461 0712                      u517 06E3                      u470 0776  
                    u295 0660                      u471 0775                      u527 06F5  
                    u480 077E                      u481 077D                      u537 074E  
                    u490 07E1                      u395 0601                      u491 07E0  
                    u547 0760                      u557 07B9                      u567 07CB  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   _main 06A2                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___awdiv 06A2          __end_of___awmod 063B  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  main@i 002C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0079         ___awdiv@dividend 0072                   _Number 0020  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 05C5               __pmaintext 06A2  
                ___awdiv 063B                  ___awmod 05E2                  __ptext1 05E2  
                __ptext2 063B         ___awmod@dividend 0072                  main@dem 002E  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07EE  
             init_fetch0 05CF              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A                 ?___awdiv 0070                 ?___awmod 0070  
       __size_of___awdiv 0067         __size_of___awmod 0059            __size_of_main 014C  
               init_ram0 05D3             main@LED_CHUC 002A              main@LED_DVI 002B  

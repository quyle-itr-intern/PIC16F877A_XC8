

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 06 16:29:09 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  0667                     __pidataBANK0:
   173                           
   174                           ;initializer for _Number
   175  0667  3440               	retlw	64
   176  0668  3479               	retlw	121
   177  0669  3424               	retlw	36
   178  066A  3430               	retlw	48
   179  066B  3419               	retlw	25
   180  066C  3412               	retlw	18
   181  066D  3402               	retlw	2
   182  066E  3478               	retlw	120
   183  066F  3400               	retlw	0
   184  0670  3410               	retlw	16
   185  0007                     _PORTCbits	set	7
   186  0006                     _PORTB	set	6
   187  0087                     _TRISCbits	set	135
   188  0086                     _TRISB	set	134
   189                           
   190                           	psect	cinit
   191  07EE                     start_initialization:	
   192                           ; #config settings
   193                           
   194  07EE                     __initialization:
   195                           
   196                           ; Initialize objects allocated to BANK0
   197  07EE  1383               	bcf	3,7	;select IRP bank0
   198  07EF  302A               	movlw	low (__pdataBANK0+10)
   199  07F0  00FD               	movwf	btemp+-1
   200  07F1  3006               	movlw	high __pidataBANK0
   201  07F2  00FE               	movwf	btemp
   202  07F3  3067               	movlw	low __pidataBANK0
   203  07F4  00FF               	movwf	btemp+1
   204  07F5  3020               	movlw	low __pdataBANK0
   205  07F6  0084               	movwf	4
   206  07F7  120A  118A  2675  120A  118A  	fcall	init_ram0
   207  07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210  07FC                     __end_of__initialization:
   211  07FC  0183               	clrf	3
   212  07FD  120A  118A  2F02   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	dataBANK0
   215  0020                     __pdataBANK0:
   216  0020                     _Number:
   217  0020                     	ds	10
   218                           
   219                           	psect	inittext
   220  0671                     init_fetch0:	
   221                           ;	Called with low address in FSR and high address in W
   222                           
   223  0671  087E               	movf	btemp,w
   224  0672  008A               	movwf	10
   225  0673  087F               	movf	btemp+1,w
   226  0674  0082               	movwf	2
   227  0675                     init_ram0:	
   228                           ;Called with:
   229                           ;	high address of idata address in btemp 
   230                           ;	low address of idata address in btemp+1 
   231                           ;	low address of data in FSR
   232                           ;	high address + 1 of data in btemp-1
   233                           
   234  0675  120A  118A  2671  120A  118A  	fcall	init_fetch0
   235  067A  0080               	movwf	0
   236  067B  0A84               	incf	4,f
   237  067C  0804               	movf	4,w
   238  067D  067D               	xorwf	btemp+-1,w
   239  067E  1903               	btfsc	3,2
   240  067F  3400               	retlw	0
   241  0680  0AFF               	incf	btemp+1,f
   242  0681  1903               	btfsc	3,2
   243  0682  0AFE               	incf	btemp,f
   244  0683  2E75               	goto	init_ram0
   245                           
   246                           	psect	cstackCOMMON
   247  0070                     __pcstackCOMMON:
   248  0070                     ?_main:
   249  0070                     ?___lwdiv:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ___lwdiv@divisor:	
   253                           ; 2 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     ___lwdiv@dividend:
   259                           
   260                           ; 2 bytes @ 0x2
   261  0072                     	ds	2
   262  0074                     ??___lwdiv:
   263                           
   264                           ; 1 bytes @ 0x4
   265  0074                     	ds	1
   266  0075                     ___lwdiv@quotient:
   267                           
   268                           ; 2 bytes @ 0x5
   269  0075                     	ds	2
   270  0077                     ___lwdiv@counter:
   271                           
   272                           ; 1 bytes @ 0x7
   273  0077                     	ds	1
   274  0078                     ?___lwmod:
   275  0078                     ___lwmod@divisor:	
   276                           ; 2 bytes @ 0x8
   277                           
   278                           
   279                           ; 2 bytes @ 0x8
   280  0078                     	ds	2
   281  007A                     ___lwmod@dividend:
   282                           
   283                           ; 2 bytes @ 0xA
   284  007A                     	ds	2
   285  007C                     ??___lwmod:
   286                           
   287                           ; 1 bytes @ 0xC
   288  007C                     	ds	1
   289  007D                     ___lwmod@counter:
   290                           
   291                           ; 1 bytes @ 0xD
   292  007D                     	ds	1
   293                           
   294                           	psect	cstackBANK0
   295  002A                     __pcstackBANK0:
   296  002A                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x0
   299  002A                     	ds	2
   300  002C                     main@i:
   301                           
   302                           ; 2 bytes @ 0x2
   303  002C                     	ds	2
   304  002E                     main@counter:
   305                           
   306                           ; 2 bytes @ 0x4
   307  002E                     	ds	2
   308                           
   309                           	psect	maintext
   310  0702                     __pmaintext:	
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 30 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  i               2    2[BANK0 ] int 
   321 ;;  counter         2    4[BANK0 ] unsigned int 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : B00/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   331 ;;      Params:         0       0       0       0       0
   332 ;;      Locals:         0       4       0       0       0
   333 ;;      Temps:          0       2       0       0       0
   334 ;;      Totals:         0       6       0       0       0
   335 ;;Total ram usage:        6 bytes
   336 ;; Hardware stack levels required when called: 1
   337 ;; This function calls:
   338 ;;		___lwdiv
   339 ;;		___lwmod
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _main
   347  0702                     _main:
   348  0702                     l760:	
   349                           ;incstack = 0
   350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   351                           
   352                           
   353                           ;main.c: 32:     unsigned int counter = 0;
   354  0702  1283               	bcf	3,5	;RP0=0, select bank0
   355  0703  1303               	bcf	3,6	;RP1=0, select bank0
   356  0704  01AE               	clrf	main@counter
   357  0705  01AF               	clrf	main@counter+1
   358                           
   359                           ;main.c: 34:     TRISB = 0;
   360  0706  1683               	bsf	3,5	;RP0=1, select bank1
   361  0707  1303               	bcf	3,6	;RP1=0, select bank1
   362  0708  0186               	clrf	6	;volatile
   363  0709                     l762:
   364                           
   365                           ;main.c: 35:     TRISCbits.TRISC0 = 0;
   366  0709  1007               	bcf	7,0	;volatile
   367  070A                     l764:
   368                           
   369                           ;main.c: 36:     TRISCbits.TRISC1 = 0;
   370  070A  1087               	bcf	7,1	;volatile
   371  070B                     l766:
   372                           
   373                           ;main.c: 37:     TRISCbits.TRISC2 = 0;
   374  070B  1107               	bcf	7,2	;volatile
   375  070C                     l768:
   376                           
   377                           ;main.c: 38:     TRISCbits.TRISC3 = 0;
   378  070C  1187               	bcf	7,3	;volatile
   379  070D                     l17:	
   380                           ;main.c: 40:     while(1)
   381                           
   382                           
   383                           ;main.c: 41:     {;main.c: 42:         for(int i = 0; i < 50; i++)
   384  070D  1283               	bcf	3,5	;RP0=0, select bank0
   385  070E  01AC               	clrf	main@i
   386  070F  01AD               	clrf	main@i+1
   387  0710                     l774:
   388                           
   389                           ;main.c: 43:         {;main.c: 44:             PORTB = Number[counter/1000];
   390  0710  30E8               	movlw	232
   391  0711  00F0               	movwf	___lwdiv@divisor
   392  0712  3003               	movlw	3
   393  0713  00F1               	movwf	___lwdiv@divisor+1
   394  0714  1283               	bcf	3,5	;RP0=0, select bank0
   395  0715  1303               	bcf	3,6	;RP1=0, select bank0
   396  0716  082F               	movf	main@counter+1,w
   397  0717  00F3               	movwf	___lwdiv@dividend+1
   398  0718  082E               	movf	main@counter,w
   399  0719  00F2               	movwf	___lwdiv@dividend
   400  071A  120A  118A  26BE  120A  118A  	fcall	___lwdiv
   401  071F  0870               	movf	?___lwdiv,w
   402  0720  3E20               	addlw	(low (_Number| 0))& (0+255)
   403  0721  0084               	movwf	4
   404  0722  1383               	bcf	3,7	;select IRP bank0
   405  0723  0800               	movf	0,w
   406  0724  1283               	bcf	3,5	;RP0=0, select bank0
   407  0725  1303               	bcf	3,6	;RP1=0, select bank0
   408  0726  0086               	movwf	6	;volatile
   409  0727                     l776:
   410                           
   411                           ;main.c: 45:             PORTCbits.RC0 = 1;
   412  0727  1407               	bsf	7,0	;volatile
   413  0728                     l778:
   414                           
   415                           ;main.c: 46:             _delay((unsigned long)((1)*(20000000/4000.0)));
   416  0728  3007               	movlw	7
   417  0729  1283               	bcf	3,5	;RP0=0, select bank0
   418  072A  1303               	bcf	3,6	;RP1=0, select bank0
   419  072B  00AB               	movwf	??_main+1
   420  072C  307C               	movlw	124
   421  072D  00AA               	movwf	??_main
   422  072E                     u297:
   423  072E  0BAA               	decfsz	??_main,f
   424  072F  2F2E               	goto	u297
   425  0730  0BAB               	decfsz	??_main+1,f
   426  0731  2F2E               	goto	u297
   427  0732  0000               	nop
   428  0733                     l780:
   429                           
   430                           ;main.c: 47:             PORTCbits.RC0 = 0;
   431  0733  1283               	bcf	3,5	;RP0=0, select bank0
   432  0734  1303               	bcf	3,6	;RP1=0, select bank0
   433  0735  1007               	bcf	7,0	;volatile
   434  0736                     l782:
   435                           
   436                           ;main.c: 49:             PORTB = Number[counter/100%10];
   437  0736  300A               	movlw	10
   438  0737  00F8               	movwf	___lwmod@divisor
   439  0738  3000               	movlw	0
   440  0739  00F9               	movwf	___lwmod@divisor+1
   441  073A  3064               	movlw	100
   442  073B  00F0               	movwf	___lwdiv@divisor
   443  073C  3000               	movlw	0
   444  073D  00F1               	movwf	___lwdiv@divisor+1
   445  073E  082F               	movf	main@counter+1,w
   446  073F  00F3               	movwf	___lwdiv@dividend+1
   447  0740  082E               	movf	main@counter,w
   448  0741  00F2               	movwf	___lwdiv@dividend
   449  0742  120A  118A  26BE  120A  118A  	fcall	___lwdiv
   450  0747  0871               	movf	?___lwdiv+1,w
   451  0748  00FB               	movwf	___lwmod@dividend+1
   452  0749  0870               	movf	?___lwdiv,w
   453  074A  00FA               	movwf	___lwmod@dividend
   454  074B  120A  118A  2684  120A  118A  	fcall	___lwmod
   455  0750  0878               	movf	?___lwmod,w
   456  0751  3E20               	addlw	(low (_Number| 0))& (0+255)
   457  0752  0084               	movwf	4
   458  0753  1383               	bcf	3,7	;select IRP bank0
   459  0754  0800               	movf	0,w
   460  0755  1283               	bcf	3,5	;RP0=0, select bank0
   461  0756  1303               	bcf	3,6	;RP1=0, select bank0
   462  0757  0086               	movwf	6	;volatile
   463  0758                     l784:
   464                           
   465                           ;main.c: 50:             PORTCbits.RC1 = 1;
   466  0758  1487               	bsf	7,1	;volatile
   467                           
   468                           ;main.c: 51:             _delay((unsigned long)((1)*(20000000/4000.0)));
   469  0759  3007               	movlw	7
   470  075A  1283               	bcf	3,5	;RP0=0, select bank0
   471  075B  1303               	bcf	3,6	;RP1=0, select bank0
   472  075C  00AB               	movwf	??_main+1
   473  075D  307C               	movlw	124
   474  075E  00AA               	movwf	??_main
   475  075F                     u307:
   476  075F  0BAA               	decfsz	??_main,f
   477  0760  2F5F               	goto	u307
   478  0761  0BAB               	decfsz	??_main+1,f
   479  0762  2F5F               	goto	u307
   480  0763  0000               	nop
   481  0764                     l786:
   482                           
   483                           ;main.c: 52:             PORTCbits.RC1 = 0;
   484  0764  1283               	bcf	3,5	;RP0=0, select bank0
   485  0765  1303               	bcf	3,6	;RP1=0, select bank0
   486  0766  1087               	bcf	7,1	;volatile
   487  0767                     l788:
   488                           
   489                           ;main.c: 54:             PORTB = Number[counter/10%10];
   490  0767  300A               	movlw	10
   491  0768  00F8               	movwf	___lwmod@divisor
   492  0769  3000               	movlw	0
   493  076A  00F9               	movwf	___lwmod@divisor+1
   494  076B  300A               	movlw	10
   495  076C  00F0               	movwf	___lwdiv@divisor
   496  076D  3000               	movlw	0
   497  076E  00F1               	movwf	___lwdiv@divisor+1
   498  076F  082F               	movf	main@counter+1,w
   499  0770  00F3               	movwf	___lwdiv@dividend+1
   500  0771  082E               	movf	main@counter,w
   501  0772  00F2               	movwf	___lwdiv@dividend
   502  0773  120A  118A  26BE  120A  118A  	fcall	___lwdiv
   503  0778  0871               	movf	?___lwdiv+1,w
   504  0779  00FB               	movwf	___lwmod@dividend+1
   505  077A  0870               	movf	?___lwdiv,w
   506  077B  00FA               	movwf	___lwmod@dividend
   507  077C  120A  118A  2684  120A  118A  	fcall	___lwmod
   508  0781  0878               	movf	?___lwmod,w
   509  0782  3E20               	addlw	(low (_Number| 0))& (0+255)
   510  0783  0084               	movwf	4
   511  0784  1383               	bcf	3,7	;select IRP bank0
   512  0785  0800               	movf	0,w
   513  0786  1283               	bcf	3,5	;RP0=0, select bank0
   514  0787  1303               	bcf	3,6	;RP1=0, select bank0
   515  0788  0086               	movwf	6	;volatile
   516  0789                     l790:
   517                           
   518                           ;main.c: 55:             PORTCbits.RC2 = 1;
   519  0789  1507               	bsf	7,2	;volatile
   520  078A                     l792:
   521                           
   522                           ;main.c: 56:             _delay((unsigned long)((1)*(20000000/4000.0)));
   523  078A  3007               	movlw	7
   524  078B  1283               	bcf	3,5	;RP0=0, select bank0
   525  078C  1303               	bcf	3,6	;RP1=0, select bank0
   526  078D  00AB               	movwf	??_main+1
   527  078E  307C               	movlw	124
   528  078F  00AA               	movwf	??_main
   529  0790                     u317:
   530  0790  0BAA               	decfsz	??_main,f
   531  0791  2F90               	goto	u317
   532  0792  0BAB               	decfsz	??_main+1,f
   533  0793  2F90               	goto	u317
   534  0794  0000               	nop
   535  0795                     l794:
   536                           
   537                           ;main.c: 57:             PORTCbits.RC2 = 0;
   538  0795  1283               	bcf	3,5	;RP0=0, select bank0
   539  0796  1303               	bcf	3,6	;RP1=0, select bank0
   540  0797  1107               	bcf	7,2	;volatile
   541                           
   542                           ;main.c: 59:             PORTB = Number[counter%10];
   543  0798  300A               	movlw	10
   544  0799  00F8               	movwf	___lwmod@divisor
   545  079A  3000               	movlw	0
   546  079B  00F9               	movwf	___lwmod@divisor+1
   547  079C  082F               	movf	main@counter+1,w
   548  079D  00FB               	movwf	___lwmod@dividend+1
   549  079E  082E               	movf	main@counter,w
   550  079F  00FA               	movwf	___lwmod@dividend
   551  07A0  120A  118A  2684  120A  118A  	fcall	___lwmod
   552  07A5  0878               	movf	?___lwmod,w
   553  07A6  3E20               	addlw	(low (_Number| 0))& (0+255)
   554  07A7  0084               	movwf	4
   555  07A8  1383               	bcf	3,7	;select IRP bank0
   556  07A9  0800               	movf	0,w
   557  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   558  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   559  07AC  0086               	movwf	6	;volatile
   560  07AD                     l796:
   561                           
   562                           ;main.c: 60:             PORTCbits.RC3 = 1;
   563  07AD  1587               	bsf	7,3	;volatile
   564  07AE                     l798:
   565                           
   566                           ;main.c: 61:             _delay((unsigned long)((1)*(20000000/4000.0)));
   567  07AE  3007               	movlw	7
   568  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   569  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   570  07B1  00AB               	movwf	??_main+1
   571  07B2  307C               	movlw	124
   572  07B3  00AA               	movwf	??_main
   573  07B4                     u327:
   574  07B4  0BAA               	decfsz	??_main,f
   575  07B5  2FB4               	goto	u327
   576  07B6  0BAB               	decfsz	??_main+1,f
   577  07B7  2FB4               	goto	u327
   578  07B8  0000               	nop
   579  07B9                     l800:
   580                           
   581                           ;main.c: 62:             PORTCbits.RC3 = 0;
   582  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   583  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   584  07BB  1187               	bcf	7,3	;volatile
   585  07BC                     l802:
   586                           
   587                           ;main.c: 63:         }
   588  07BC  3001               	movlw	1
   589  07BD  07AC               	addwf	main@i,f
   590  07BE  1803               	skipnc
   591  07BF  0AAD               	incf	main@i+1,f
   592  07C0  3000               	movlw	0
   593  07C1  07AD               	addwf	main@i+1,f
   594  07C2                     l804:
   595  07C2  082D               	movf	main@i+1,w
   596  07C3  3A80               	xorlw	128
   597  07C4  00FF               	movwf	btemp+1
   598  07C5  3080               	movlw	128
   599  07C6  027F               	subwf	btemp+1,w
   600  07C7  1D03               	skipz
   601  07C8  2FCB               	goto	u285
   602  07C9  3032               	movlw	50
   603  07CA  022C               	subwf	main@i,w
   604  07CB                     u285:
   605  07CB  1C03               	skipc
   606  07CC  2FCE               	goto	u281
   607  07CD  2FCF               	goto	u280
   608  07CE                     u281:
   609  07CE  2F10               	goto	l774
   610  07CF                     u280:
   611  07CF                     l806:
   612                           
   613                           ;main.c: 64:         counter++;
   614  07CF  3001               	movlw	1
   615  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   616  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   617  07D2  07AE               	addwf	main@counter,f
   618  07D3  1803               	skipnc
   619  07D4  0AAF               	incf	main@counter+1,f
   620  07D5  3000               	movlw	0
   621  07D6  07AF               	addwf	main@counter+1,f
   622  07D7                     l808:
   623                           
   624                           ;main.c: 65:         counter %= 10000;
   625  07D7  3010               	movlw	16
   626  07D8  00F8               	movwf	___lwmod@divisor
   627  07D9  3027               	movlw	39
   628  07DA  00F9               	movwf	___lwmod@divisor+1
   629  07DB  082F               	movf	main@counter+1,w
   630  07DC  00FB               	movwf	___lwmod@dividend+1
   631  07DD  082E               	movf	main@counter,w
   632  07DE  00FA               	movwf	___lwmod@dividend
   633  07DF  120A  118A  2684  120A  118A  	fcall	___lwmod
   634  07E4  0879               	movf	?___lwmod+1,w
   635  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   636  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   637  07E7  00AF               	movwf	main@counter+1
   638  07E8  0878               	movf	?___lwmod,w
   639  07E9  00AE               	movwf	main@counter
   640  07EA  2F0D               	goto	l17
   641  07EB  120A  118A  2800   	ljmp	start
   642  07EE                     __end_of_main:
   643                           
   644                           	psect	text1
   645  0684                     __ptext1:	
   646 ;; *************** function ___lwmod *****************
   647 ;; Defined at:
   648 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  divisor         2    8[COMMON] unsigned int 
   651 ;;  dividend        2   10[COMMON] unsigned int 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  counter         1   13[COMMON] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  2    8[COMMON] unsigned int 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         4       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0
   665 ;;      Temps:          1       0       0       0       0
   666 ;;      Totals:         6       0       0       0       0
   667 ;;Total ram usage:        6 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function ___lwmod
   678  0684                     ___lwmod:
   679  0684                     l738:	
   680                           ;incstack = 0
   681                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   682                           
   683  0684  0878               	movf	___lwmod@divisor,w
   684  0685  0479               	iorwf	___lwmod@divisor+1,w
   685  0686  1903               	btfsc	3,2
   686  0687  2E89               	goto	u221
   687  0688  2E8A               	goto	u220
   688  0689                     u221:
   689  0689  2EB9               	goto	l756
   690  068A                     u220:
   691  068A                     l740:
   692  068A  01FD               	clrf	___lwmod@counter
   693  068B  0AFD               	incf	___lwmod@counter,f
   694  068C  2E98               	goto	l746
   695  068D                     l742:
   696  068D  3001               	movlw	1
   697  068E                     u235:
   698  068E  1003               	clrc
   699  068F  0DF8               	rlf	___lwmod@divisor,f
   700  0690  0DF9               	rlf	___lwmod@divisor+1,f
   701  0691  3EFF               	addlw	-1
   702  0692  1D03               	skipz
   703  0693  2E8E               	goto	u235
   704  0694                     l744:
   705  0694  3001               	movlw	1
   706  0695  00FC               	movwf	??___lwmod
   707  0696  087C               	movf	??___lwmod,w
   708  0697  07FD               	addwf	___lwmod@counter,f
   709  0698                     l746:
   710  0698  1FF9               	btfss	___lwmod@divisor+1,7
   711  0699  2E9B               	goto	u241
   712  069A  2E9C               	goto	u240
   713  069B                     u241:
   714  069B  2E8D               	goto	l742
   715  069C                     u240:
   716  069C                     l748:
   717  069C  0879               	movf	___lwmod@divisor+1,w
   718  069D  027B               	subwf	___lwmod@dividend+1,w
   719  069E  1D03               	skipz
   720  069F  2EA2               	goto	u255
   721  06A0  0878               	movf	___lwmod@divisor,w
   722  06A1  027A               	subwf	___lwmod@dividend,w
   723  06A2                     u255:
   724  06A2  1C03               	skipc
   725  06A3  2EA5               	goto	u251
   726  06A4  2EA6               	goto	u250
   727  06A5                     u251:
   728  06A5  2EAC               	goto	l752
   729  06A6                     u250:
   730  06A6                     l750:
   731  06A6  0878               	movf	___lwmod@divisor,w
   732  06A7  02FA               	subwf	___lwmod@dividend,f
   733  06A8  0879               	movf	___lwmod@divisor+1,w
   734  06A9  1C03               	skipc
   735  06AA  03FB               	decf	___lwmod@dividend+1,f
   736  06AB  02FB               	subwf	___lwmod@dividend+1,f
   737  06AC                     l752:
   738  06AC  3001               	movlw	1
   739  06AD                     u265:
   740  06AD  1003               	clrc
   741  06AE  0CF9               	rrf	___lwmod@divisor+1,f
   742  06AF  0CF8               	rrf	___lwmod@divisor,f
   743  06B0  3EFF               	addlw	-1
   744  06B1  1D03               	skipz
   745  06B2  2EAD               	goto	u265
   746  06B3                     l754:
   747  06B3  3001               	movlw	1
   748  06B4  02FD               	subwf	___lwmod@counter,f
   749  06B5  1D03               	btfss	3,2
   750  06B6  2EB8               	goto	u271
   751  06B7  2EB9               	goto	u270
   752  06B8                     u271:
   753  06B8  2E9C               	goto	l748
   754  06B9                     u270:
   755  06B9                     l756:
   756  06B9  087B               	movf	___lwmod@dividend+1,w
   757  06BA  00F9               	movwf	?___lwmod+1
   758  06BB  087A               	movf	___lwmod@dividend,w
   759  06BC  00F8               	movwf	?___lwmod
   760  06BD                     l390:
   761  06BD  0008               	return
   762  06BE                     __end_of___lwmod:
   763                           
   764                           	psect	text2
   765  06BE                     __ptext2:	
   766 ;; *************** function ___lwdiv *****************
   767 ;; Defined at:
   768 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  divisor         2    0[COMMON] unsigned int 
   771 ;;  dividend        2    2[COMMON] unsigned int 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  quotient        2    5[COMMON] unsigned int 
   774 ;;  counter         1    7[COMMON] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  2    0[COMMON] unsigned int 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         4       0       0       0       0
   785 ;;      Locals:         3       0       0       0       0
   786 ;;      Temps:          1       0       0       0       0
   787 ;;      Totals:         8       0       0       0       0
   788 ;;Total ram usage:        8 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function ___lwdiv
   799  06BE                     ___lwdiv:
   800  06BE                     l712:	
   801                           ;incstack = 0
   802                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   803                           
   804  06BE  01F5               	clrf	___lwdiv@quotient
   805  06BF  01F6               	clrf	___lwdiv@quotient+1
   806  06C0                     l714:
   807  06C0  0870               	movf	___lwdiv@divisor,w
   808  06C1  0471               	iorwf	___lwdiv@divisor+1,w
   809  06C2  1903               	btfsc	3,2
   810  06C3  2EC5               	goto	u151
   811  06C4  2EC6               	goto	u150
   812  06C5                     u151:
   813  06C5  2EFD               	goto	l734
   814  06C6                     u150:
   815  06C6                     l716:
   816  06C6  01F7               	clrf	___lwdiv@counter
   817  06C7  0AF7               	incf	___lwdiv@counter,f
   818  06C8  2ED4               	goto	l722
   819  06C9                     l718:
   820  06C9  3001               	movlw	1
   821  06CA                     u165:
   822  06CA  1003               	clrc
   823  06CB  0DF0               	rlf	___lwdiv@divisor,f
   824  06CC  0DF1               	rlf	___lwdiv@divisor+1,f
   825  06CD  3EFF               	addlw	-1
   826  06CE  1D03               	skipz
   827  06CF  2ECA               	goto	u165
   828  06D0                     l720:
   829  06D0  3001               	movlw	1
   830  06D1  00F4               	movwf	??___lwdiv
   831  06D2  0874               	movf	??___lwdiv,w
   832  06D3  07F7               	addwf	___lwdiv@counter,f
   833  06D4                     l722:
   834  06D4  1FF1               	btfss	___lwdiv@divisor+1,7
   835  06D5  2ED7               	goto	u171
   836  06D6  2ED8               	goto	u170
   837  06D7                     u171:
   838  06D7  2EC9               	goto	l718
   839  06D8                     u170:
   840  06D8                     l724:
   841  06D8  3001               	movlw	1
   842  06D9                     u185:
   843  06D9  1003               	clrc
   844  06DA  0DF5               	rlf	___lwdiv@quotient,f
   845  06DB  0DF6               	rlf	___lwdiv@quotient+1,f
   846  06DC  3EFF               	addlw	-1
   847  06DD  1D03               	skipz
   848  06DE  2ED9               	goto	u185
   849  06DF  0871               	movf	___lwdiv@divisor+1,w
   850  06E0  0273               	subwf	___lwdiv@dividend+1,w
   851  06E1  1D03               	skipz
   852  06E2  2EE5               	goto	u195
   853  06E3  0870               	movf	___lwdiv@divisor,w
   854  06E4  0272               	subwf	___lwdiv@dividend,w
   855  06E5                     u195:
   856  06E5  1C03               	skipc
   857  06E6  2EE8               	goto	u191
   858  06E7  2EE9               	goto	u190
   859  06E8                     u191:
   860  06E8  2EF0               	goto	l730
   861  06E9                     u190:
   862  06E9                     l726:
   863  06E9  0870               	movf	___lwdiv@divisor,w
   864  06EA  02F2               	subwf	___lwdiv@dividend,f
   865  06EB  0871               	movf	___lwdiv@divisor+1,w
   866  06EC  1C03               	skipc
   867  06ED  03F3               	decf	___lwdiv@dividend+1,f
   868  06EE  02F3               	subwf	___lwdiv@dividend+1,f
   869  06EF                     l728:
   870  06EF  1475               	bsf	___lwdiv@quotient,0
   871  06F0                     l730:
   872  06F0  3001               	movlw	1
   873  06F1                     u205:
   874  06F1  1003               	clrc
   875  06F2  0CF1               	rrf	___lwdiv@divisor+1,f
   876  06F3  0CF0               	rrf	___lwdiv@divisor,f
   877  06F4  3EFF               	addlw	-1
   878  06F5  1D03               	skipz
   879  06F6  2EF1               	goto	u205
   880  06F7                     l732:
   881  06F7  3001               	movlw	1
   882  06F8  02F7               	subwf	___lwdiv@counter,f
   883  06F9  1D03               	btfss	3,2
   884  06FA  2EFC               	goto	u211
   885  06FB  2EFD               	goto	u210
   886  06FC                     u211:
   887  06FC  2ED8               	goto	l724
   888  06FD                     u210:
   889  06FD                     l734:
   890  06FD  0876               	movf	___lwdiv@quotient+1,w
   891  06FE  00F1               	movwf	?___lwdiv+1
   892  06FF  0875               	movf	___lwdiv@quotient,w
   893  0700  00F0               	movwf	?___lwdiv
   894  0701                     l380:
   895  0701  0008               	return
   896  0702                     __end_of___lwdiv:
   897  007E                     btemp	set	126	;btemp
   898  007E                     wtemp0	set	126
   899                           
   900                           	psect	config
   901                           
   902                           ;Config register CONFIG @ 0x2007
   903                           ;	Oscillator Selection bits
   904                           ;	FOSC = HS, HS oscillator
   905                           ;	Watchdog Timer Enable bit
   906                           ;	WDTE = OFF, WDT disabled
   907                           ;	Power-up Timer Enable bit
   908                           ;	PWRTE = OFF, PWRT disabled
   909                           ;	Brown-out Reset Enable bit
   910                           ;	BOREN = OFF, BOR disabled
   911                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   912                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   913                           ;	Data EEPROM Memory Code Protection bit
   914                           ;	CPD = OFF, Data EEPROM code protection off
   915                           ;	Flash Program Memory Write Enable bits
   916                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   917                           ;	In-Circuit Debugger Mode bit
   918                           ;	DEBUG = 0x1, unprogrammed default
   919                           ;	Flash Program Memory Code Protection bit
   920                           ;	CP = OFF, Code protection off
   921  2007                     	org	8199
   922  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1544
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     767
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 06 16:29:09 2022

                      pc 0002                       l17 070D                       fsr 0004  
                    l380 0701                      l390 06BD                      l720 06D0  
                    l712 06BE                      l800 07B9                      l730 06F0  
                    l722 06D4                      l714 06C0                      l802 07BC  
                    l732 06F7                      l724 06D8                      l716 06C6  
                    l740 068A                      l804 07C2                      l726 06E9  
                    l718 06C9                      l734 06FD                      l750 06A6  
                    l742 068D                      l806 07CF                      l728 06EF  
                    l752 06AC                      l744 0694                      l808 07D7  
                    l760 0702                      l754 06B3                      l746 0698  
                    l738 0684                      l762 0709                      l748 069C  
                    l756 06B9                      l780 0733                      l764 070A  
                    l790 0789                      l782 0736                      l774 0710  
                    l766 070B                      l792 078A                      l784 0758  
                    l776 0727                      l768 070C                      l794 0795  
                    l786 0764                      l778 0728                      l796 07AD  
                    l788 0767                      l798 07AE                      u210 06FD  
                    u211 06FC                      u220 068A                      u205 06F1  
                    u221 0689                      u150 06C6                      u151 06C5  
                    u240 069C                      u241 069B                      u170 06D8  
                    u250 06A6                      u171 06D7                      u251 06A5  
                    u235 068E                      u307 075F                      u165 06CA  
                    u317 0790                      u190 06E9                      u270 06B9  
                    u191 06E8                      u271 06B8                      u255 06A2  
                    u327 07B4                      u280 07CF                      u185 06D9  
                    u265 06AD                      u281 07CE                      u195 06E5  
                    u285 07CB                      u297 072E                      fsr0 0004  
                    indf 0000              main@counter 002E                     _main 0702  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lwdiv 0702          __end_of___lwmod 06BE                    _PORTB 0006  
                  _TRISB 0086                    main@i 002C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 002A                   _Number 0020  
              ??___lwdiv 0074                ??___lwmod 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0667               __pmaintext 0702  
                ___lwdiv 06BE                  ___lwmod 0684                  __ptext1 0684  
                __ptext2 06BE     end_of_initialization 07FC                _PORTCbits 0007  
              _TRISCbits 0087      start_initialization 07EE               init_fetch0 0671  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 002A  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0078  
       ___lwdiv@quotient 0075         __size_of___lwdiv 0044         __size_of___lwmod 003A  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077            __size_of_main 00EC  
               init_ram0 0675         ___lwmod@dividend 007A          ___lwmod@divisor 0078  
        ___lwmod@counter 007D  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 23 22:12:19 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.32
    15                           ; Generated 02/02/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	strings
   171  0003                     __pstrings:
   172  0003                     stringtab:
   173  0003                     __stringtab:
   174  0003                     stringcode:	
   175                           ;	String table - string pointers are 1 byte each
   176                           
   177  0003                     stringdir:
   178  0003  3000               	movlw	high stringdir
   179  0004  008A               	movwf	10
   180  0005  0804               	movf	4,w
   181  0006  0A84               	incf	4,f
   182  0007  0782               	addwf	2,f
   183  0008                     __stringbase:
   184  0008  3400               	retlw	0
   185  0009                     __end_of__stringtab:
   186  0009                     _Number:
   187  0009  34C0               	retlw	192
   188  000A  34F9               	retlw	249
   189  000B  34A4               	retlw	164
   190  000C  34B0               	retlw	176
   191  000D  3499               	retlw	153
   192  000E  3492               	retlw	146
   193  000F  3482               	retlw	130
   194  0010  34F8               	retlw	248
   195  0011  3480               	retlw	128
   196  0012  3490               	retlw	144
   197  0013                     __end_of_Number:
   198  0008                     _PORTDbits	set	8
   199  000E                     _TMR1L	set	14
   200  000F                     _TMR1H	set	15
   201  0010                     _T1CONbits	set	16
   202  0006                     _PORTB	set	6
   203  0008                     _PORTD	set	8
   204  008C                     _PIE1bits	set	140
   205  0086                     _TRISB	set	134
   206  0088                     _TRISD	set	136
   207  009F                     _ADCON1	set	159
   208                           
   209                           	psect	cinit
   210  07FC                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07FC                     __initialization:
   214  07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217  07FC                     __end_of__initialization:
   218  07FC  0183               	clrf	3
   219  07FD  120A  118A  2ECD   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	cstackCOMMON
   222  0070                     __pcstackCOMMON:
   223  0070                     ?_main:
   224  0070                     ?___lwdiv:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ___lwdiv@divisor:	
   228                           ; 2 bytes @ 0x0
   229                           
   230                           
   231                           ; 2 bytes @ 0x0
   232  0070                     	ds	2
   233  0072                     ___lwdiv@dividend:
   234                           
   235                           ; 2 bytes @ 0x2
   236  0072                     	ds	2
   237  0074                     ??___lwdiv:
   238                           
   239                           ; 1 bytes @ 0x4
   240  0074                     	ds	1
   241  0075                     ___lwdiv@quotient:
   242                           
   243                           ; 2 bytes @ 0x5
   244  0075                     	ds	2
   245  0077                     ___lwdiv@counter:
   246                           
   247                           ; 1 bytes @ 0x7
   248  0077                     	ds	1
   249  0078                     ?___lwmod:
   250  0078                     ___lwmod@divisor:	
   251                           ; 2 bytes @ 0x8
   252                           
   253                           
   254                           ; 2 bytes @ 0x8
   255  0078                     	ds	2
   256  007A                     ___lwmod@dividend:
   257                           
   258                           ; 2 bytes @ 0xA
   259  007A                     	ds	2
   260  007C                     ??___lwmod:
   261                           
   262                           ; 1 bytes @ 0xC
   263  007C                     	ds	1
   264  007D                     ___lwmod@counter:
   265                           
   266                           ; 1 bytes @ 0xD
   267  007D                     	ds	1
   268                           
   269                           	psect	cstackBANK0
   270  0020                     __pcstackBANK0:
   271  0020                     ??_main:
   272                           
   273                           ; 1 bytes @ 0x0
   274  0020                     	ds	2
   275  0022                     main@counter:
   276                           
   277                           ; 2 bytes @ 0x2
   278  0022                     	ds	2
   279                           
   280                           	psect	maintext
   281  06CD                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 28 in file "newmain.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  counter         2    2[BANK0 ] unsigned int 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       2       0       0       0
   303 ;;      Temps:          0       2       0       0       0
   304 ;;      Totals:         0       4       0       0       0
   305 ;;Total ram usage:        4 bytes
   306 ;; Hardware stack levels required when called: 1
   307 ;; This function calls:
   308 ;;		___lwdiv
   309 ;;		___lwmod
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _main
   317  06CD                     _main:
   318  06CD                     l799:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   321                           
   322                           
   323                           ;newmain.c: 29:     ADCON1 |= 0x07;
   324  06CD  3007               	movlw	7
   325  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   326  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   327  06D0  00A0               	movwf	??_main
   328  06D1  0820               	movf	??_main,w
   329  06D2  1683               	bsf	3,5	;RP0=1, select bank1
   330  06D3  1303               	bcf	3,6	;RP1=0, select bank1
   331  06D4  049F               	iorwf	31,f	;volatile
   332  06D5                     l801:
   333                           
   334                           ;newmain.c: 30:     unsigned int counter;;newmain.c: 32:     TRISD = 0x00;
   335  06D5  0188               	clrf	8	;volatile
   336  06D6                     l803:
   337                           
   338                           ;newmain.c: 33:     PORTD = 0x00;
   339  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   340  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   341  06D8  0188               	clrf	8	;volatile
   342  06D9                     l805:
   343                           
   344                           ;newmain.c: 35:     TRISB = 0x00;
   345  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   346  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   347  06DB  0186               	clrf	6	;volatile
   348  06DC                     l807:
   349                           
   350                           ;newmain.c: 36:     PORTB = 0x00;
   351  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   352  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   353  06DE  0186               	clrf	6	;volatile
   354  06DF                     l809:
   355                           
   356                           ;newmain.c: 38:     PIE1bits.TMR1IE = 0;
   357  06DF  1683               	bsf	3,5	;RP0=1, select bank1
   358  06E0  1303               	bcf	3,6	;RP1=0, select bank1
   359  06E1  100C               	bcf	12,0	;volatile
   360  06E2                     l811:
   361                           
   362                           ;newmain.c: 40:     T1CONbits.T1CKPS1 = 0;
   363  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   364  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   365  06E4  1290               	bcf	16,5	;volatile
   366  06E5                     l813:
   367                           
   368                           ;newmain.c: 41:     T1CONbits.T1CKPS0 = 0;
   369  06E5  1210               	bcf	16,4	;volatile
   370  06E6                     l815:
   371                           
   372                           ;newmain.c: 43:     T1CONbits.TMR1CS = 1;
   373  06E6  1490               	bsf	16,1	;volatile
   374  06E7                     l817:
   375                           
   376                           ;newmain.c: 45:     TMR1H = 0;
   377  06E7  018F               	clrf	15	;volatile
   378  06E8                     l819:
   379                           
   380                           ;newmain.c: 46:     TMR1L = 0;
   381  06E8  018E               	clrf	14	;volatile
   382  06E9                     l821:
   383                           
   384                           ;newmain.c: 48:     T1CONbits.TMR1ON = 1;
   385  06E9  1410               	bsf	16,0	;volatile
   386  06EA                     l823:
   387                           
   388                           ;newmain.c: 51:     {;newmain.c: 52:         counter = TMR1H;
   389  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   390  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   391  06EC  080F               	movf	15,w	;volatile
   392  06ED  00A0               	movwf	??_main
   393  06EE  01A1               	clrf	??_main+1
   394  06EF  0820               	movf	??_main,w
   395  06F0  00A2               	movwf	main@counter
   396  06F1  0821               	movf	??_main+1,w
   397  06F2  00A3               	movwf	main@counter+1
   398  06F3                     l825:
   399                           
   400                           ;newmain.c: 53:         counter <<= 8;
   401  06F3  3008               	movlw	8
   402  06F4                     u295:
   403  06F4  1003               	clrc
   404  06F5  0DA2               	rlf	main@counter,f
   405  06F6  0DA3               	rlf	main@counter+1,f
   406  06F7  3EFF               	addlw	-1
   407  06F8  1D03               	skipz
   408  06F9  2EF4               	goto	u295
   409  06FA                     l827:
   410                           
   411                           ;newmain.c: 54:         counter |= TMR1L;
   412  06FA  080E               	movf	14,w	;volatile
   413  06FB  00A0               	movwf	??_main
   414  06FC  01A1               	clrf	??_main+1
   415  06FD  0820               	movf	??_main,w
   416  06FE  04A2               	iorwf	main@counter,f
   417  06FF  0821               	movf	??_main+1,w
   418  0700  04A3               	iorwf	main@counter+1,f
   419  0701                     l829:
   420                           
   421                           ;newmain.c: 55:         if(counter >= 10000)
   422  0701  3027               	movlw	39
   423  0702  0223               	subwf	main@counter+1,w
   424  0703  3010               	movlw	16
   425  0704  1903               	skipnz
   426  0705  0222               	subwf	main@counter,w
   427  0706  1C03               	skipc
   428  0707  2F09               	goto	u301
   429  0708  2F0A               	goto	u300
   430  0709                     u301:
   431  0709  2F10               	goto	l837
   432  070A                     u300:
   433  070A                     l831:
   434                           
   435                           ;newmain.c: 56:         {;newmain.c: 57:             counter = 0;
   436  070A  01A2               	clrf	main@counter
   437  070B  01A3               	clrf	main@counter+1
   438  070C                     l833:
   439                           
   440                           ;newmain.c: 58:             T1CONbits.TMR1ON = 0;
   441  070C  1010               	bcf	16,0	;volatile
   442                           
   443                           ;newmain.c: 59:             TMR1H = TMR1L = 0;
   444  070D  018E               	clrf	14	;volatile
   445  070E  018F               	clrf	15	;volatile
   446  070F                     l835:
   447                           
   448                           ;newmain.c: 60:             T1CONbits.TMR1ON = 1;
   449  070F  1410               	bsf	16,0	;volatile
   450  0710                     l837:
   451                           
   452                           ;newmain.c: 64:         PORTB = Number[counter/1000];
   453  0710  30E8               	movlw	232
   454  0711  00F0               	movwf	___lwdiv@divisor
   455  0712  3003               	movlw	3
   456  0713  00F1               	movwf	___lwdiv@divisor+1
   457  0714  0823               	movf	main@counter+1,w
   458  0715  00F3               	movwf	___lwdiv@dividend+1
   459  0716  0822               	movf	main@counter,w
   460  0717  00F2               	movwf	___lwdiv@dividend
   461  0718  120A  118A  2689  120A  118A  	fcall	___lwdiv
   462  071D  0870               	movf	?___lwdiv,w
   463  071E  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   464  071F  0084               	movwf	4
   465  0720  120A  118A  2003  120A  118A  	fcall	stringdir
   466  0725  1283               	bcf	3,5	;RP0=0, select bank0
   467  0726  1303               	bcf	3,6	;RP1=0, select bank0
   468  0727  0086               	movwf	6	;volatile
   469  0728                     l839:
   470                           
   471                           ;newmain.c: 65:         PORTDbits.RD0 = 0;
   472  0728  1008               	bcf	8,0	;volatile
   473  0729                     l841:
   474                           
   475                           ;newmain.c: 66:         _delay((unsigned long)((1)*(20000000/4000.0)));
   476  0729  3007               	movlw	7
   477  072A  1283               	bcf	3,5	;RP0=0, select bank0
   478  072B  1303               	bcf	3,6	;RP1=0, select bank0
   479  072C  00A1               	movwf	??_main+1
   480  072D  307C               	movlw	124
   481  072E  00A0               	movwf	??_main
   482  072F                     u317:
   483  072F  0BA0               	decfsz	??_main,f
   484  0730  2F2F               	goto	u317
   485  0731  0BA1               	decfsz	??_main+1,f
   486  0732  2F2F               	goto	u317
   487  0733  0000               	nop
   488  0734                     l843:
   489                           
   490                           ;newmain.c: 67:         PORTDbits.RD0 = 1;
   491  0734  1283               	bcf	3,5	;RP0=0, select bank0
   492  0735  1303               	bcf	3,6	;RP1=0, select bank0
   493  0736  1408               	bsf	8,0	;volatile
   494  0737                     l845:
   495                           
   496                           ;newmain.c: 68:         _delay((unsigned long)((1)*(20000000/4000.0)));
   497  0737  3007               	movlw	7
   498  0738  1283               	bcf	3,5	;RP0=0, select bank0
   499  0739  1303               	bcf	3,6	;RP1=0, select bank0
   500  073A  00A1               	movwf	??_main+1
   501  073B  307C               	movlw	124
   502  073C  00A0               	movwf	??_main
   503  073D                     u327:
   504  073D  0BA0               	decfsz	??_main,f
   505  073E  2F3D               	goto	u327
   506  073F  0BA1               	decfsz	??_main+1,f
   507  0740  2F3D               	goto	u327
   508  0741  0000               	nop
   509  0742                     l847:
   510                           
   511                           ;newmain.c: 70:         PORTB = Number[counter/100%10];
   512  0742  300A               	movlw	10
   513  0743  00F8               	movwf	___lwmod@divisor
   514  0744  3000               	movlw	0
   515  0745  00F9               	movwf	___lwmod@divisor+1
   516  0746  3064               	movlw	100
   517  0747  00F0               	movwf	___lwdiv@divisor
   518  0748  3000               	movlw	0
   519  0749  00F1               	movwf	___lwdiv@divisor+1
   520  074A  1283               	bcf	3,5	;RP0=0, select bank0
   521  074B  1303               	bcf	3,6	;RP1=0, select bank0
   522  074C  0823               	movf	main@counter+1,w
   523  074D  00F3               	movwf	___lwdiv@dividend+1
   524  074E  0822               	movf	main@counter,w
   525  074F  00F2               	movwf	___lwdiv@dividend
   526  0750  120A  118A  2689  120A  118A  	fcall	___lwdiv
   527  0755  0871               	movf	?___lwdiv+1,w
   528  0756  00FB               	movwf	___lwmod@dividend+1
   529  0757  0870               	movf	?___lwdiv,w
   530  0758  00FA               	movwf	___lwmod@dividend
   531  0759  120A  118A  264F  120A  118A  	fcall	___lwmod
   532  075E  0878               	movf	?___lwmod,w
   533  075F  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   534  0760  0084               	movwf	4
   535  0761  120A  118A  2003  120A  118A  	fcall	stringdir
   536  0766  1283               	bcf	3,5	;RP0=0, select bank0
   537  0767  1303               	bcf	3,6	;RP1=0, select bank0
   538  0768  0086               	movwf	6	;volatile
   539  0769                     l849:
   540                           
   541                           ;newmain.c: 71:         PORTDbits.RD1 = 0;
   542  0769  1088               	bcf	8,1	;volatile
   543  076A                     l851:
   544                           
   545                           ;newmain.c: 72:         _delay((unsigned long)((1)*(20000000/4000.0)));
   546  076A  3007               	movlw	7
   547  076B  1283               	bcf	3,5	;RP0=0, select bank0
   548  076C  1303               	bcf	3,6	;RP1=0, select bank0
   549  076D  00A1               	movwf	??_main+1
   550  076E  307C               	movlw	124
   551  076F  00A0               	movwf	??_main
   552  0770                     u337:
   553  0770  0BA0               	decfsz	??_main,f
   554  0771  2F70               	goto	u337
   555  0772  0BA1               	decfsz	??_main+1,f
   556  0773  2F70               	goto	u337
   557  0774  0000               	nop
   558  0775                     l853:
   559                           
   560                           ;newmain.c: 73:         PORTDbits.RD1 = 1;
   561  0775  1283               	bcf	3,5	;RP0=0, select bank0
   562  0776  1303               	bcf	3,6	;RP1=0, select bank0
   563  0777  1488               	bsf	8,1	;volatile
   564  0778                     l855:
   565                           
   566                           ;newmain.c: 74:         _delay((unsigned long)((1)*(20000000/4000.0)));
   567  0778  3007               	movlw	7
   568  0779  1283               	bcf	3,5	;RP0=0, select bank0
   569  077A  1303               	bcf	3,6	;RP1=0, select bank0
   570  077B  00A1               	movwf	??_main+1
   571  077C  307C               	movlw	124
   572  077D  00A0               	movwf	??_main
   573  077E                     u347:
   574  077E  0BA0               	decfsz	??_main,f
   575  077F  2F7E               	goto	u347
   576  0780  0BA1               	decfsz	??_main+1,f
   577  0781  2F7E               	goto	u347
   578  0782  0000               	nop
   579  0783                     l857:
   580                           
   581                           ;newmain.c: 76:         PORTB = Number[counter/10%10];
   582  0783  300A               	movlw	10
   583  0784  00F8               	movwf	___lwmod@divisor
   584  0785  3000               	movlw	0
   585  0786  00F9               	movwf	___lwmod@divisor+1
   586  0787  300A               	movlw	10
   587  0788  00F0               	movwf	___lwdiv@divisor
   588  0789  3000               	movlw	0
   589  078A  00F1               	movwf	___lwdiv@divisor+1
   590  078B  1283               	bcf	3,5	;RP0=0, select bank0
   591  078C  1303               	bcf	3,6	;RP1=0, select bank0
   592  078D  0823               	movf	main@counter+1,w
   593  078E  00F3               	movwf	___lwdiv@dividend+1
   594  078F  0822               	movf	main@counter,w
   595  0790  00F2               	movwf	___lwdiv@dividend
   596  0791  120A  118A  2689  120A  118A  	fcall	___lwdiv
   597  0796  0871               	movf	?___lwdiv+1,w
   598  0797  00FB               	movwf	___lwmod@dividend+1
   599  0798  0870               	movf	?___lwdiv,w
   600  0799  00FA               	movwf	___lwmod@dividend
   601  079A  120A  118A  264F  120A  118A  	fcall	___lwmod
   602  079F  0878               	movf	?___lwmod,w
   603  07A0  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   604  07A1  0084               	movwf	4
   605  07A2  120A  118A  2003  120A  118A  	fcall	stringdir
   606  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   607  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   608  07A9  0086               	movwf	6	;volatile
   609  07AA                     l859:
   610                           
   611                           ;newmain.c: 77:         PORTDbits.RD2 = 0;
   612  07AA  1108               	bcf	8,2	;volatile
   613  07AB                     l861:
   614                           
   615                           ;newmain.c: 78:         _delay((unsigned long)((1)*(20000000/4000.0)));
   616  07AB  3007               	movlw	7
   617  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   618  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   619  07AE  00A1               	movwf	??_main+1
   620  07AF  307C               	movlw	124
   621  07B0  00A0               	movwf	??_main
   622  07B1                     u357:
   623  07B1  0BA0               	decfsz	??_main,f
   624  07B2  2FB1               	goto	u357
   625  07B3  0BA1               	decfsz	??_main+1,f
   626  07B4  2FB1               	goto	u357
   627  07B5  0000               	nop
   628  07B6                     l863:
   629                           
   630                           ;newmain.c: 79:         PORTDbits.RD2 = 1;
   631  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   632  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   633  07B8  1508               	bsf	8,2	;volatile
   634  07B9                     l865:
   635                           
   636                           ;newmain.c: 80:         _delay((unsigned long)((1)*(20000000/4000.0)));
   637  07B9  3007               	movlw	7
   638  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   639  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   640  07BC  00A1               	movwf	??_main+1
   641  07BD  307C               	movlw	124
   642  07BE  00A0               	movwf	??_main
   643  07BF                     u367:
   644  07BF  0BA0               	decfsz	??_main,f
   645  07C0  2FBF               	goto	u367
   646  07C1  0BA1               	decfsz	??_main+1,f
   647  07C2  2FBF               	goto	u367
   648  07C3  0000               	nop
   649  07C4                     l867:
   650                           
   651                           ;newmain.c: 82:         PORTB = Number[counter%10];
   652  07C4  300A               	movlw	10
   653  07C5  00F8               	movwf	___lwmod@divisor
   654  07C6  3000               	movlw	0
   655  07C7  00F9               	movwf	___lwmod@divisor+1
   656  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   657  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   658  07CA  0823               	movf	main@counter+1,w
   659  07CB  00FB               	movwf	___lwmod@dividend+1
   660  07CC  0822               	movf	main@counter,w
   661  07CD  00FA               	movwf	___lwmod@dividend
   662  07CE  120A  118A  264F  120A  118A  	fcall	___lwmod
   663  07D3  0878               	movf	?___lwmod,w
   664  07D4  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   665  07D5  0084               	movwf	4
   666  07D6  120A  118A  2003  120A  118A  	fcall	stringdir
   667  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   668  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   669  07DD  0086               	movwf	6	;volatile
   670  07DE                     l869:
   671                           
   672                           ;newmain.c: 83:         PORTDbits.RD3 = 0;
   673  07DE  1188               	bcf	8,3	;volatile
   674  07DF                     l871:
   675                           
   676                           ;newmain.c: 84:         _delay((unsigned long)((1)*(20000000/4000.0)));
   677  07DF  3007               	movlw	7
   678  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   679  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   680  07E2  00A1               	movwf	??_main+1
   681  07E3  307C               	movlw	124
   682  07E4  00A0               	movwf	??_main
   683  07E5                     u377:
   684  07E5  0BA0               	decfsz	??_main,f
   685  07E6  2FE5               	goto	u377
   686  07E7  0BA1               	decfsz	??_main+1,f
   687  07E8  2FE5               	goto	u377
   688  07E9  0000               	nop
   689  07EA                     l873:
   690                           
   691                           ;newmain.c: 85:         PORTDbits.RD3 = 1;
   692  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   693  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   694  07EC  1588               	bsf	8,3	;volatile
   695  07ED                     l875:
   696                           
   697                           ;newmain.c: 86:         _delay((unsigned long)((1)*(20000000/4000.0)));
   698  07ED  3007               	movlw	7
   699  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   700  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   701  07F0  00A1               	movwf	??_main+1
   702  07F1  307C               	movlw	124
   703  07F2  00A0               	movwf	??_main
   704  07F3                     u387:
   705  07F3  0BA0               	decfsz	??_main,f
   706  07F4  2FF3               	goto	u387
   707  07F5  0BA1               	decfsz	??_main+1,f
   708  07F6  2FF3               	goto	u387
   709  07F7  0000               	nop
   710  07F8  2EEA               	goto	l823
   711  07F9  120A  118A  2800   	ljmp	start
   712  07FC                     __end_of_main:
   713                           
   714                           	psect	text1
   715  064F                     __ptext1:	
   716 ;; *************** function ___lwmod *****************
   717 ;; Defined at:
   718 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  divisor         2    8[COMMON] unsigned int 
   721 ;;  dividend        2   10[COMMON] unsigned int 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  counter         1   13[COMMON] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  2    8[COMMON] unsigned int 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         4       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          1       0       0       0       0
   736 ;;      Totals:         6       0       0       0       0
   737 ;;Total ram usage:        6 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function ___lwmod
   748  064F                     ___lwmod:
   749  064F                     l777:	
   750                           ;incstack = 0
   751                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   752                           
   753  064F  0878               	movf	___lwmod@divisor,w
   754  0650  0479               	iorwf	___lwmod@divisor+1,w
   755  0651  1903               	btfsc	3,2
   756  0652  2E54               	goto	u231
   757  0653  2E55               	goto	u230
   758  0654                     u231:
   759  0654  2E84               	goto	l795
   760  0655                     u230:
   761  0655                     l779:
   762  0655  01FD               	clrf	___lwmod@counter
   763  0656  0AFD               	incf	___lwmod@counter,f
   764  0657  2E63               	goto	l785
   765  0658                     l781:
   766  0658  3001               	movlw	1
   767  0659                     u245:
   768  0659  1003               	clrc
   769  065A  0DF8               	rlf	___lwmod@divisor,f
   770  065B  0DF9               	rlf	___lwmod@divisor+1,f
   771  065C  3EFF               	addlw	-1
   772  065D  1D03               	skipz
   773  065E  2E59               	goto	u245
   774  065F                     l783:
   775  065F  3001               	movlw	1
   776  0660  00FC               	movwf	??___lwmod
   777  0661  087C               	movf	??___lwmod,w
   778  0662  07FD               	addwf	___lwmod@counter,f
   779  0663                     l785:
   780  0663  1FF9               	btfss	___lwmod@divisor+1,7
   781  0664  2E66               	goto	u251
   782  0665  2E67               	goto	u250
   783  0666                     u251:
   784  0666  2E58               	goto	l781
   785  0667                     u250:
   786  0667                     l787:
   787  0667  0879               	movf	___lwmod@divisor+1,w
   788  0668  027B               	subwf	___lwmod@dividend+1,w
   789  0669  1D03               	skipz
   790  066A  2E6D               	goto	u265
   791  066B  0878               	movf	___lwmod@divisor,w
   792  066C  027A               	subwf	___lwmod@dividend,w
   793  066D                     u265:
   794  066D  1C03               	skipc
   795  066E  2E70               	goto	u261
   796  066F  2E71               	goto	u260
   797  0670                     u261:
   798  0670  2E77               	goto	l791
   799  0671                     u260:
   800  0671                     l789:
   801  0671  0878               	movf	___lwmod@divisor,w
   802  0672  02FA               	subwf	___lwmod@dividend,f
   803  0673  0879               	movf	___lwmod@divisor+1,w
   804  0674  1C03               	skipc
   805  0675  03FB               	decf	___lwmod@dividend+1,f
   806  0676  02FB               	subwf	___lwmod@dividend+1,f
   807  0677                     l791:
   808  0677  3001               	movlw	1
   809  0678                     u275:
   810  0678  1003               	clrc
   811  0679  0CF9               	rrf	___lwmod@divisor+1,f
   812  067A  0CF8               	rrf	___lwmod@divisor,f
   813  067B  3EFF               	addlw	-1
   814  067C  1D03               	skipz
   815  067D  2E78               	goto	u275
   816  067E                     l793:
   817  067E  3001               	movlw	1
   818  067F  02FD               	subwf	___lwmod@counter,f
   819  0680  1D03               	btfss	3,2
   820  0681  2E83               	goto	u281
   821  0682  2E84               	goto	u280
   822  0683                     u281:
   823  0683  2E67               	goto	l787
   824  0684                     u280:
   825  0684                     l795:
   826  0684  087B               	movf	___lwmod@dividend+1,w
   827  0685  00F9               	movwf	?___lwmod+1
   828  0686  087A               	movf	___lwmod@dividend,w
   829  0687  00F8               	movwf	?___lwmod
   830  0688                     l401:
   831  0688  0008               	return
   832  0689                     __end_of___lwmod:
   833                           
   834                           	psect	text2
   835  0689                     __ptext2:	
   836 ;; *************** function ___lwdiv *****************
   837 ;; Defined at:
   838 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  divisor         2    0[COMMON] unsigned int 
   841 ;;  dividend        2    2[COMMON] unsigned int 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  quotient        2    5[COMMON] unsigned int 
   844 ;;  counter         1    7[COMMON] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    0[COMMON] unsigned int 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         4       0       0       0       0
   855 ;;      Locals:         3       0       0       0       0
   856 ;;      Temps:          1       0       0       0       0
   857 ;;      Totals:         8       0       0       0       0
   858 ;;Total ram usage:        8 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function ___lwdiv
   869  0689                     ___lwdiv:
   870  0689                     l751:	
   871                           ;incstack = 0
   872                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   873                           
   874  0689  01F5               	clrf	___lwdiv@quotient
   875  068A  01F6               	clrf	___lwdiv@quotient+1
   876  068B                     l753:
   877  068B  0870               	movf	___lwdiv@divisor,w
   878  068C  0471               	iorwf	___lwdiv@divisor+1,w
   879  068D  1903               	btfsc	3,2
   880  068E  2E90               	goto	u161
   881  068F  2E91               	goto	u160
   882  0690                     u161:
   883  0690  2EC8               	goto	l773
   884  0691                     u160:
   885  0691                     l755:
   886  0691  01F7               	clrf	___lwdiv@counter
   887  0692  0AF7               	incf	___lwdiv@counter,f
   888  0693  2E9F               	goto	l761
   889  0694                     l757:
   890  0694  3001               	movlw	1
   891  0695                     u175:
   892  0695  1003               	clrc
   893  0696  0DF0               	rlf	___lwdiv@divisor,f
   894  0697  0DF1               	rlf	___lwdiv@divisor+1,f
   895  0698  3EFF               	addlw	-1
   896  0699  1D03               	skipz
   897  069A  2E95               	goto	u175
   898  069B                     l759:
   899  069B  3001               	movlw	1
   900  069C  00F4               	movwf	??___lwdiv
   901  069D  0874               	movf	??___lwdiv,w
   902  069E  07F7               	addwf	___lwdiv@counter,f
   903  069F                     l761:
   904  069F  1FF1               	btfss	___lwdiv@divisor+1,7
   905  06A0  2EA2               	goto	u181
   906  06A1  2EA3               	goto	u180
   907  06A2                     u181:
   908  06A2  2E94               	goto	l757
   909  06A3                     u180:
   910  06A3                     l763:
   911  06A3  3001               	movlw	1
   912  06A4                     u195:
   913  06A4  1003               	clrc
   914  06A5  0DF5               	rlf	___lwdiv@quotient,f
   915  06A6  0DF6               	rlf	___lwdiv@quotient+1,f
   916  06A7  3EFF               	addlw	-1
   917  06A8  1D03               	skipz
   918  06A9  2EA4               	goto	u195
   919  06AA  0871               	movf	___lwdiv@divisor+1,w
   920  06AB  0273               	subwf	___lwdiv@dividend+1,w
   921  06AC  1D03               	skipz
   922  06AD  2EB0               	goto	u205
   923  06AE  0870               	movf	___lwdiv@divisor,w
   924  06AF  0272               	subwf	___lwdiv@dividend,w
   925  06B0                     u205:
   926  06B0  1C03               	skipc
   927  06B1  2EB3               	goto	u201
   928  06B2  2EB4               	goto	u200
   929  06B3                     u201:
   930  06B3  2EBB               	goto	l769
   931  06B4                     u200:
   932  06B4                     l765:
   933  06B4  0870               	movf	___lwdiv@divisor,w
   934  06B5  02F2               	subwf	___lwdiv@dividend,f
   935  06B6  0871               	movf	___lwdiv@divisor+1,w
   936  06B7  1C03               	skipc
   937  06B8  03F3               	decf	___lwdiv@dividend+1,f
   938  06B9  02F3               	subwf	___lwdiv@dividend+1,f
   939  06BA                     l767:
   940  06BA  1475               	bsf	___lwdiv@quotient,0
   941  06BB                     l769:
   942  06BB  3001               	movlw	1
   943  06BC                     u215:
   944  06BC  1003               	clrc
   945  06BD  0CF1               	rrf	___lwdiv@divisor+1,f
   946  06BE  0CF0               	rrf	___lwdiv@divisor,f
   947  06BF  3EFF               	addlw	-1
   948  06C0  1D03               	skipz
   949  06C1  2EBC               	goto	u215
   950  06C2                     l771:
   951  06C2  3001               	movlw	1
   952  06C3  02F7               	subwf	___lwdiv@counter,f
   953  06C4  1D03               	btfss	3,2
   954  06C5  2EC7               	goto	u221
   955  06C6  2EC8               	goto	u220
   956  06C7                     u221:
   957  06C7  2EA3               	goto	l763
   958  06C8                     u220:
   959  06C8                     l773:
   960  06C8  0876               	movf	___lwdiv@quotient+1,w
   961  06C9  00F1               	movwf	?___lwdiv+1
   962  06CA  0875               	movf	___lwdiv@quotient,w
   963  06CB  00F0               	movwf	?___lwdiv
   964  06CC                     l391:
   965  06CC  0008               	return
   966  06CD                     __end_of___lwdiv:
   967  007E                     btemp	set	126	;btemp
   968  007E                     wtemp0	set	126
   969                           
   970                           	psect	config
   971                           
   972                           ;Config register CONFIG @ 0x2007
   973                           ;	Oscillator Selection bits
   974                           ;	FOSC = HS, HS oscillator
   975                           ;	Watchdog Timer Enable bit
   976                           ;	WDTE = OFF, WDT disabled
   977                           ;	Power-up Timer Enable bit
   978                           ;	PWRTE = OFF, PWRT disabled
   979                           ;	Brown-out Reset Enable bit
   980                           ;	BOREN = OFF, BOR disabled
   981                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   982                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   983                           ;	Data EEPROM Memory Code Protection bit
   984                           ;	CPD = OFF, Data EEPROM code protection off
   985                           ;	Flash Program Memory Write Enable bits
   986                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   987                           ;	In-Circuit Debugger Mode bit
   988                           ;	DEBUG = 0x1, unprogrammed default
   989                           ;	Flash Program Memory Code Protection bit
   990                           ;	CP = OFF, Code protection off
   991  2007                     	org	8199
   992  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1347
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     615
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 23 22:12:19 2022

                      pc 0002                       fsr 0004                      l401 0688  
                    l391 06CC                      l801 06D5                      l811 06E2  
                    l803 06D6                      l821 06E9                      l813 06E5  
                    l805 06D9                      l751 0689                      l831 070A  
                    l823 06EA                      l815 06E6                      l807 06DC  
                    l761 069F                      l753 068B                      l841 0729  
                    l833 070C                      l825 06F3                      l817 06E7  
                    l809 06DF                      l771 06C2                      l763 06A3  
                    l755 0691                      l851 076A                      l843 0734  
                    l835 070F                      l827 06FA                      l819 06E8  
                    l765 06B4                      l757 0694                      l773 06C8  
                    l781 0658                      l861 07AB                      l853 0775  
                    l845 0737                      l837 0710                      l829 0701  
                    l767 06BA                      l759 069B                      l791 0677  
                    l783 065F                      l871 07DF                      l863 07B6  
                    l855 0778                      l847 0742                      l839 0728  
                    l769 06BB                      l793 067E                      l785 0663  
                    l777 064F                      l873 07EA                      l865 07B9  
                    l857 0783                      l849 0769                      l787 0667  
                    l779 0655                      l795 0684                      l875 07ED  
                    l867 07C4                      l859 07AA                      l789 0671  
                    l869 07DE                      l799 06CD                      u200 06B4  
                    u201 06B3                      u220 06C8                      u300 070A  
                    u221 06C7                      u205 06B0                      u301 0709  
                    u230 0655                      u215 06BC                      u231 0654  
                    u160 0691                      u161 0690                      u250 0667  
                    u251 0666                      u180 06A3                      u260 0671  
                    u181 06A2                      u261 0670                      u245 0659  
                    u317 072F                      u175 0695                      u327 073D  
                    u280 0684                      u281 0683                      u265 066D  
                    u337 0770                      u195 06A4                      u275 0678  
                    u347 077E                      u357 07B1                      u367 07BF  
                    u295 06F4                      u377 07E5                      u387 07F3  
                    fsr0 0004              main@counter 0022                     _main 06CD  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lwdiv 06CD          __end_of___lwmod 0689                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0020                   _ADCON1 009F  
                 _Number 0009                ??___lwdiv 0074                ??___lwmod 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 06CD  
             __stringtab 0003                  ___lwdiv 0689                  ___lwmod 064F  
                __ptext1 064F                  __ptext2 0689                _T1CONbits 0010  
   end_of_initialization 07FC                _PORTDbits 0008           __end_of_Number 0013  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0003         ___lwdiv@quotient 0075                 _PIE1bits 008C  
            __stringbase 0008         __size_of___lwdiv 0044         __size_of___lwmod 003A  
     __end_of__stringtab 0009          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 012F         ___lwmod@dividend 007A                stringcode 0003  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 0003  
               stringtab 0003  

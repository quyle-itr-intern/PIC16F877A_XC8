

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 24 22:33:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.32
    39                           ; Generated 02/02/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	strings
   375  045F                     __pstrings:
   376  045F                     stringtab:
   377  045F                     __stringtab:
   378  045F                     stringcode:	
   379                           ;	String table - string pointers are 1 byte each
   380                           
   381  045F                     stringdir:
   382  045F  3004               	movlw	high stringdir
   383  0460  008A               	movwf	10
   384  0461  0804               	movf	4,w
   385  0462  0A84               	incf	4,f
   386  0463  0782               	addwf	2,f
   387  0464                     __stringbase:
   388  0464  3400               	retlw	0
   389  0465                     __end_of__stringtab:
   390  0465                     _dpowers:
   391  0465  3401               	retlw	1
   392  0466  3400               	retlw	0
   393  0467  340A               	retlw	10
   394  0468  3400               	retlw	0
   395  0469  3464               	retlw	100
   396  046A  3400               	retlw	0
   397  046B  34E8               	retlw	232
   398  046C  3403               	retlw	3
   399  046D  3410               	retlw	16
   400  046E  3427               	retlw	39
   401  046F                     __end_of_dpowers:
   402  001A                     _RCREG	set	26
   403  0019                     _TXREG	set	25
   404  0011                     _TMR2	set	17
   405  0012                     _T2CONbits	set	18
   406  0008                     _PORTDbits	set	8
   407  0006                     _PORTBbits	set	6
   408  000B                     _INTCONbits	set	11
   409  0013                     _SSPBUF	set	19
   410  000C                     _PIR1bits	set	12
   411  0014                     _SSPCONbits	set	20
   412  0014                     _SSPCON	set	20
   413  0065                     _RCIF	set	101
   414  00C4                     _CREN	set	196
   415  00C7                     _SPEN	set	199
   416  0099                     _SPBRG	set	153
   417  0088                     _TRISDbits	set	136
   418  0086                     _TRISBbits	set	134
   419  0092                     _PR2	set	146
   420  008C                     _PIE1bits	set	140
   421  0091                     _SSPCON2bits	set	145
   422  0093                     _SSPADD	set	147
   423  0094                     _SSPSTATbits	set	148
   424  0091                     _SSPCON2	set	145
   425  0087                     _TRISCbits	set	135
   426  04C1                     _TRMT	set	1217
   427  0465                     _RCIE	set	1125
   428  04C5                     _TXEN	set	1221
   429  046F                     STR_1:
   430  046F  3420               	retlw	32	;' '
   431  0470  3441               	retlw	65	;'A'
   432  0471  3478               	retlw	120	;'x'
   433  0472  3420               	retlw	32	;' '
   434  0473  343D               	retlw	61	;'='
   435  0474  3420               	retlw	32	;' '
   436  0475  3425               	retlw	37	;'%'
   437  0476  3464               	retlw	100	;'d'
   438  0477  3420               	retlw	32	;' '
   439  0478  3420               	retlw	32	;' '
   440  0479  3420               	retlw	32	;' '
   441  047A  3420               	retlw	32	;' '
   442  047B  340A               	retlw	10
   443  047C  3400               	retlw	0
   444                           
   445                           	psect	cinit
   446  000F                     start_initialization:	
   447                           ; #config settings
   448                           
   449  000F                     __initialization:
   450                           
   451                           ; Clear objects allocated to COMMON
   452  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   453  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   454                           
   455                           ; Clear objects allocated to BANK0
   456  0011  1383               	bcf	3,7	;select IRP bank0
   457  0012  305F               	movlw	low __pbssBANK0
   458  0013  0084               	movwf	4
   459  0014  3070               	movlw	low (__pbssBANK0+17)
   460  0015  120A  118A  2533  120A  118A  	fcall	clear_ram0
   461                           
   462                           ; Clear objects allocated to BANK1
   463  001A  30A0               	movlw	low __pbssBANK1
   464  001B  0084               	movwf	4
   465  001C  30D6               	movlw	low (__pbssBANK1+54)
   466  001D  120A  118A  2533  120A  118A  	fcall	clear_ram0
   467  0022                     end_of_initialization:	
   468                           ;End of C runtime variable initialization code
   469                           
   470  0022                     __end_of__initialization:
   471  0022  0183               	clrf	3
   472  0023  120A  118A  2A25   	ljmp	_main	;jump to C main() function
   473                           
   474                           	psect	bssCOMMON
   475  007A                     __pbssCOMMON:
   476  007A                     _Count1_timer0:
   477  007A                     	ds	2
   478                           
   479                           	psect	bssBANK0
   480  005F                     __pbssBANK0:
   481  005F                     _Step1:
   482  005F                     	ds	4
   483  0063                     _Count_BOT2:
   484  0063                     	ds	2
   485  0065                     _Count_TOP2:
   486  0065                     	ds	2
   487  0067                     _Count_BOT1:
   488  0067                     	ds	2
   489  0069                     _Count_TOP1:
   490  0069                     	ds	2
   491  006B                     _Count2_timer0:
   492  006B                     	ds	2
   493  006D                     _Dir_M2:
   494  006D                     	ds	1
   495  006E                     _Dir_M1:
   496  006E                     	ds	1
   497  006F                     _rx_index:
   498  006F                     	ds	1
   499                           
   500                           	psect	bssBANK1
   501  00A0                     __pbssBANK1:
   502  00A0                     _Step2:
   503  00A0                     	ds	4
   504  00A4                     _RX_Buffer:
   505  00A4                     	ds	50
   506                           
   507                           	psect	clrtext
   508  0533                     clear_ram0:	
   509                           ;	Called with FSR containing the base address, and
   510                           ;	W with the last address+1
   511                           
   512  0533  0064               	clrwdt	;clear the watchdog before getting into this loop
   513  0534                     clrloop0:
   514  0534  0180               	clrf	0	;clear RAM location pointed to by FSR
   515  0535  0A84               	incf	4,f	;increment pointer
   516  0536  0604               	xorwf	4,w	;XOR with final address
   517  0537  1903               	btfsc	3,2	;have we reached the end yet?
   518  0538  3400               	retlw	0	;all done for this memory range, return
   519  0539  0604               	xorwf	4,w	;XOR again to restore value
   520  053A  2D34               	goto	clrloop0	;do the next byte
   521                           
   522                           	psect	cstackCOMMON
   523  0070                     __pcstackCOMMON:
   524  0070                     ?_UART_Transmit_Text:
   525  0070                     ?_UART_Init:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_I2C_Init:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_I2C_Idle:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_I2C_Start:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_I2C_Stop:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_I2C_Read:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_I2C_Write:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_MPU6050_Init:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_MPU6050_Readvalue:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_Step:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ??_Step:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_main:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_ISR:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_ISR:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_UART_Transmit:	
   568                           ; 1 bytes @ 0x0
   569                           
   570                           
   571                           ; 1 bytes @ 0x0
   572  0070                     	ds	2
   573  0072                     ??_UART_Init:
   574  0072                     ??_I2C_Init:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ??_I2C_Idle:	
   578                           ; 1 bytes @ 0x2
   579                           
   580  0072                     ??_UART_Transmit:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     ?___awdiv:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     ?___lwdiv:	
   587                           ; 2 bytes @ 0x2
   588                           
   589  0072                     UART_Transmit@c:	
   590                           ; 2 bytes @ 0x2
   591                           
   592  0072                     ___awdiv@divisor:	
   593                           ; 1 bytes @ 0x2
   594                           
   595  0072                     ___lwdiv@divisor:	
   596                           ; 2 bytes @ 0x2
   597                           
   598                           
   599                           ; 2 bytes @ 0x2
   600  0072                     	ds	1
   601  0073                     ??_UART_Transmit_Text:
   602                           
   603                           ; 1 bytes @ 0x3
   604  0073                     	ds	1
   605  0074                     UART_Transmit_Text@i:
   606  0074                     ___awdiv@dividend:	
   607                           ; 1 bytes @ 0x4
   608                           
   609  0074                     ___lwdiv@dividend:	
   610                           ; 2 bytes @ 0x4
   611                           
   612                           
   613                           ; 2 bytes @ 0x4
   614  0074                     	ds	1
   615  0075                     ??_I2C_Start:
   616  0075                     ??_I2C_Stop:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0075                     ??_I2C_Read:	
   620                           ; 1 bytes @ 0x5
   621                           
   622  0075                     ??_I2C_Write:	
   623                           ; 1 bytes @ 0x5
   624                           
   625  0075                     I2C_Write@Tvalue:	
   626                           ; 1 bytes @ 0x5
   627                           
   628  0075                     UART_Transmit_Text@str:	
   629                           ; 1 bytes @ 0x5
   630                           
   631                           
   632                           ; 1 bytes @ 0x5
   633  0075                     	ds	1
   634  0076                     ?_MPU6050_Write:
   635  0076                     ??___awdiv:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0076                     ??___lwdiv:	
   639                           ; 1 bytes @ 0x6
   640                           
   641  0076                     I2C_Read@Rvalue:	
   642                           ; 1 bytes @ 0x6
   643                           
   644  0076                     MPU6050_Write@data:	
   645                           ; 1 bytes @ 0x6
   646                           
   647                           
   648                           ; 1 bytes @ 0x6
   649  0076                     	ds	1
   650  0077                     ??_MPU6050_Write:
   651  0077                     ??_Speed_M1:	
   652                           ; 1 bytes @ 0x7
   653                           
   654  0077                     ??_Speed_M2:	
   655                           ; 1 bytes @ 0x7
   656                           
   657  0077                     I2C_Read@ACK:	
   658                           ; 1 bytes @ 0x7
   659                           
   660  0077                     MPU6050_Write@add:	
   661                           ; 1 bytes @ 0x7
   662                           
   663  0077                     ___lwdiv@quotient:	
   664                           ; 1 bytes @ 0x7
   665                           
   666                           
   667                           ; 2 bytes @ 0x7
   668  0077                     	ds	1
   669  0078                     ?_MPU6050_Read:
   670                           
   671                           ; 2 bytes @ 0x8
   672  0078                     	ds	1
   673  0079                     ___lwdiv@counter:
   674                           
   675                           ; 1 bytes @ 0x9
   676  0079                     	ds	1
   677  007A                     ??_main:
   678                           
   679                           	psect	cstackBANK0
   680  0020                     __pcstackBANK0:	
   681                           ; 1 bytes @ 0xA
   682                           
   683  0020                     ??_MPU6050_Read:
   684  0020                     ??_MPU6050_Init:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0020                     ?___lwmod:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     ___awdiv@counter:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0020                     ___lwmod@divisor:	
   694                           ; 1 bytes @ 0x0
   695                           
   696                           
   697                           ; 2 bytes @ 0x0
   698  0020                     	ds	1
   699  0021                     ___awdiv@sign:
   700                           
   701                           ; 1 bytes @ 0x1
   702  0021                     	ds	1
   703  0022                     MPU6050_Read@add:
   704  0022                     ___awdiv@quotient:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0022                     ___lwmod@dividend:	
   708                           ; 2 bytes @ 0x2
   709                           
   710                           
   711                           ; 2 bytes @ 0x2
   712  0022                     	ds	1
   713  0023                     MPU6050_Read@retval:
   714                           
   715                           ; 2 bytes @ 0x3
   716  0023                     	ds	1
   717  0024                     ?_Speed_M1:
   718  0024                     ?_Speed_M2:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0024                     ??___lwmod:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0024                     Speed_M1@x:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0024                     Speed_M2@x:	
   728                           ; 2 bytes @ 0x4
   729                           
   730                           
   731                           ; 2 bytes @ 0x4
   732  0024                     	ds	1
   733  0025                     ___lwmod@counter:
   734                           
   735                           ; 1 bytes @ 0x5
   736  0025                     	ds	1
   737  0026                     ?_sprintf:
   738  0026                     sprintf@f:	
   739                           ; 2 bytes @ 0x6
   740                           
   741                           
   742                           ; 1 bytes @ 0x6
   743  0026                     	ds	3
   744  0029                     ??_sprintf:
   745                           
   746                           ; 1 bytes @ 0x9
   747  0029                     	ds	3
   748  002C                     sprintf@ap:
   749                           
   750                           ; 1 bytes @ 0xC
   751  002C                     	ds	1
   752  002D                     sprintf@flag:
   753                           
   754                           ; 1 bytes @ 0xD
   755  002D                     	ds	1
   756  002E                     sprintf@prec:
   757                           
   758                           ; 1 bytes @ 0xE
   759  002E                     	ds	1
   760  002F                     sprintf@val:
   761                           
   762                           ; 2 bytes @ 0xF
   763  002F                     	ds	2
   764  0031                     sprintf@sp:
   765                           
   766                           ; 1 bytes @ 0x11
   767  0031                     	ds	1
   768  0032                     sprintf@c:
   769                           
   770                           ; 1 bytes @ 0x12
   771  0032                     	ds	1
   772  0033                     ??_MPU6050_Readvalue:
   773                           
   774                           ; 1 bytes @ 0x13
   775  0033                     	ds	2
   776  0035                     MPU6050_Readvalue@buffer:
   777                           
   778                           ; 40 bytes @ 0x15
   779  0035                     	ds	40
   780  005D                     MPU6050_Readvalue@Ax:
   781                           
   782                           ; 2 bytes @ 0x3D
   783  005D                     	ds	2
   784                           
   785                           	psect	maintext
   786  0225                     __pmaintext:	
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 113 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : B00/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels required when called: 6
   812 ;; This function calls:
   813 ;;		_MPU6050_Init
   814 ;;		_MPU6050_Readvalue
   815 ;;		_Speed_M1
   816 ;;		_Speed_M2
   817 ;;		_UART_Init
   818 ;; This function is called by:
   819 ;;		Startup code after reset
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _main
   825  0225                     _main:
   826  0225                     l1969:	
   827                           ;incstack = 0
   828                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   829                           
   830                           
   831                           ;main.c: 115:     MPU6050_Init();
   832  0225  120A  118A  2343  120A  118A  	fcall	_MPU6050_Init
   833                           
   834                           ;main.c: 116:     UART_Init();
   835  022A  120A  118A  24EB  120A  118A  	fcall	_UART_Init
   836  022F                     l1971:
   837                           
   838                           ;main.c: 127:     T2CONbits.T2CKPS1 = 0;
   839  022F  1283               	bcf	3,5	;RP0=0, select bank0
   840  0230  1303               	bcf	3,6	;RP1=0, select bank0
   841  0231  1092               	bcf	18,1	;volatile
   842  0232                     l1973:
   843                           
   844                           ;main.c: 128:     T2CONbits.T2CKPS0 = 0;
   845  0232  1012               	bcf	18,0	;volatile
   846  0233                     l1975:
   847                           
   848                           ;main.c: 130:     PIR1bits.TMR2IF = 0;
   849  0233  108C               	bcf	12,1	;volatile
   850  0234                     l1977:
   851                           
   852                           ;main.c: 131:     PIE1bits.TMR2IE = 1;
   853  0234  1683               	bsf	3,5	;RP0=1, select bank1
   854  0235  1303               	bcf	3,6	;RP1=0, select bank1
   855  0236  148C               	bsf	12,1	;volatile
   856  0237                     l1979:
   857                           
   858                           ;main.c: 132:     INTCONbits.GIE = 1;
   859  0237  178B               	bsf	11,7	;volatile
   860  0238                     l1981:
   861                           
   862                           ;main.c: 133:     INTCONbits.PEIE = 1;
   863  0238  170B               	bsf	11,6	;volatile
   864  0239                     l1983:
   865                           
   866                           ;main.c: 134:     PR2 = 9;
   867  0239  3009               	movlw	9
   868  023A  0092               	movwf	18	;volatile
   869  023B                     l1985:
   870                           
   871                           ;main.c: 135:     TMR2 = 0;
   872  023B  1283               	bcf	3,5	;RP0=0, select bank0
   873  023C  1303               	bcf	3,6	;RP1=0, select bank0
   874  023D  0191               	clrf	17	;volatile
   875  023E                     l1987:
   876                           
   877                           ;main.c: 136:     T2CONbits.TMR2ON = 1;
   878  023E  1512               	bsf	18,2	;volatile
   879  023F                     l1989:
   880                           
   881                           ;main.c: 138:     TRISBbits.TRISB4 = 0;
   882  023F  1683               	bsf	3,5	;RP0=1, select bank1
   883  0240  1303               	bcf	3,6	;RP1=0, select bank1
   884  0241  1206               	bcf	6,4	;volatile
   885  0242                     l1991:
   886                           
   887                           ;main.c: 139:     TRISBbits.TRISB3 = 0;
   888  0242  1186               	bcf	6,3	;volatile
   889  0243                     l1993:
   890                           
   891                           ;main.c: 140:     TRISDbits.TRISD6 = 0;
   892  0243  1308               	bcf	8,6	;volatile
   893  0244                     l1995:
   894                           
   895                           ;main.c: 142:     TRISBbits.TRISB1 = 0;
   896  0244  1086               	bcf	6,1	;volatile
   897  0245                     l1997:
   898                           
   899                           ;main.c: 143:     TRISBbits.TRISB0 = 0;
   900  0245  1006               	bcf	6,0	;volatile
   901  0246                     l1999:
   902                           
   903                           ;main.c: 144:     TRISDbits.TRISD7 = 0;
   904  0246  1388               	bcf	8,7	;volatile
   905  0247                     l2001:
   906                           
   907                           ;main.c: 146:     TRISBbits.TRISB5 = 0;
   908  0247  1286               	bcf	6,5	;volatile
   909  0248                     l2003:
   910                           
   911                           ;main.c: 147:     TRISBbits.TRISB6 = 0;
   912  0248  1306               	bcf	6,6	;volatile
   913  0249                     l2005:
   914                           
   915                           ;main.c: 148:     TRISBbits.TRISB7 = 0;
   916  0249  1386               	bcf	6,7	;volatile
   917  024A                     l2007:
   918                           
   919                           ;main.c: 150:     PORTBbits.RB5 = 1;
   920  024A  1283               	bcf	3,5	;RP0=0, select bank0
   921  024B  1303               	bcf	3,6	;RP1=0, select bank0
   922  024C  1686               	bsf	6,5	;volatile
   923  024D                     l2009:
   924                           
   925                           ;main.c: 151:     PORTBbits.RB6 = 1;
   926  024D  1706               	bsf	6,6	;volatile
   927  024E                     l2011:
   928                           
   929                           ;main.c: 152:     PORTBbits.RB7 = 1;
   930  024E  1786               	bsf	6,7	;volatile
   931  024F                     l2013:
   932                           
   933                           ;main.c: 154:     PORTBbits.RB4 = 0;
   934  024F  1206               	bcf	6,4	;volatile
   935  0250                     l2015:
   936                           
   937                           ;main.c: 155:     PORTBbits.RB1 = 0;
   938  0250  1086               	bcf	6,1	;volatile
   939  0251                     l2017:
   940                           
   941                           ;main.c: 161:     {;main.c: 162:         MPU6050_Readvalue();
   942  0251  120A  118A  2401  120A  118A  	fcall	_MPU6050_Readvalue
   943  0256                     l2019:
   944                           
   945                           ;main.c: 163:         Speed_M1(50);
   946  0256  3032               	movlw	50
   947  0257  1283               	bcf	3,5	;RP0=0, select bank0
   948  0258  1303               	bcf	3,6	;RP1=0, select bank0
   949  0259  00A4               	movwf	Speed_M1@x
   950  025A  3000               	movlw	0
   951  025B  00A5               	movwf	Speed_M1@x+1
   952  025C  120A  118A  21D3  120A  118A  	fcall	_Speed_M1
   953  0261                     l2021:
   954                           
   955                           ;main.c: 164:         Speed_M2(50);
   956  0261  3032               	movlw	50
   957  0262  1283               	bcf	3,5	;RP0=0, select bank0
   958  0263  1303               	bcf	3,6	;RP1=0, select bank0
   959  0264  00A4               	movwf	Speed_M2@x
   960  0265  3000               	movlw	0
   961  0266  00A5               	movwf	Speed_M2@x+1
   962  0267  120A  118A  2179  120A  118A  	fcall	_Speed_M2
   963  026C  2A51               	goto	l2017
   964  026D  120A  118A  280C   	ljmp	start
   965  0270                     __end_of_main:
   966                           
   967                           	psect	text1
   968  04EB                     __ptext1:	
   969 ;; *************** function _UART_Init *****************
   970 ;; Defined at:
   971 ;;		line 9 in file "UART.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 2
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _UART_Init
  1001  04EB                     _UART_Init:
  1002  04EB                     l1201:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _UART_Init: [wreg]
  1005                           
  1006                           
  1007                           ;UART.c: 11:     TRISCbits.TRISC6 = 0;
  1008  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  1009  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  1010  04ED  1307               	bcf	7,6	;volatile
  1011                           
  1012                           ;UART.c: 12:     TRISCbits.TRISC7 = 1;
  1013  04EE  1787               	bsf	7,7	;volatile
  1014  04EF                     l1203:
  1015                           
  1016                           ;UART.c: 14:     SPBRG = 32;
  1017  04EF  3020               	movlw	32
  1018  04F0  0099               	movwf	25	;volatile
  1019  04F1                     l1205:
  1020                           
  1021                           ;UART.c: 15:     SPEN = 1;
  1022  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1023  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1024  04F3  1798               	bsf	24,7	;volatile
  1025  04F4                     l1207:
  1026                           
  1027                           ;UART.c: 16:     TXEN = 1;
  1028  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1029  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1030  04F6  1698               	bsf	24,5	;volatile
  1031  04F7                     l1209:
  1032                           
  1033                           ;UART.c: 17:     CREN = 1;
  1034  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1035  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1036  04F9  1618               	bsf	24,4	;volatile
  1037  04FA                     l1211:
  1038                           
  1039                           ;UART.c: 18:     RCIE = 1;
  1040  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1041  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1042  04FC  168C               	bsf	12,5	;volatile
  1043  04FD                     l237:
  1044  04FD  0008               	return
  1045  04FE                     __end_of_UART_Init:
  1046                           
  1047                           	psect	text2
  1048  0179                     __ptext2:	
  1049 ;; *************** function _Speed_M2 *****************
  1050 ;; Defined at:
  1051 ;;		line 65 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  x               2    4[BANK0 ] int 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       2       0       0       0
  1066 ;;      Locals:         0       0       0       0       0
  1067 ;;      Temps:          2       0       0       0       0
  1068 ;;      Totals:         2       2       0       0       0
  1069 ;;Total ram usage:        4 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 3
  1072 ;; This function calls:
  1073 ;;		___awdiv
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _Speed_M2
  1081  0179                     _Speed_M2:
  1082  0179                     l1951:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _Speed_M2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1085                           
  1086                           
  1087                           ;main.c: 65: void Speed_M2(int16_t x);main.c: 66: {;main.c: 67:   if (x < 0)
  1088  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1089  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1090  017B  1FA5               	btfss	Speed_M2@x+1,7
  1091  017C  297E               	goto	u1491
  1092  017D  297F               	goto	u1490
  1093  017E                     u1491:
  1094  017E  29A1               	goto	l1959
  1095  017F                     u1490:
  1096  017F                     l1953:
  1097                           
  1098                           ;main.c: 68:   {;main.c: 69:     Dir_M2 = -1;
  1099  017F  01ED               	clrf	_Dir_M2
  1100  0180  03ED               	decf	_Dir_M2,f
  1101                           
  1102                           ;main.c: 70:     PORTBbits.RB0 = 0;
  1103  0181  1006               	bcf	6,0	;volatile
  1104  0182                     l1955:
  1105                           
  1106                           ;main.c: 71:     Count_BOT2 = -x;
  1107  0182  0924               	comf	Speed_M2@x,w
  1108  0183  00F7               	movwf	??_Speed_M2
  1109  0184  0925               	comf	Speed_M2@x+1,w
  1110  0185  00F8               	movwf	??_Speed_M2+1
  1111  0186  0AF7               	incf	??_Speed_M2,f
  1112  0187  1903               	skipnz
  1113  0188  0AF8               	incf	??_Speed_M2+1,f
  1114  0189  0877               	movf	??_Speed_M2,w
  1115  018A  00E3               	movwf	_Count_BOT2
  1116  018B  0878               	movf	??_Speed_M2+1,w
  1117  018C  00E4               	movwf	_Count_BOT2+1
  1118  018D                     l1957:
  1119                           
  1120                           ;main.c: 72:     Count_TOP2 = -x/2;
  1121  018D  30FE               	movlw	254
  1122  018E  00F2               	movwf	___awdiv@divisor
  1123  018F  30FF               	movlw	255
  1124  0190  00F3               	movwf	___awdiv@divisor+1
  1125  0191  0825               	movf	Speed_M2@x+1,w
  1126  0192  00F5               	movwf	___awdiv@dividend+1
  1127  0193  0824               	movf	Speed_M2@x,w
  1128  0194  00F4               	movwf	___awdiv@dividend
  1129  0195  120A  118A  2110  120A  118A  	fcall	___awdiv
  1130  019A  0873               	movf	?___awdiv+1,w
  1131  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1132  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1133  019D  00E6               	movwf	_Count_TOP2+1
  1134  019E  0872               	movf	?___awdiv,w
  1135  019F  00E5               	movwf	_Count_TOP2
  1136                           
  1137                           ;main.c: 73:   }
  1138  01A0  29D2               	goto	l181
  1139  01A1                     l1959:
  1140  01A1  0825               	movf	Speed_M2@x+1,w
  1141  01A2  3A80               	xorlw	128
  1142  01A3  00FF               	movwf	btemp+1
  1143  01A4  3080               	movlw	128
  1144  01A5  027F               	subwf	btemp+1,w
  1145  01A6  1D03               	skipz
  1146  01A7  29AA               	goto	u1505
  1147  01A8  3001               	movlw	1
  1148  01A9  0224               	subwf	Speed_M2@x,w
  1149  01AA                     u1505:
  1150  01AA  1C03               	skipc
  1151  01AB  29AD               	goto	u1501
  1152  01AC  29AE               	goto	u1500
  1153  01AD                     u1501:
  1154  01AD  29CB               	goto	l1967
  1155  01AE                     u1500:
  1156  01AE                     l1961:
  1157                           
  1158                           ;main.c: 75:   {;main.c: 76:     Dir_M2 = 1;
  1159  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1160  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1161  01B0  01ED               	clrf	_Dir_M2
  1162  01B1  0AED               	incf	_Dir_M2,f
  1163                           
  1164                           ;main.c: 77:     PORTBbits.RB0 = 1;
  1165  01B2  1406               	bsf	6,0	;volatile
  1166  01B3                     l1963:
  1167                           
  1168                           ;main.c: 78:     Count_BOT2 = x;
  1169  01B3  0825               	movf	Speed_M2@x+1,w
  1170  01B4  00E4               	movwf	_Count_BOT2+1
  1171  01B5  0824               	movf	Speed_M2@x,w
  1172  01B6  00E3               	movwf	_Count_BOT2
  1173  01B7                     l1965:
  1174                           
  1175                           ;main.c: 79:     Count_TOP2 = x/2;
  1176  01B7  3002               	movlw	2
  1177  01B8  00F2               	movwf	___awdiv@divisor
  1178  01B9  3000               	movlw	0
  1179  01BA  00F3               	movwf	___awdiv@divisor+1
  1180  01BB  0825               	movf	Speed_M2@x+1,w
  1181  01BC  00F5               	movwf	___awdiv@dividend+1
  1182  01BD  0824               	movf	Speed_M2@x,w
  1183  01BE  00F4               	movwf	___awdiv@dividend
  1184  01BF  120A  118A  2110  120A  118A  	fcall	___awdiv
  1185  01C4  0873               	movf	?___awdiv+1,w
  1186  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1187  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1188  01C7  00E6               	movwf	_Count_TOP2+1
  1189  01C8  0872               	movf	?___awdiv,w
  1190  01C9  00E5               	movwf	_Count_TOP2
  1191                           
  1192                           ;main.c: 80:   }
  1193  01CA  29D2               	goto	l181
  1194  01CB                     l1967:
  1195                           
  1196                           ;main.c: 82:   {;main.c: 83:     Dir_M2 = 0;
  1197  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1198  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1199  01CD  01ED               	clrf	_Dir_M2
  1200                           
  1201                           ;main.c: 84:     Count_BOT2 = 0;
  1202  01CE  01E3               	clrf	_Count_BOT2
  1203  01CF  01E4               	clrf	_Count_BOT2+1
  1204                           
  1205                           ;main.c: 85:     Count_TOP2 = 0;
  1206  01D0  01E5               	clrf	_Count_TOP2
  1207  01D1  01E6               	clrf	_Count_TOP2+1
  1208  01D2                     l181:
  1209  01D2  0008               	return
  1210  01D3                     __end_of_Speed_M2:
  1211                           
  1212                           	psect	text3
  1213  01D3                     __ptext3:	
  1214 ;; *************** function _Speed_M1 *****************
  1215 ;; Defined at:
  1216 ;;		line 41 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  x               2    4[BANK0 ] int 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       2       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          2       0       0       0       0
  1233 ;;      Totals:         2       2       0       0       0
  1234 ;;Total ram usage:        4 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 3
  1237 ;; This function calls:
  1238 ;;		___awdiv
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _Speed_M1
  1246  01D3                     _Speed_M1:
  1247  01D3                     l1933:	
  1248                           ;incstack = 0
  1249                           ; Regs used in _Speed_M1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1250                           
  1251                           
  1252                           ;main.c: 41: void Speed_M1(int16_t x);main.c: 42: {;main.c: 43:   if (x < 0)
  1253  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01D5  1FA5               	btfss	Speed_M1@x+1,7
  1256  01D6  29D8               	goto	u1471
  1257  01D7  29D9               	goto	u1470
  1258  01D8                     u1471:
  1259  01D8  29FB               	goto	l1941
  1260  01D9                     u1470:
  1261  01D9                     l1935:
  1262                           
  1263                           ;main.c: 44:   {;main.c: 45:     Dir_M1 = -1;
  1264  01D9  01EE               	clrf	_Dir_M1
  1265  01DA  03EE               	decf	_Dir_M1,f
  1266                           
  1267                           ;main.c: 46:     PORTBbits.RB3 = 0;
  1268  01DB  1186               	bcf	6,3	;volatile
  1269  01DC                     l1937:
  1270                           
  1271                           ;main.c: 47:     Count_BOT1 = -x;
  1272  01DC  0924               	comf	Speed_M1@x,w
  1273  01DD  00F7               	movwf	??_Speed_M1
  1274  01DE  0925               	comf	Speed_M1@x+1,w
  1275  01DF  00F8               	movwf	??_Speed_M1+1
  1276  01E0  0AF7               	incf	??_Speed_M1,f
  1277  01E1  1903               	skipnz
  1278  01E2  0AF8               	incf	??_Speed_M1+1,f
  1279  01E3  0877               	movf	??_Speed_M1,w
  1280  01E4  00E7               	movwf	_Count_BOT1
  1281  01E5  0878               	movf	??_Speed_M1+1,w
  1282  01E6  00E8               	movwf	_Count_BOT1+1
  1283  01E7                     l1939:
  1284                           
  1285                           ;main.c: 48:     Count_TOP1 = -x/2;
  1286  01E7  30FE               	movlw	254
  1287  01E8  00F2               	movwf	___awdiv@divisor
  1288  01E9  30FF               	movlw	255
  1289  01EA  00F3               	movwf	___awdiv@divisor+1
  1290  01EB  0825               	movf	Speed_M1@x+1,w
  1291  01EC  00F5               	movwf	___awdiv@dividend+1
  1292  01ED  0824               	movf	Speed_M1@x,w
  1293  01EE  00F4               	movwf	___awdiv@dividend
  1294  01EF  120A  118A  2110  120A  118A  	fcall	___awdiv
  1295  01F4  0873               	movf	?___awdiv+1,w
  1296  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01F7  00EA               	movwf	_Count_TOP1+1
  1299  01F8  0872               	movf	?___awdiv,w
  1300  01F9  00E9               	movwf	_Count_TOP1
  1301                           
  1302                           ;main.c: 49:   }
  1303  01FA  2A24               	goto	l174
  1304  01FB                     l1941:
  1305  01FB  0825               	movf	Speed_M1@x+1,w
  1306  01FC  3A80               	xorlw	128
  1307  01FD  00FF               	movwf	btemp+1
  1308  01FE  3080               	movlw	128
  1309  01FF  027F               	subwf	btemp+1,w
  1310  0200  1D03               	skipz
  1311  0201  2A04               	goto	u1485
  1312  0202  3001               	movlw	1
  1313  0203  0224               	subwf	Speed_M1@x,w
  1314  0204                     u1485:
  1315  0204  1C03               	skipc
  1316  0205  2A07               	goto	u1481
  1317  0206  2A08               	goto	u1480
  1318  0207                     u1481:
  1319  0207  2A1D               	goto	l1949
  1320  0208                     u1480:
  1321  0208                     l1943:
  1322                           
  1323                           ;main.c: 51:   {;main.c: 52:     Dir_M1 = 1;
  1324  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1326  020A  01EE               	clrf	_Dir_M1
  1327  020B  0AEE               	incf	_Dir_M1,f
  1328                           
  1329                           ;main.c: 53:     PORTBbits.RB3 = 1;
  1330  020C  1586               	bsf	6,3	;volatile
  1331  020D                     l1945:
  1332                           
  1333                           ;main.c: 54:     Count_BOT1 = x;
  1334  020D  0825               	movf	Speed_M1@x+1,w
  1335  020E  00E8               	movwf	_Count_BOT1+1
  1336  020F  0824               	movf	Speed_M1@x,w
  1337  0210  00E7               	movwf	_Count_BOT1
  1338  0211                     l1947:
  1339                           
  1340                           ;main.c: 55:     Count_TOP1 = (unsigned int)x/2;
  1341  0211  0825               	movf	Speed_M1@x+1,w
  1342  0212  00F8               	movwf	??_Speed_M1+1
  1343  0213  0824               	movf	Speed_M1@x,w
  1344  0214  00F7               	movwf	??_Speed_M1
  1345  0215  1003               	clrc
  1346  0216  0CF8               	rrf	??_Speed_M1+1,f
  1347  0217  0CF7               	rrf	??_Speed_M1,f
  1348  0218  0877               	movf	??_Speed_M1,w
  1349  0219  00E9               	movwf	_Count_TOP1
  1350  021A  0878               	movf	??_Speed_M1+1,w
  1351  021B  00EA               	movwf	_Count_TOP1+1
  1352                           
  1353                           ;main.c: 56:   }
  1354  021C  2A24               	goto	l174
  1355  021D                     l1949:
  1356                           
  1357                           ;main.c: 58:   {;main.c: 59:     Dir_M1 = 0;
  1358  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1359  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1360  021F  01EE               	clrf	_Dir_M1
  1361                           
  1362                           ;main.c: 60:     Count_BOT1 = 0;
  1363  0220  01E7               	clrf	_Count_BOT1
  1364  0221  01E8               	clrf	_Count_BOT1+1
  1365                           
  1366                           ;main.c: 61:     Count_TOP1 = 0;
  1367  0222  01E9               	clrf	_Count_TOP1
  1368  0223  01EA               	clrf	_Count_TOP1+1
  1369  0224                     l174:
  1370  0224  0008               	return
  1371  0225                     __end_of_Speed_M1:
  1372                           
  1373                           	psect	text4
  1374  0110                     __ptext4:	
  1375 ;; *************** function ___awdiv *****************
  1376 ;; Defined at:
  1377 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  divisor         2    2[COMMON] int 
  1380 ;;  dividend        2    4[COMMON] int 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  quotient        2    2[BANK0 ] int 
  1383 ;;  sign            1    1[BANK0 ] unsigned char 
  1384 ;;  counter         1    0[BANK0 ] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  2    2[COMMON] int 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         4       0       0       0       0
  1395 ;;      Locals:         0       4       0       0       0
  1396 ;;      Temps:          1       0       0       0       0
  1397 ;;      Totals:         5       4       0       0       0
  1398 ;;Total ram usage:        9 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 2
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_Speed_M1
  1405 ;;		_Speed_M2
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function ___awdiv
  1411  0110                     ___awdiv:
  1412  0110                     l1865:	
  1413                           ;incstack = 0
  1414                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1415                           
  1416  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0112  01A1               	clrf	___awdiv@sign
  1419  0113                     l1867:
  1420  0113  1FF3               	btfss	___awdiv@divisor+1,7
  1421  0114  2916               	goto	u1371
  1422  0115  2917               	goto	u1370
  1423  0116                     u1371:
  1424  0116  291E               	goto	l1873
  1425  0117                     u1370:
  1426  0117                     l1869:
  1427  0117  09F2               	comf	___awdiv@divisor,f
  1428  0118  09F3               	comf	___awdiv@divisor+1,f
  1429  0119  0AF2               	incf	___awdiv@divisor,f
  1430  011A  1903               	skipnz
  1431  011B  0AF3               	incf	___awdiv@divisor+1,f
  1432  011C                     l1871:
  1433  011C  01A1               	clrf	___awdiv@sign
  1434  011D  0AA1               	incf	___awdiv@sign,f
  1435  011E                     l1873:
  1436  011E  1FF5               	btfss	___awdiv@dividend+1,7
  1437  011F  2921               	goto	u1381
  1438  0120  2922               	goto	u1380
  1439  0121                     u1381:
  1440  0121  292B               	goto	l1879
  1441  0122                     u1380:
  1442  0122                     l1875:
  1443  0122  09F4               	comf	___awdiv@dividend,f
  1444  0123  09F5               	comf	___awdiv@dividend+1,f
  1445  0124  0AF4               	incf	___awdiv@dividend,f
  1446  0125  1903               	skipnz
  1447  0126  0AF5               	incf	___awdiv@dividend+1,f
  1448  0127                     l1877:
  1449  0127  3001               	movlw	1
  1450  0128  00F6               	movwf	??___awdiv
  1451  0129  0876               	movf	??___awdiv,w
  1452  012A  06A1               	xorwf	___awdiv@sign,f
  1453  012B                     l1879:
  1454  012B  01A2               	clrf	___awdiv@quotient
  1455  012C  01A3               	clrf	___awdiv@quotient+1
  1456  012D                     l1881:
  1457  012D  0872               	movf	___awdiv@divisor,w
  1458  012E  0473               	iorwf	___awdiv@divisor+1,w
  1459  012F  1903               	btfsc	3,2
  1460  0130  2932               	goto	u1391
  1461  0131  2933               	goto	u1390
  1462  0132                     u1391:
  1463  0132  296A               	goto	l1901
  1464  0133                     u1390:
  1465  0133                     l1883:
  1466  0133  01A0               	clrf	___awdiv@counter
  1467  0134  0AA0               	incf	___awdiv@counter,f
  1468  0135  2941               	goto	l1889
  1469  0136                     l1885:
  1470  0136  3001               	movlw	1
  1471  0137                     u1405:
  1472  0137  1003               	clrc
  1473  0138  0DF2               	rlf	___awdiv@divisor,f
  1474  0139  0DF3               	rlf	___awdiv@divisor+1,f
  1475  013A  3EFF               	addlw	-1
  1476  013B  1D03               	skipz
  1477  013C  2937               	goto	u1405
  1478  013D                     l1887:
  1479  013D  3001               	movlw	1
  1480  013E  00F6               	movwf	??___awdiv
  1481  013F  0876               	movf	??___awdiv,w
  1482  0140  07A0               	addwf	___awdiv@counter,f
  1483  0141                     l1889:
  1484  0141  1FF3               	btfss	___awdiv@divisor+1,7
  1485  0142  2944               	goto	u1411
  1486  0143  2945               	goto	u1410
  1487  0144                     u1411:
  1488  0144  2936               	goto	l1885
  1489  0145                     u1410:
  1490  0145                     l1891:
  1491  0145  3001               	movlw	1
  1492  0146                     u1425:
  1493  0146  1003               	clrc
  1494  0147  0DA2               	rlf	___awdiv@quotient,f
  1495  0148  0DA3               	rlf	___awdiv@quotient+1,f
  1496  0149  3EFF               	addlw	-1
  1497  014A  1D03               	skipz
  1498  014B  2946               	goto	u1425
  1499  014C  0873               	movf	___awdiv@divisor+1,w
  1500  014D  0275               	subwf	___awdiv@dividend+1,w
  1501  014E  1D03               	skipz
  1502  014F  2952               	goto	u1435
  1503  0150  0872               	movf	___awdiv@divisor,w
  1504  0151  0274               	subwf	___awdiv@dividend,w
  1505  0152                     u1435:
  1506  0152  1C03               	skipc
  1507  0153  2955               	goto	u1431
  1508  0154  2956               	goto	u1430
  1509  0155                     u1431:
  1510  0155  295D               	goto	l1897
  1511  0156                     u1430:
  1512  0156                     l1893:
  1513  0156  0872               	movf	___awdiv@divisor,w
  1514  0157  02F4               	subwf	___awdiv@dividend,f
  1515  0158  0873               	movf	___awdiv@divisor+1,w
  1516  0159  1C03               	skipc
  1517  015A  03F5               	decf	___awdiv@dividend+1,f
  1518  015B  02F5               	subwf	___awdiv@dividend+1,f
  1519  015C                     l1895:
  1520  015C  1422               	bsf	___awdiv@quotient,0
  1521  015D                     l1897:
  1522  015D  3001               	movlw	1
  1523  015E                     u1445:
  1524  015E  1003               	clrc
  1525  015F  0CF3               	rrf	___awdiv@divisor+1,f
  1526  0160  0CF2               	rrf	___awdiv@divisor,f
  1527  0161  3EFF               	addlw	-1
  1528  0162  1D03               	skipz
  1529  0163  295E               	goto	u1445
  1530  0164                     l1899:
  1531  0164  3001               	movlw	1
  1532  0165  02A0               	subwf	___awdiv@counter,f
  1533  0166  1D03               	btfss	3,2
  1534  0167  2969               	goto	u1451
  1535  0168  296A               	goto	u1450
  1536  0169                     u1451:
  1537  0169  2945               	goto	l1891
  1538  016A                     u1450:
  1539  016A                     l1901:
  1540  016A  0821               	movf	___awdiv@sign,w
  1541  016B  1903               	btfsc	3,2
  1542  016C  296E               	goto	u1461
  1543  016D  296F               	goto	u1460
  1544  016E                     u1461:
  1545  016E  2974               	goto	l1905
  1546  016F                     u1460:
  1547  016F                     l1903:
  1548  016F  09A2               	comf	___awdiv@quotient,f
  1549  0170  09A3               	comf	___awdiv@quotient+1,f
  1550  0171  0AA2               	incf	___awdiv@quotient,f
  1551  0172  1903               	skipnz
  1552  0173  0AA3               	incf	___awdiv@quotient+1,f
  1553  0174                     l1905:
  1554  0174  0823               	movf	___awdiv@quotient+1,w
  1555  0175  00F3               	movwf	?___awdiv+1
  1556  0176  0822               	movf	___awdiv@quotient,w
  1557  0177  00F2               	movwf	?___awdiv
  1558  0178                     l530:
  1559  0178  0008               	return
  1560  0179                     __end_of___awdiv:
  1561                           
  1562                           	psect	text5
  1563  0401                     __ptext5:	
  1564 ;; *************** function _MPU6050_Readvalue *****************
  1565 ;; Defined at:
  1566 ;;		line 90 in file "MPU6050.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  buffer         40   21[BANK0 ] unsigned char [40]
  1571 ;;  Ax              2   61[BANK0 ] int 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0      42       0       0       0
  1583 ;;      Temps:          0       2       0       0       0
  1584 ;;      Totals:         0      44       0       0       0
  1585 ;;Total ram usage:       44 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 5
  1588 ;; This function calls:
  1589 ;;		_MPU6050_Read
  1590 ;;		_UART_Transmit_Text
  1591 ;;		_sprintf
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _MPU6050_Readvalue
  1599  0401                     _MPU6050_Readvalue:
  1600  0401                     l1923:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _MPU6050_Readvalue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1603                           
  1604                           
  1605                           ;MPU6050.c: 92:   INTCONbits.PEIE = 0;
  1606  0401  130B               	bcf	11,6	;volatile
  1607  0402                     l1925:
  1608                           
  1609                           ;MPU6050.c: 93:   char buffer[40];;MPU6050.c: 94:   int Ax;;MPU6050.c: 96:   Ax = ((int)
      +                          MPU6050_Read(0x3D)<<8)|(MPU6050_Read(0x3E));
  1610  0402  303D               	movlw	61
  1611  0403  120A  118A  2385  120A  118A  	fcall	_MPU6050_Read
  1612  0408  0878               	movf	?_MPU6050_Read,w
  1613  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1614  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1615  040B  00B3               	movwf	??_MPU6050_Readvalue
  1616  040C  0879               	movf	?_MPU6050_Read+1,w
  1617  040D  00B4               	movwf	??_MPU6050_Readvalue+1
  1618  040E  0833               	movf	??_MPU6050_Readvalue,w
  1619  040F  00B4               	movwf	??_MPU6050_Readvalue+1
  1620  0410  01B3               	clrf	??_MPU6050_Readvalue
  1621  0411  303E               	movlw	62
  1622  0412  120A  118A  2385  120A  118A  	fcall	_MPU6050_Read
  1623  0417  0878               	movf	?_MPU6050_Read,w
  1624  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1626  041A  0433               	iorwf	??_MPU6050_Readvalue,w
  1627  041B  00DD               	movwf	MPU6050_Readvalue@Ax
  1628  041C  0879               	movf	?_MPU6050_Read+1,w
  1629  041D  0434               	iorwf	??_MPU6050_Readvalue+1,w
  1630  041E  00DE               	movwf	MPU6050_Readvalue@Ax+1
  1631  041F                     l1927:
  1632                           
  1633                           ;MPU6050.c: 126:   sprintf(buffer," Ax = %d    \n",Ax);
  1634  041F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1635  0420  00B3               	movwf	??_MPU6050_Readvalue
  1636  0421  0833               	movf	??_MPU6050_Readvalue,w
  1637  0422  00A6               	movwf	sprintf@f
  1638  0423  085E               	movf	MPU6050_Readvalue@Ax+1,w
  1639  0424  00A8               	movwf	?_sprintf+2
  1640  0425  085D               	movf	MPU6050_Readvalue@Ax,w
  1641  0426  00A7               	movwf	?_sprintf+1
  1642  0427  3035               	movlw	(low (MPU6050_Readvalue@buffer| 0))& (0+255)
  1643  0428  120A  118A  2026  120A  118A  	fcall	_sprintf
  1644  042D                     l1929:
  1645                           
  1646                           ;MPU6050.c: 127:   UART_Transmit_Text(buffer);
  1647  042D  3035               	movlw	(low (MPU6050_Readvalue@buffer| 0))& (0+255)
  1648  042E  120A  118A  247D  120A  118A  	fcall	_UART_Transmit_Text
  1649  0433                     l1931:
  1650                           
  1651                           ;MPU6050.c: 137:   INTCONbits.PEIE = 1;
  1652  0433  170B               	bsf	11,6	;volatile
  1653  0434                     l117:
  1654  0434  0008               	return
  1655  0435                     __end_of_MPU6050_Readvalue:
  1656                           
  1657                           	psect	text6
  1658  0026                     __ptext6:	
  1659 ;; *************** function _sprintf *****************
  1660 ;; Defined at:
  1661 ;;		line 505 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  sp              1    wreg     PTR unsigned char 
  1664 ;;		 -> MPU6050_Readvalue@buffer(40), 
  1665 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1666 ;;		 -> STR_1(14), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1669 ;;		 -> MPU6050_Readvalue@buffer(40), 
  1670 ;;  tmpval          4    0        struct .
  1671 ;;  val             2   15[BANK0 ] unsigned int 
  1672 ;;  cp              2    0        PTR const unsigned char 
  1673 ;;  len             2    0        unsigned int 
  1674 ;;  c               1   18[BANK0 ] unsigned char 
  1675 ;;  prec            1   14[BANK0 ] char 
  1676 ;;  flag            1   13[BANK0 ] unsigned char 
  1677 ;;  ap              1   12[BANK0 ] PTR void [1]
  1678 ;;		 -> ?_sprintf(2), 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  2    6[BANK0 ] int 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       3       0       0       0
  1689 ;;      Locals:         0       7       0       0       0
  1690 ;;      Temps:          0       3       0       0       0
  1691 ;;      Totals:         0      13       0       0       0
  1692 ;;Total ram usage:       13 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 3
  1695 ;; This function calls:
  1696 ;;		___lwdiv
  1697 ;;		___lwmod
  1698 ;; This function is called by:
  1699 ;;		_MPU6050_Readvalue
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _sprintf
  1705  0026                     _sprintf:
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1709                           ;sprintf@sp stored from wreg
  1710  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0028  00B1               	movwf	sprintf@sp
  1713  0029                     l1803:
  1714                           
  1715                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, 
      +                          const char * f, ...);D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 506:
      +                           {;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 507:  va_list ap;;D:\F
      +                          ile Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 521:  signed char prec;;D:\File Install 
      +                          MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1716  0029  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1717  002A  00A9               	movwf	??_sprintf
  1718  002B  0829               	movf	??_sprintf,w
  1719  002C  00AC               	movwf	sprintf@ap
  1720                           
  1721                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1722  002D  28F9               	goto	l1855
  1723  002E                     l1805:
  1724                           
  1725                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1726  002E  3025               	movlw	37
  1727  002F  0632               	xorwf	sprintf@c,w
  1728  0030  1903               	btfsc	3,2
  1729  0031  2833               	goto	u1301
  1730  0032  2834               	goto	u1300
  1731  0033                     u1301:
  1732  0033  2840               	goto	l1811
  1733  0034                     u1300:
  1734  0034                     l1807:
  1735                           
  1736                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 557:   {;D:\File Install
      +                           MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1737  0034  0832               	movf	sprintf@c,w
  1738  0035  00A9               	movwf	??_sprintf
  1739  0036  0831               	movf	sprintf@sp,w
  1740  0037  0084               	movwf	4
  1741  0038  0829               	movf	??_sprintf,w
  1742  0039  1383               	bcf	3,7	;select IRP bank0
  1743  003A  0080               	movwf	0
  1744  003B                     l1809:
  1745  003B  3001               	movlw	1
  1746  003C  00A9               	movwf	??_sprintf
  1747  003D  0829               	movf	??_sprintf,w
  1748  003E  07B1               	addwf	sprintf@sp,f
  1749                           
  1750                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 559:    continue;
  1751  003F  28F9               	goto	l1855
  1752  0040                     l1811:
  1753                           
  1754                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1755  0040  01AD               	clrf	sprintf@flag
  1756  0041                     l1815:	
  1757                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 661:   switch(c = *f++) 
      +                          {
  1758                           
  1759  0041  3001               	movlw	1
  1760  0042  07A6               	addwf	sprintf@f,f
  1761  0043  30FF               	movlw	-1
  1762  0044  0726               	addwf	sprintf@f,w
  1763  0045  0084               	movwf	4
  1764  0046  120A  118A  245F  120A  118A  	fcall	stringdir
  1765  004B  00B2               	movwf	sprintf@c
  1766  004C  00A9               	movwf	??_sprintf
  1767  004D  01AA               	clrf	??_sprintf+1
  1768                           
  1769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1770                           ; Switch size 1, requested type "simple"
  1771                           ; Number of cases is 1, Range of values is 0 to 0
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte            4     3 (average)
  1775                           ; direct_byte           11     8 (fixed)
  1776                           ; jumptable            260     6 (fixed)
  1777                           ;	Chosen strategy is simple_byte
  1778  004E  082A               	movf	??_sprintf+1,w
  1779  004F  3A00               	xorlw	0	; case 0
  1780  0050  1903               	skipnz
  1781  0051  2853               	goto	l2043
  1782  0052  28F9               	goto	l1855
  1783  0053                     l2043:
  1784                           
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 3, Range of values is 0 to 105
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte           10     6 (average)
  1790                           ; jumptable            260     6 (fixed)
  1791                           ;	Chosen strategy is simple_byte
  1792  0053  0829               	movf	??_sprintf,w
  1793  0054  3A00               	xorlw	0	; case 0
  1794  0055  1903               	skipnz
  1795  0056  290B               	goto	l1857
  1796  0057  3A64               	xorlw	100	; case 100
  1797  0058  1903               	skipnz
  1798  0059  285E               	goto	l1817
  1799  005A  3A0D               	xorlw	13	; case 105
  1800  005B  1903               	skipnz
  1801  005C  285E               	goto	l1817
  1802  005D  28F9               	goto	l1855
  1803  005E                     l1817:
  1804                           
  1805                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned int)(*(int *)
      +                          __va_arg((*(int **)ap), (int)0));
  1806  005E  082C               	movf	sprintf@ap,w
  1807  005F  0084               	movwf	4
  1808  0060  1383               	bcf	3,7	;select IRP bank0
  1809  0061  0800               	movf	0,w
  1810  0062  00AF               	movwf	sprintf@val
  1811  0063  0A84               	incf	4,f
  1812  0064  0800               	movf	0,w
  1813  0065  00B0               	movwf	sprintf@val+1
  1814  0066                     l1819:
  1815  0066  3002               	movlw	2
  1816  0067  00A9               	movwf	??_sprintf
  1817  0068  0829               	movf	??_sprintf,w
  1818  0069  07AC               	addwf	sprintf@ap,f
  1819  006A                     l1821:
  1820                           
  1821                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0
      +                          ) {
  1822  006A  1FB0               	btfss	sprintf@val+1,7
  1823  006B  286D               	goto	u1311
  1824  006C  286E               	goto	u1310
  1825  006D                     u1311:
  1826  006D  2877               	goto	l1827
  1827  006E                     u1310:
  1828  006E                     l1823:
  1829                           
  1830                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1831  006E  3003               	movlw	3
  1832  006F  00A9               	movwf	??_sprintf
  1833  0070  0829               	movf	??_sprintf,w
  1834  0071  04AD               	iorwf	sprintf@flag,f
  1835  0072                     l1825:
  1836                           
  1837                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1838  0072  09AF               	comf	sprintf@val,f
  1839  0073  09B0               	comf	sprintf@val+1,f
  1840  0074  0AAF               	incf	sprintf@val,f
  1841  0075  1903               	skipnz
  1842  0076  0AB0               	incf	sprintf@val+1,f
  1843  0077                     l1827:
  1844                           
  1845                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1292:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpower
      +                          s/sizeof dpowers[0] ; c++)
  1846  0077  01B2               	clrf	sprintf@c
  1847  0078  0AB2               	incf	sprintf@c,f
  1848  0079                     l1833:
  1849                           
  1850                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowe
      +                          rs[c])
  1851  0079  0832               	movf	sprintf@c,w
  1852  007A  00A9               	movwf	??_sprintf
  1853  007B  0729               	addwf	??_sprintf,w
  1854  007C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1855  007D  0084               	movwf	4
  1856  007E  120A  118A  245F  120A  118A  	fcall	stringdir
  1857  0083  00AA               	movwf	??_sprintf+1
  1858  0084  120A  118A  245F  120A  118A  	fcall	stringdir
  1859  0089  00AB               	movwf	??_sprintf+2
  1860  008A  082B               	movf	??_sprintf+2,w
  1861  008B  0230               	subwf	sprintf@val+1,w
  1862  008C  1D03               	skipz
  1863  008D  2890               	goto	u1325
  1864  008E  082A               	movf	??_sprintf+1,w
  1865  008F  022F               	subwf	sprintf@val,w
  1866  0090                     u1325:
  1867  0090  1803               	skipnc
  1868  0091  2893               	goto	u1321
  1869  0092  2894               	goto	u1320
  1870  0093                     u1321:
  1871  0093  2895               	goto	l1837
  1872  0094                     u1320:
  1873  0094  289F               	goto	l1839
  1874  0095                     l1837:
  1875  0095  3001               	movlw	1
  1876  0096  00A9               	movwf	??_sprintf
  1877  0097  0829               	movf	??_sprintf,w
  1878  0098  07B2               	addwf	sprintf@c,f
  1879  0099  3005               	movlw	5
  1880  009A  0632               	xorwf	sprintf@c,w
  1881  009B  1D03               	btfss	3,2
  1882  009C  289E               	goto	u1331
  1883  009D  289F               	goto	u1330
  1884  009E                     u1331:
  1885  009E  2879               	goto	l1833
  1886  009F                     u1330:
  1887  009F                     l1839:
  1888                           
  1889                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1890  009F  082D               	movf	sprintf@flag,w
  1891  00A0  3903               	andlw	3
  1892  00A1  1903               	btfsc	3,2
  1893  00A2  28A4               	goto	u1341
  1894  00A3  28A5               	goto	u1340
  1895  00A4                     u1341:
  1896  00A4  28B0               	goto	l1845
  1897  00A5                     u1340:
  1898  00A5                     l1841:
  1899                           
  1900                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-'
      +                          )));
  1901  00A5  302D               	movlw	45
  1902  00A6  00A9               	movwf	??_sprintf
  1903  00A7  0831               	movf	sprintf@sp,w
  1904  00A8  0084               	movwf	4
  1905  00A9  0829               	movf	??_sprintf,w
  1906  00AA  1383               	bcf	3,7	;select IRP bank0
  1907  00AB  0080               	movwf	0
  1908  00AC                     l1843:
  1909  00AC  3001               	movlw	1
  1910  00AD  00A9               	movwf	??_sprintf
  1911  00AE  0829               	movf	??_sprintf,w
  1912  00AF  07B1               	addwf	sprintf@sp,f
  1913  00B0                     l1845:
  1914                           
  1915                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1495:   };D:\File Instal
      +                          l MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1916  00B0  0832               	movf	sprintf@c,w
  1917  00B1  00A9               	movwf	??_sprintf
  1918  00B2  0829               	movf	??_sprintf,w
  1919  00B3  00AE               	movwf	sprintf@prec
  1920                           
  1921                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1922  00B4  28F0               	goto	l1853
  1923  00B5                     l1847:
  1924                           
  1925                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpowers[(unsigned
      +                           char)prec]) % 10 + '0';
  1926  00B5  300A               	movlw	10
  1927  00B6  00A0               	movwf	___lwmod@divisor
  1928  00B7  3000               	movlw	0
  1929  00B8  00A1               	movwf	___lwmod@divisor+1
  1930  00B9  082E               	movf	sprintf@prec,w
  1931  00BA  00A9               	movwf	??_sprintf
  1932  00BB  0729               	addwf	??_sprintf,w
  1933  00BC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1934  00BD  0084               	movwf	4
  1935  00BE  120A  118A  245F  120A  118A  	fcall	stringdir
  1936  00C3  00F2               	movwf	___lwdiv@divisor
  1937  00C4  120A  118A  245F  120A  118A  	fcall	stringdir
  1938  00C9  00F3               	movwf	___lwdiv@divisor+1
  1939  00CA  0830               	movf	sprintf@val+1,w
  1940  00CB  00F5               	movwf	___lwdiv@dividend+1
  1941  00CC  082F               	movf	sprintf@val,w
  1942  00CD  00F4               	movwf	___lwdiv@dividend
  1943  00CE  120A  118A  22BB  120A  118A  	fcall	___lwdiv
  1944  00D3  0873               	movf	?___lwdiv+1,w
  1945  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1946  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1947  00D6  00A3               	movwf	___lwmod@dividend+1
  1948  00D7  0872               	movf	?___lwdiv,w
  1949  00D8  00A2               	movwf	___lwmod@dividend
  1950  00D9  120A  118A  23C5  120A  118A  	fcall	___lwmod
  1951  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1952  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1953  00E0  0820               	movf	?___lwmod,w
  1954  00E1  3E30               	addlw	48
  1955  00E2  00AA               	movwf	??_sprintf+1
  1956  00E3  082A               	movf	??_sprintf+1,w
  1957  00E4  00B2               	movwf	sprintf@c
  1958  00E5                     l1849:
  1959                           
  1960                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1549:    };D:\File Insta
      +                          ll MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1961  00E5  0832               	movf	sprintf@c,w
  1962  00E6  00A9               	movwf	??_sprintf
  1963  00E7  0831               	movf	sprintf@sp,w
  1964  00E8  0084               	movwf	4
  1965  00E9  0829               	movf	??_sprintf,w
  1966  00EA  1383               	bcf	3,7	;select IRP bank0
  1967  00EB  0080               	movwf	0
  1968  00EC                     l1851:
  1969  00EC  3001               	movlw	1
  1970  00ED  00A9               	movwf	??_sprintf
  1971  00EE  0829               	movf	??_sprintf,w
  1972  00EF  07B1               	addwf	sprintf@sp,f
  1973  00F0                     l1853:
  1974                           
  1975                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1976  00F0  30FF               	movlw	255
  1977  00F1  00A9               	movwf	??_sprintf
  1978  00F2  0829               	movf	??_sprintf,w
  1979  00F3  07AE               	addwf	sprintf@prec,f
  1980  00F4  0A2E               	incf	sprintf@prec,w
  1981  00F5  1D03               	btfss	3,2
  1982  00F6  28F8               	goto	u1351
  1983  00F7  28F9               	goto	u1350
  1984  00F8                     u1351:
  1985  00F8  28B5               	goto	l1847
  1986  00F9                     u1350:
  1987  00F9                     l1855:
  1988                           
  1989                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) 
      +                          {
  1990  00F9  3001               	movlw	1
  1991  00FA  07A6               	addwf	sprintf@f,f
  1992  00FB  30FF               	movlw	-1
  1993  00FC  0726               	addwf	sprintf@f,w
  1994  00FD  0084               	movwf	4
  1995  00FE  120A  118A  245F  120A  118A  	fcall	stringdir
  1996  0103  00A9               	movwf	??_sprintf
  1997  0104  0829               	movf	??_sprintf,w
  1998  0105  00B2               	movwf	sprintf@c
  1999  0106  0832               	movf	sprintf@c,w
  2000  0107  1D03               	btfss	3,2
  2001  0108  290A               	goto	u1361
  2002  0109  290B               	goto	u1360
  2003  010A                     u1361:
  2004  010A  282E               	goto	l1805
  2005  010B                     u1360:
  2006  010B                     l1857:
  2007                           
  2008                           ;D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2009  010B  0831               	movf	sprintf@sp,w
  2010  010C  0084               	movwf	4
  2011  010D  1383               	bcf	3,7	;select IRP bank0
  2012  010E  0180               	clrf	0
  2013  010F                     l373:
  2014  010F  0008               	return
  2015  0110                     __end_of_sprintf:
  2016                           
  2017                           	psect	text7
  2018  03C5                     __ptext7:	
  2019 ;; *************** function ___lwmod *****************
  2020 ;; Defined at:
  2021 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwmod.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  divisor         2    0[BANK0 ] unsigned int 
  2024 ;;  dividend        2    2[BANK0 ] unsigned int 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  counter         1    5[BANK0 ] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  2    0[BANK0 ] unsigned int 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       4       0       0       0
  2037 ;;      Locals:         0       1       0       0       0
  2038 ;;      Temps:          0       1       0       0       0
  2039 ;;      Totals:         0       6       0       0       0
  2040 ;;Total ram usage:        6 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_sprintf
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function ___lwmod
  2052  03C5                     ___lwmod:
  2053  03C5                     l1775:	
  2054                           ;incstack = 0
  2055                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2056                           
  2057  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2058  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2059  03C7  0820               	movf	___lwmod@divisor,w
  2060  03C8  0421               	iorwf	___lwmod@divisor+1,w
  2061  03C9  1903               	btfsc	3,2
  2062  03CA  2BCC               	goto	u1241
  2063  03CB  2BCD               	goto	u1240
  2064  03CC                     u1241:
  2065  03CC  2BFC               	goto	l1793
  2066  03CD                     u1240:
  2067  03CD                     l1777:
  2068  03CD  01A5               	clrf	___lwmod@counter
  2069  03CE  0AA5               	incf	___lwmod@counter,f
  2070  03CF  2BDB               	goto	l1783
  2071  03D0                     l1779:
  2072  03D0  3001               	movlw	1
  2073  03D1                     u1255:
  2074  03D1  1003               	clrc
  2075  03D2  0DA0               	rlf	___lwmod@divisor,f
  2076  03D3  0DA1               	rlf	___lwmod@divisor+1,f
  2077  03D4  3EFF               	addlw	-1
  2078  03D5  1D03               	skipz
  2079  03D6  2BD1               	goto	u1255
  2080  03D7                     l1781:
  2081  03D7  3001               	movlw	1
  2082  03D8  00A4               	movwf	??___lwmod
  2083  03D9  0824               	movf	??___lwmod,w
  2084  03DA  07A5               	addwf	___lwmod@counter,f
  2085  03DB                     l1783:
  2086  03DB  1FA1               	btfss	___lwmod@divisor+1,7
  2087  03DC  2BDE               	goto	u1261
  2088  03DD  2BDF               	goto	u1260
  2089  03DE                     u1261:
  2090  03DE  2BD0               	goto	l1779
  2091  03DF                     u1260:
  2092  03DF                     l1785:
  2093  03DF  0821               	movf	___lwmod@divisor+1,w
  2094  03E0  0223               	subwf	___lwmod@dividend+1,w
  2095  03E1  1D03               	skipz
  2096  03E2  2BE5               	goto	u1275
  2097  03E3  0820               	movf	___lwmod@divisor,w
  2098  03E4  0222               	subwf	___lwmod@dividend,w
  2099  03E5                     u1275:
  2100  03E5  1C03               	skipc
  2101  03E6  2BE8               	goto	u1271
  2102  03E7  2BE9               	goto	u1270
  2103  03E8                     u1271:
  2104  03E8  2BEF               	goto	l1789
  2105  03E9                     u1270:
  2106  03E9                     l1787:
  2107  03E9  0820               	movf	___lwmod@divisor,w
  2108  03EA  02A2               	subwf	___lwmod@dividend,f
  2109  03EB  0821               	movf	___lwmod@divisor+1,w
  2110  03EC  1C03               	skipc
  2111  03ED  03A3               	decf	___lwmod@dividend+1,f
  2112  03EE  02A3               	subwf	___lwmod@dividend+1,f
  2113  03EF                     l1789:
  2114  03EF  3001               	movlw	1
  2115  03F0                     u1285:
  2116  03F0  1003               	clrc
  2117  03F1  0CA1               	rrf	___lwmod@divisor+1,f
  2118  03F2  0CA0               	rrf	___lwmod@divisor,f
  2119  03F3  3EFF               	addlw	-1
  2120  03F4  1D03               	skipz
  2121  03F5  2BF0               	goto	u1285
  2122  03F6                     l1791:
  2123  03F6  3001               	movlw	1
  2124  03F7  02A5               	subwf	___lwmod@counter,f
  2125  03F8  1D03               	btfss	3,2
  2126  03F9  2BFB               	goto	u1291
  2127  03FA  2BFC               	goto	u1290
  2128  03FB                     u1291:
  2129  03FB  2BDF               	goto	l1785
  2130  03FC                     u1290:
  2131  03FC                     l1793:
  2132  03FC  0823               	movf	___lwmod@dividend+1,w
  2133  03FD  00A1               	movwf	?___lwmod+1
  2134  03FE  0822               	movf	___lwmod@dividend,w
  2135  03FF  00A0               	movwf	?___lwmod
  2136  0400                     l659:
  2137  0400  0008               	return
  2138  0401                     __end_of___lwmod:
  2139                           
  2140                           	psect	text8
  2141  02BB                     __ptext8:	
  2142 ;; *************** function ___lwdiv *****************
  2143 ;; Defined at:
  2144 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\lwdiv.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  divisor         2    2[COMMON] unsigned int 
  2147 ;;  dividend        2    4[COMMON] unsigned int 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  quotient        2    7[COMMON] unsigned int 
  2150 ;;  counter         1    9[COMMON] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2    2[COMMON] unsigned int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         4       0       0       0       0
  2161 ;;      Locals:         3       0       0       0       0
  2162 ;;      Temps:          1       0       0       0       0
  2163 ;;      Totals:         8       0       0       0       0
  2164 ;;Total ram usage:        8 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 2
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_sprintf
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function ___lwdiv
  2176  02BB                     ___lwdiv:
  2177  02BB                     l1407:	
  2178                           ;incstack = 0
  2179                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2180                           
  2181  02BB  01F7               	clrf	___lwdiv@quotient
  2182  02BC  01F8               	clrf	___lwdiv@quotient+1
  2183  02BD                     l1409:
  2184  02BD  0872               	movf	___lwdiv@divisor,w
  2185  02BE  0473               	iorwf	___lwdiv@divisor+1,w
  2186  02BF  1903               	btfsc	3,2
  2187  02C0  2AC2               	goto	u781
  2188  02C1  2AC3               	goto	u780
  2189  02C2                     u781:
  2190  02C2  2AFA               	goto	l1429
  2191  02C3                     u780:
  2192  02C3                     l1411:
  2193  02C3  01F9               	clrf	___lwdiv@counter
  2194  02C4  0AF9               	incf	___lwdiv@counter,f
  2195  02C5  2AD1               	goto	l1417
  2196  02C6                     l1413:
  2197  02C6  3001               	movlw	1
  2198  02C7                     u795:
  2199  02C7  1003               	clrc
  2200  02C8  0DF2               	rlf	___lwdiv@divisor,f
  2201  02C9  0DF3               	rlf	___lwdiv@divisor+1,f
  2202  02CA  3EFF               	addlw	-1
  2203  02CB  1D03               	skipz
  2204  02CC  2AC7               	goto	u795
  2205  02CD                     l1415:
  2206  02CD  3001               	movlw	1
  2207  02CE  00F6               	movwf	??___lwdiv
  2208  02CF  0876               	movf	??___lwdiv,w
  2209  02D0  07F9               	addwf	___lwdiv@counter,f
  2210  02D1                     l1417:
  2211  02D1  1FF3               	btfss	___lwdiv@divisor+1,7
  2212  02D2  2AD4               	goto	u801
  2213  02D3  2AD5               	goto	u800
  2214  02D4                     u801:
  2215  02D4  2AC6               	goto	l1413
  2216  02D5                     u800:
  2217  02D5                     l1419:
  2218  02D5  3001               	movlw	1
  2219  02D6                     u815:
  2220  02D6  1003               	clrc
  2221  02D7  0DF7               	rlf	___lwdiv@quotient,f
  2222  02D8  0DF8               	rlf	___lwdiv@quotient+1,f
  2223  02D9  3EFF               	addlw	-1
  2224  02DA  1D03               	skipz
  2225  02DB  2AD6               	goto	u815
  2226  02DC  0873               	movf	___lwdiv@divisor+1,w
  2227  02DD  0275               	subwf	___lwdiv@dividend+1,w
  2228  02DE  1D03               	skipz
  2229  02DF  2AE2               	goto	u825
  2230  02E0  0872               	movf	___lwdiv@divisor,w
  2231  02E1  0274               	subwf	___lwdiv@dividend,w
  2232  02E2                     u825:
  2233  02E2  1C03               	skipc
  2234  02E3  2AE5               	goto	u821
  2235  02E4  2AE6               	goto	u820
  2236  02E5                     u821:
  2237  02E5  2AED               	goto	l1425
  2238  02E6                     u820:
  2239  02E6                     l1421:
  2240  02E6  0872               	movf	___lwdiv@divisor,w
  2241  02E7  02F4               	subwf	___lwdiv@dividend,f
  2242  02E8  0873               	movf	___lwdiv@divisor+1,w
  2243  02E9  1C03               	skipc
  2244  02EA  03F5               	decf	___lwdiv@dividend+1,f
  2245  02EB  02F5               	subwf	___lwdiv@dividend+1,f
  2246  02EC                     l1423:
  2247  02EC  1477               	bsf	___lwdiv@quotient,0
  2248  02ED                     l1425:
  2249  02ED  3001               	movlw	1
  2250  02EE                     u835:
  2251  02EE  1003               	clrc
  2252  02EF  0CF3               	rrf	___lwdiv@divisor+1,f
  2253  02F0  0CF2               	rrf	___lwdiv@divisor,f
  2254  02F1  3EFF               	addlw	-1
  2255  02F2  1D03               	skipz
  2256  02F3  2AEE               	goto	u835
  2257  02F4                     l1427:
  2258  02F4  3001               	movlw	1
  2259  02F5  02F9               	subwf	___lwdiv@counter,f
  2260  02F6  1D03               	btfss	3,2
  2261  02F7  2AF9               	goto	u841
  2262  02F8  2AFA               	goto	u840
  2263  02F9                     u841:
  2264  02F9  2AD5               	goto	l1419
  2265  02FA                     u840:
  2266  02FA                     l1429:
  2267  02FA  0878               	movf	___lwdiv@quotient+1,w
  2268  02FB  00F3               	movwf	?___lwdiv+1
  2269  02FC  0877               	movf	___lwdiv@quotient,w
  2270  02FD  00F2               	movwf	?___lwdiv
  2271  02FE                     l649:
  2272  02FE  0008               	return
  2273  02FF                     __end_of___lwdiv:
  2274                           
  2275                           	psect	text9
  2276  047D                     __ptext9:	
  2277 ;; *************** function _UART_Transmit_Text *****************
  2278 ;; Defined at:
  2279 ;;		line 27 in file "UART.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  str             1    wreg     PTR unsigned char 
  2282 ;;		 -> RX_Buffer(50), MPU6050_Readvalue@buffer(40), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  str             1    5[COMMON] PTR unsigned char 
  2285 ;;		 -> RX_Buffer(50), MPU6050_Readvalue@buffer(40), 
  2286 ;;  i               1    4[COMMON] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         2       0       0       0       0
  2298 ;;      Temps:          1       0       0       0       0
  2299 ;;      Totals:         3       0       0       0       0
  2300 ;;Total ram usage:        3 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 3
  2303 ;; This function calls:
  2304 ;;		_UART_Transmit
  2305 ;; This function is called by:
  2306 ;;		_MPU6050_Readvalue
  2307 ;;		_HandleData
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _UART_Transmit_Text
  2313  047D                     _UART_Transmit_Text:
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _UART_Transmit_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2317                           ;UART_Transmit_Text@str stored from wreg
  2318  047D  00F5               	movwf	UART_Transmit_Text@str
  2319  047E                     l1525:
  2320                           
  2321                           ;UART.c: 27: void UART_Transmit_Text(char *str);UART.c: 28: {;UART.c: 29:     unsigned c
      +                          har i=0;
  2322  047E  01F4               	clrf	UART_Transmit_Text@i
  2323                           
  2324                           ;UART.c: 30:     while(str[i] != 0)
  2325  047F  2C8F               	goto	l1531
  2326  0480                     l1527:
  2327                           
  2328                           ;UART.c: 31:     {;UART.c: 32:         UART_Transmit(str[i]);
  2329  0480  0874               	movf	UART_Transmit_Text@i,w
  2330  0481  0775               	addwf	UART_Transmit_Text@str,w
  2331  0482  00F3               	movwf	??_UART_Transmit_Text
  2332  0483  0873               	movf	??_UART_Transmit_Text,w
  2333  0484  0084               	movwf	4
  2334  0485  0800               	movf	0,w
  2335  0486  120A  118A  2527  120A  118A  	fcall	_UART_Transmit
  2336  048B                     l1529:
  2337                           
  2338                           ;UART.c: 33:         i++;
  2339  048B  3001               	movlw	1
  2340  048C  00F3               	movwf	??_UART_Transmit_Text
  2341  048D  0873               	movf	??_UART_Transmit_Text,w
  2342  048E  07F4               	addwf	UART_Transmit_Text@i,f
  2343  048F                     l1531:
  2344                           
  2345                           ;UART.c: 30:     while(str[i] != 0)
  2346  048F  0874               	movf	UART_Transmit_Text@i,w
  2347  0490  0775               	addwf	UART_Transmit_Text@str,w
  2348  0491  00F3               	movwf	??_UART_Transmit_Text
  2349  0492  0873               	movf	??_UART_Transmit_Text,w
  2350  0493  0084               	movwf	4
  2351  0494  1383               	bcf	3,7	;select IRP bank0
  2352  0495  0800               	movf	0,w
  2353  0496  1D03               	btfss	3,2
  2354  0497  2C99               	goto	u981
  2355  0498  2C9A               	goto	u980
  2356  0499                     u981:
  2357  0499  2C80               	goto	l1527
  2358  049A                     u980:
  2359  049A                     l249:
  2360  049A  0008               	return
  2361  049B                     __end_of_UART_Transmit_Text:
  2362                           
  2363                           	psect	text10
  2364  0527                     __ptext10:	
  2365 ;; *************** function _UART_Transmit *****************
  2366 ;; Defined at:
  2367 ;;		line 22 in file "UART.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  c               1    wreg     unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  c               1    2[COMMON] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         1       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         1       0       0       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 2
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_UART_Transmit_Text
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _UART_Transmit
  2397  0527                     _UART_Transmit:
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _UART_Transmit: [wreg]
  2401                           ;UART_Transmit@c stored from wreg
  2402  0527  00F2               	movwf	UART_Transmit@c
  2403  0528                     l1403:
  2404  0528                     l240:	
  2405                           ;UART.c: 22: void UART_Transmit(char c);UART.c: 23: {;UART.c: 24:     while(!TRMT);
  2406                           
  2407  0528  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0529  1303               	bcf	3,6	;RP1=0, select bank1
  2409  052A  1C98               	btfss	24,1	;volatile
  2410  052B  2D2D               	goto	u771
  2411  052C  2D2E               	goto	u770
  2412  052D                     u771:
  2413  052D  2D28               	goto	l240
  2414  052E                     u770:
  2415  052E                     l1405:
  2416                           
  2417                           ;UART.c: 25:     TXREG = c;
  2418  052E  0872               	movf	UART_Transmit@c,w
  2419  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0531  0099               	movwf	25	;volatile
  2422  0532                     l243:
  2423  0532  0008               	return
  2424  0533                     __end_of_UART_Transmit:
  2425                           
  2426                           	psect	text11
  2427  0385                     __ptext11:	
  2428 ;; *************** function _MPU6050_Read *****************
  2429 ;; Defined at:
  2430 ;;		line 42 in file "MPU6050.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  add             1    wreg     unsigned char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  add             1    2[BANK0 ] unsigned char 
  2435 ;;  retval          2    3[BANK0 ] int 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2    8[COMMON] int 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         2       0       0       0       0
  2446 ;;      Locals:         0       3       0       0       0
  2447 ;;      Temps:          0       2       0       0       0
  2448 ;;      Totals:         2       5       0       0       0
  2449 ;;Total ram usage:        7 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 4
  2452 ;; This function calls:
  2453 ;;		_I2C_Read
  2454 ;;		_I2C_Start
  2455 ;;		_I2C_Stop
  2456 ;;		_I2C_Write
  2457 ;; This function is called by:
  2458 ;;		_MPU6050_Readvalue
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _MPU6050_Read
  2464  0385                     _MPU6050_Read:
  2465                           
  2466                           ;incstack = 0
  2467                           ; Regs used in _MPU6050_Read: [wreg+status,2+status,0+pclath+cstack]
  2468                           ;MPU6050_Read@add stored from wreg
  2469  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0387  00A2               	movwf	MPU6050_Read@add
  2472  0388                     l1797:
  2473                           
  2474                           ;MPU6050.c: 42: int MPU6050_Read(unsigned char add);MPU6050.c: 43: {;MPU6050.c: 44:    i
      +                          nt retval;;MPU6050.c: 45:    I2C_Start();
  2475  0388  120A  118A  251A  120A  118A  	fcall	_I2C_Start
  2476                           
  2477                           ;MPU6050.c: 46:    I2C_Write(0xD0);
  2478  038D  30D0               	movlw	208
  2479  038E  120A  118A  24B9  120A  118A  	fcall	_I2C_Write
  2480                           
  2481                           ;MPU6050.c: 47:    I2C_Write(add);
  2482  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0395  0822               	movf	MPU6050_Read@add,w
  2485  0396  120A  118A  24B9  120A  118A  	fcall	_I2C_Write
  2486                           
  2487                           ;MPU6050.c: 48:    I2C_Stop();
  2488  039B  120A  118A  250D  120A  118A  	fcall	_I2C_Stop
  2489                           
  2490                           ;MPU6050.c: 49:    I2C_Start();
  2491  03A0  120A  118A  251A  120A  118A  	fcall	_I2C_Start
  2492                           
  2493                           ;MPU6050.c: 50:    I2C_Write(0xD1);
  2494  03A5  30D1               	movlw	209
  2495  03A6  120A  118A  24B9  120A  118A  	fcall	_I2C_Write
  2496                           
  2497                           ;MPU6050.c: 51:    retval = I2C_Read(1);
  2498  03AB  3001               	movlw	1
  2499  03AC  120A  118A  2435  120A  118A  	fcall	_I2C_Read
  2500  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2501  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2502  03B3  00A0               	movwf	??_MPU6050_Read
  2503  03B4  01A1               	clrf	??_MPU6050_Read+1
  2504  03B5  0820               	movf	??_MPU6050_Read,w
  2505  03B6  00A3               	movwf	MPU6050_Read@retval
  2506  03B7  0821               	movf	??_MPU6050_Read+1,w
  2507  03B8  00A4               	movwf	MPU6050_Read@retval+1
  2508                           
  2509                           ;MPU6050.c: 52:    I2C_Stop();
  2510  03B9  120A  118A  250D  120A  118A  	fcall	_I2C_Stop
  2511  03BE                     l1799:
  2512                           
  2513                           ;MPU6050.c: 53:    return retval;
  2514  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2515  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2516  03C0  0824               	movf	MPU6050_Read@retval+1,w
  2517  03C1  00F9               	movwf	?_MPU6050_Read+1
  2518  03C2  0823               	movf	MPU6050_Read@retval,w
  2519  03C3  00F8               	movwf	?_MPU6050_Read
  2520  03C4                     l111:
  2521  03C4  0008               	return
  2522  03C5                     __end_of_MPU6050_Read:
  2523                           
  2524                           	psect	text12
  2525  0435                     __ptext12:	
  2526 ;; *************** function _I2C_Read *****************
  2527 ;; Defined at:
  2528 ;;		line 53 in file "I2C.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  ACK             1    wreg     unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  ACK             1    7[COMMON] unsigned char 
  2533 ;;  Rvalue          1    6[COMMON] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, pclath, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         2       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0
  2546 ;;      Totals:         3       0       0       0       0
  2547 ;;Total ram usage:        3 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 3
  2550 ;; This function calls:
  2551 ;;		_I2C_Idle
  2552 ;; This function is called by:
  2553 ;;		_MPU6050_Read
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _I2C_Read
  2559  0435                     _I2C_Read:
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2563                           ;I2C_Read@ACK stored from wreg
  2564  0435  00F7               	movwf	I2C_Read@ACK
  2565  0436                     l1369:
  2566                           
  2567                           ;I2C.c: 53: unsigned char I2C_Read(unsigned char ACK);I2C.c: 54: {;I2C.c: 55:     unsign
      +                          ed char Rvalue;;I2C.c: 57:     I2C_Idle();
  2568  0436  120A  118A  22FF  120A  118A  	fcall	_I2C_Idle
  2569  043B                     l1371:
  2570                           
  2571                           ;I2C.c: 59:     SSPCONbits.SSPOV = 0;
  2572  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2573  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2574  043D  1314               	bcf	20,6	;volatile
  2575  043E                     l1373:
  2576                           
  2577                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  2578  043E  118C               	bcf	12,3	;volatile
  2579  043F                     l1375:
  2580                           
  2581                           ;I2C.c: 62:     SSPCON2bits.RCEN = 1;
  2582  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2583  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2584  0441  1591               	bsf	17,3	;volatile
  2585  0442                     l60:	
  2586                           ;I2C.c: 64:     while(SSPCON2bits.RCEN);
  2587                           
  2588  0442  1991               	btfsc	17,3	;volatile
  2589  0443  2C45               	goto	u721
  2590  0444  2C46               	goto	u720
  2591  0445                     u721:
  2592  0445  2C42               	goto	l60
  2593  0446                     u720:
  2594  0446                     l1377:
  2595                           
  2596                           ;I2C.c: 66:     SSPCON2bits.ACKDT = ACK;
  2597  0446  0C77               	rrf	I2C_Read@ACK,w
  2598  0447  1C03               	skipc
  2599  0448  1291               	bcf	17,5	;volatile
  2600  0449  1803               	skipnc
  2601  044A  1691               	bsf	17,5	;volatile
  2602  044B                     l1379:
  2603                           
  2604                           ;I2C.c: 68:     SSPCON2bits.ACKEN = 1;
  2605  044B  1611               	bsf	17,4	;volatile
  2606  044C                     l1381:
  2607                           
  2608                           ;I2C.c: 70:     PIR1bits.SSPIF = 0;
  2609  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2610  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2611  044E  118C               	bcf	12,3	;volatile
  2612  044F                     l63:	
  2613                           ;I2C.c: 72:     while(PIR1bits.SSPIF == 0);
  2614                           
  2615  044F  1D8C               	btfss	12,3	;volatile
  2616  0450  2C52               	goto	u731
  2617  0451  2C53               	goto	u730
  2618  0452                     u731:
  2619  0452  2C4F               	goto	l63
  2620  0453                     u730:
  2621  0453                     l1383:
  2622                           
  2623                           ;I2C.c: 74:     Rvalue = SSPBUF;
  2624  0453  0813               	movf	19,w	;volatile
  2625  0454  00F5               	movwf	??_I2C_Read
  2626  0455  0875               	movf	??_I2C_Read,w
  2627  0456  00F6               	movwf	I2C_Read@Rvalue
  2628  0457                     l1385:
  2629                           
  2630                           ;I2C.c: 76:     if(ACK == 1)
  2631  0457  0377               	decf	I2C_Read@ACK,w
  2632  0458  1D03               	btfss	3,2
  2633  0459  2C5B               	goto	u741
  2634  045A  2C5C               	goto	u740
  2635  045B                     u741:
  2636  045B  2C5D               	goto	l1389
  2637  045C                     u740:
  2638  045C                     l1387:
  2639                           
  2640                           ;I2C.c: 77:     {;I2C.c: 78:         PIR1bits.SSPIF = 0;
  2641  045C  118C               	bcf	12,3	;volatile
  2642  045D                     l1389:
  2643                           
  2644                           ;I2C.c: 80:     return Rvalue;
  2645  045D  0876               	movf	I2C_Read@Rvalue,w
  2646  045E                     l67:
  2647  045E  0008               	return
  2648  045F                     __end_of_I2C_Read:
  2649                           
  2650                           	psect	text13
  2651  0343                     __ptext13:	
  2652 ;; *************** function _MPU6050_Init *****************
  2653 ;; Defined at:
  2654 ;;		line 56 in file "MPU6050.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0
  2670 ;;      Temps:          0       3       0       0       0
  2671 ;;      Totals:         0       3       0       0       0
  2672 ;;Total ram usage:        3 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 5
  2675 ;; This function calls:
  2676 ;;		_I2C_Init
  2677 ;;		_MPU6050_Write
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _MPU6050_Init
  2685  0343                     _MPU6050_Init:
  2686  0343                     l1909:	
  2687                           ;incstack = 0
  2688                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2689                           
  2690                           
  2691                           ;MPU6050.c: 59:   _delay((unsigned long)((100)*(20000000/4000.0)));
  2692  0343  3003               	movlw	3
  2693  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0346  00A2               	movwf	??_MPU6050_Init+2
  2696  0347  308A               	movlw	138
  2697  0348  00A1               	movwf	??_MPU6050_Init+1
  2698  0349  3055               	movlw	85
  2699  034A  00A0               	movwf	??_MPU6050_Init
  2700  034B                     u1517:
  2701  034B  0BA0               	decfsz	??_MPU6050_Init,f
  2702  034C  2B4B               	goto	u1517
  2703  034D  0BA1               	decfsz	??_MPU6050_Init+1,f
  2704  034E  2B4B               	goto	u1517
  2705  034F  0BA2               	decfsz	??_MPU6050_Init+2,f
  2706  0350  2B4B               	goto	u1517
  2707  0351                     l1911:
  2708                           
  2709                           ;MPU6050.c: 60:   I2C_Init();
  2710  0351  120A  118A  24FE  120A  118A  	fcall	_I2C_Init
  2711  0356                     l1913:
  2712                           
  2713                           ;MPU6050.c: 63:   MPU6050_Write(0x19, 0x07);
  2714  0356  3007               	movlw	7
  2715  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0359  00A0               	movwf	??_MPU6050_Init
  2718  035A  0820               	movf	??_MPU6050_Init,w
  2719  035B  00F6               	movwf	MPU6050_Write@data
  2720  035C  3019               	movlw	25
  2721  035D  120A  118A  249B  120A  118A  	fcall	_MPU6050_Write
  2722  0362                     l1915:
  2723                           
  2724                           ;MPU6050.c: 66:   MPU6050_Write(0x6B, 0x01);
  2725  0362  01F6               	clrf	MPU6050_Write@data
  2726  0363  0AF6               	incf	MPU6050_Write@data,f
  2727  0364  306B               	movlw	107
  2728  0365  120A  118A  249B  120A  118A  	fcall	_MPU6050_Write
  2729  036A                     l1917:
  2730                           
  2731                           ;MPU6050.c: 69:   MPU6050_Write(0x1A, 0x00);
  2732  036A  01F6               	clrf	MPU6050_Write@data
  2733  036B  301A               	movlw	26
  2734  036C  120A  118A  249B  120A  118A  	fcall	_MPU6050_Write
  2735  0371                     l1919:
  2736                           
  2737                           ;MPU6050.c: 72:   MPU6050_Write(0x1C, 0x00);
  2738  0371  01F6               	clrf	MPU6050_Write@data
  2739  0372  301C               	movlw	28
  2740  0373  120A  118A  249B  120A  118A  	fcall	_MPU6050_Write
  2741  0378                     l1921:
  2742                           
  2743                           ;MPU6050.c: 75:   MPU6050_Write(0x1B, 0x18);
  2744  0378  3018               	movlw	24
  2745  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2746  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2747  037B  00A0               	movwf	??_MPU6050_Init
  2748  037C  0820               	movf	??_MPU6050_Init,w
  2749  037D  00F6               	movwf	MPU6050_Write@data
  2750  037E  301B               	movlw	27
  2751  037F  120A  118A  249B  120A  118A  	fcall	_MPU6050_Write
  2752  0384                     l114:
  2753  0384  0008               	return
  2754  0385                     __end_of_MPU6050_Init:
  2755                           
  2756                           	psect	text14
  2757  049B                     __ptext14:	
  2758 ;; *************** function _MPU6050_Write *****************
  2759 ;; Defined at:
  2760 ;;		line 34 in file "MPU6050.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  add             1    wreg     unsigned char 
  2763 ;;  data            1    6[COMMON] unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  add             1    7[COMMON] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         1       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0
  2778 ;;      Totals:         2       0       0       0       0
  2779 ;;Total ram usage:        2 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 4
  2782 ;; This function calls:
  2783 ;;		_I2C_Start
  2784 ;;		_I2C_Stop
  2785 ;;		_I2C_Write
  2786 ;; This function is called by:
  2787 ;;		_MPU6050_Init
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _MPU6050_Write
  2793  049B                     _MPU6050_Write:
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _MPU6050_Write: [wreg+status,2+status,0+pclath+cstack]
  2797                           ;MPU6050_Write@add stored from wreg
  2798  049B  00F7               	movwf	MPU6050_Write@add
  2799  049C                     l1455:
  2800                           
  2801                           ;MPU6050.c: 34: void MPU6050_Write(unsigned char add,unsigned char data);MPU6050.c: 35: 
      +                          {;MPU6050.c: 36:    I2C_Start();
  2802  049C  120A  118A  251A  120A  118A  	fcall	_I2C_Start
  2803                           
  2804                           ;MPU6050.c: 37:    I2C_Write(0xD0);
  2805  04A1  30D0               	movlw	208
  2806  04A2  120A  118A  24B9  120A  118A  	fcall	_I2C_Write
  2807                           
  2808                           ;MPU6050.c: 38:    I2C_Write(add);
  2809  04A7  0877               	movf	MPU6050_Write@add,w
  2810  04A8  120A  118A  24B9  120A  118A  	fcall	_I2C_Write
  2811                           
  2812                           ;MPU6050.c: 39:    I2C_Write(data);
  2813  04AD  0876               	movf	MPU6050_Write@data,w
  2814  04AE  120A  118A  24B9  120A  118A  	fcall	_I2C_Write
  2815                           
  2816                           ;MPU6050.c: 40:    I2C_Stop();
  2817  04B3  120A  118A  250D  120A  118A  	fcall	_I2C_Stop
  2818  04B8                     l108:
  2819  04B8  0008               	return
  2820  04B9                     __end_of_MPU6050_Write:
  2821                           
  2822                           	psect	text15
  2823  04B9                     __ptext15:	
  2824 ;; *************** function _I2C_Write *****************
  2825 ;; Defined at:
  2826 ;;		line 83 in file "I2C.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  Tvalue          1    wreg     unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  Tvalue          1    5[COMMON] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       0       0       0       0
  2841 ;;      Locals:         1       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         1       0       0       0       0
  2844 ;;Total ram usage:        1 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 3
  2847 ;; This function calls:
  2848 ;;		_I2C_Idle
  2849 ;; This function is called by:
  2850 ;;		_MPU6050_Write
  2851 ;;		_MPU6050_Read
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _I2C_Write
  2857  04B9                     _I2C_Write:
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2861                           ;I2C_Write@Tvalue stored from wreg
  2862  04B9  00F5               	movwf	I2C_Write@Tvalue
  2863  04BA                     l1393:
  2864                           
  2865                           ;I2C.c: 83: void I2C_Write(unsigned char Tvalue);I2C.c: 84: {;I2C.c: 86:     I2C_Idle();
  2866  04BA  120A  118A  22FF  120A  118A  	fcall	_I2C_Idle
  2867  04BF                     l1395:
  2868                           
  2869                           ;I2C.c: 88:     SSPCONbits.WCOL = 0;
  2870  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2871  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2872  04C1  1394               	bcf	20,7	;volatile
  2873  04C2                     l1397:
  2874                           
  2875                           ;I2C.c: 90:     SSPBUF = Tvalue;
  2876  04C2  0875               	movf	I2C_Write@Tvalue,w
  2877  04C3  0093               	movwf	19	;volatile
  2878  04C4                     l1399:
  2879                           
  2880                           ;I2C.c: 92:     PIR1bits.SSPIF = 0;
  2881  04C4  118C               	bcf	12,3	;volatile
  2882  04C5                     l70:	
  2883                           ;I2C.c: 94:     while(PIR1bits.SSPIF == 0);
  2884                           
  2885  04C5  1D8C               	btfss	12,3	;volatile
  2886  04C6  2CC8               	goto	u751
  2887  04C7  2CC9               	goto	u750
  2888  04C8                     u751:
  2889  04C8  2CC5               	goto	l70
  2890  04C9                     u750:
  2891  04C9                     l72:
  2892                           
  2893                           ;I2C.c: 96:     if(SSPCON2bits.ACKSTAT == 1)
  2894  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2895  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2896  04CB  1F11               	btfss	17,6	;volatile
  2897  04CC  2CCE               	goto	u761
  2898  04CD  2CCF               	goto	u760
  2899  04CE                     u761:
  2900  04CE  2CD2               	goto	l74
  2901  04CF                     u760:
  2902  04CF                     l1401:
  2903                           
  2904                           ;I2C.c: 97:     {;I2C.c: 98:         PIR1bits.SSPIF = 0;
  2905  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2906  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2907  04D1  118C               	bcf	12,3	;volatile
  2908  04D2                     l74:
  2909  04D2  0008               	return
  2910  04D3                     __end_of_I2C_Write:
  2911                           
  2912                           	psect	text16
  2913  050D                     __ptext16:	
  2914 ;; *************** function _I2C_Stop *****************
  2915 ;; Defined at:
  2916 ;;		line 46 in file "I2C.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 3
  2937 ;; This function calls:
  2938 ;;		_I2C_Idle
  2939 ;; This function is called by:
  2940 ;;		_MPU6050_Write
  2941 ;;		_MPU6050_Read
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _I2C_Stop
  2947  050D                     _I2C_Stop:
  2948  050D                     l1365:	
  2949                           ;incstack = 0
  2950                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2951                           
  2952                           
  2953                           ;I2C.c: 48:     I2C_Idle();
  2954  050D  120A  118A  22FF  120A  118A  	fcall	_I2C_Idle
  2955  0512                     l1367:
  2956                           
  2957                           ;I2C.c: 49:     SSPCON2bits.PEN = 1;
  2958  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0514  1511               	bsf	17,2	;volatile
  2961  0515                     l54:	
  2962                           ;I2C.c: 50:     while(SSPCON2bits.PEN);
  2963                           
  2964  0515  1911               	btfsc	17,2	;volatile
  2965  0516  2D18               	goto	u711
  2966  0517  2D19               	goto	u710
  2967  0518                     u711:
  2968  0518  2D15               	goto	l54
  2969  0519                     u710:
  2970  0519                     l57:
  2971  0519  0008               	return
  2972  051A                     __end_of_I2C_Stop:
  2973                           
  2974                           	psect	text17
  2975  051A                     __ptext17:	
  2976 ;; *************** function _I2C_Start *****************
  2977 ;; Defined at:
  2978 ;;		line 32 in file "I2C.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 3
  2999 ;; This function calls:
  3000 ;;		_I2C_Idle
  3001 ;; This function is called by:
  3002 ;;		_MPU6050_Write
  3003 ;;		_MPU6050_Read
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function _I2C_Start
  3009  051A                     _I2C_Start:
  3010  051A                     l1361:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3013                           
  3014                           
  3015                           ;I2C.c: 34:     I2C_Idle();
  3016  051A  120A  118A  22FF  120A  118A  	fcall	_I2C_Idle
  3017  051F                     l1363:
  3018                           
  3019                           ;I2C.c: 35:     SSPCON2bits.SEN = 1;
  3020  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3021  0520  1303               	bcf	3,6	;RP1=0, select bank1
  3022  0521  1411               	bsf	17,0	;volatile
  3023  0522                     l42:	
  3024                           ;I2C.c: 36:     while(SSPCON2bits.SEN);
  3025                           
  3026  0522  1811               	btfsc	17,0	;volatile
  3027  0523  2D25               	goto	u701
  3028  0524  2D26               	goto	u700
  3029  0525                     u701:
  3030  0525  2D22               	goto	l42
  3031  0526                     u700:
  3032  0526                     l45:
  3033  0526  0008               	return
  3034  0527                     __end_of_I2C_Start:
  3035                           
  3036                           	psect	text18
  3037  02FF                     __ptext18:	
  3038 ;; *************** function _I2C_Idle *****************
  3039 ;; Defined at:
  3040 ;;		line 23 in file "I2C.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0
  3056 ;;      Temps:          3       0       0       0       0
  3057 ;;      Totals:         3       0       0       0       0
  3058 ;;Total ram usage:        3 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_I2C_Start
  3065 ;;		_I2C_Stop
  3066 ;;		_I2C_Read
  3067 ;;		_I2C_Write
  3068 ;;		_I2C_Restart
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _I2C_Idle
  3074  02FF                     _I2C_Idle:
  3075  02FF                     l1349:	
  3076                           ;incstack = 0
  3077                           ; Regs used in _I2C_Idle: [wreg+status,2+status,0]
  3078                           
  3079  02FF                     l1351:	
  3080                           ;I2C.c: 25:     while(SSPSTATbits.R_W | SSPCON2bits.SEN);
  3081                           
  3082  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  3083  0300  1303               	bcf	3,6	;RP1=0, select bank1
  3084  0301  0811               	movf	17,w	;volatile
  3085  0302  3901               	andlw	1
  3086  0303  00F2               	movwf	??_I2C_Idle
  3087  0304  0C14               	rrf	20,w	;volatile
  3088  0305  00F3               	movwf	??_I2C_Idle+1
  3089  0306  0C73               	rrf	??_I2C_Idle+1,w
  3090  0307  3901               	andlw	1
  3091  0308  0472               	iorwf	??_I2C_Idle,w
  3092  0309  1D03               	btfss	3,2
  3093  030A  2B0C               	goto	u651
  3094  030B  2B0D               	goto	u650
  3095  030C                     u651:
  3096  030C  2AFF               	goto	l1351
  3097  030D                     u650:
  3098  030D                     l1353:
  3099  030D  0C11               	rrf	17,w	;volatile
  3100  030E  3901               	andlw	1
  3101  030F  00F2               	movwf	??_I2C_Idle
  3102  0310  0C14               	rrf	20,w	;volatile
  3103  0311  00F3               	movwf	??_I2C_Idle+1
  3104  0312  0C73               	rrf	??_I2C_Idle+1,w
  3105  0313  3901               	andlw	1
  3106  0314  0472               	iorwf	??_I2C_Idle,w
  3107  0315  1D03               	btfss	3,2
  3108  0316  2B18               	goto	u661
  3109  0317  2B19               	goto	u660
  3110  0318                     u661:
  3111  0318  2B0D               	goto	l1353
  3112  0319                     u660:
  3113  0319                     l1355:
  3114  0319  0C11               	rrf	17,w	;volatile
  3115  031A  00F2               	movwf	??_I2C_Idle
  3116  031B  0C72               	rrf	??_I2C_Idle,w
  3117  031C  3901               	andlw	1
  3118  031D  00F3               	movwf	??_I2C_Idle+1
  3119  031E  0C14               	rrf	20,w	;volatile
  3120  031F  00F4               	movwf	??_I2C_Idle+2
  3121  0320  0C74               	rrf	??_I2C_Idle+2,w
  3122  0321  3901               	andlw	1
  3123  0322  0473               	iorwf	??_I2C_Idle+1,w
  3124  0323  1D03               	btfss	3,2
  3125  0324  2B26               	goto	u671
  3126  0325  2B27               	goto	u670
  3127  0326                     u671:
  3128  0326  2B19               	goto	l1355
  3129  0327                     u670:
  3130  0327                     l1357:
  3131  0327  0C11               	rrf	17,w	;volatile
  3132  0328  00F2               	movwf	??_I2C_Idle
  3133  0329  0CF2               	rrf	??_I2C_Idle,f
  3134  032A  0C72               	rrf	??_I2C_Idle,w
  3135  032B  3901               	andlw	1
  3136  032C  00F3               	movwf	??_I2C_Idle+1
  3137  032D  0C14               	rrf	20,w	;volatile
  3138  032E  00F4               	movwf	??_I2C_Idle+2
  3139  032F  0C74               	rrf	??_I2C_Idle+2,w
  3140  0330  3901               	andlw	1
  3141  0331  0473               	iorwf	??_I2C_Idle+1,w
  3142  0332  1D03               	btfss	3,2
  3143  0333  2B35               	goto	u681
  3144  0334  2B36               	goto	u680
  3145  0335                     u681:
  3146  0335  2B27               	goto	l1357
  3147  0336                     u680:
  3148  0336                     l1359:
  3149  0336  0E11               	swapf	17,w	;volatile
  3150  0337  3901               	andlw	1
  3151  0338  00F2               	movwf	??_I2C_Idle
  3152  0339  0C14               	rrf	20,w	;volatile
  3153  033A  00F3               	movwf	??_I2C_Idle+1
  3154  033B  0C73               	rrf	??_I2C_Idle+1,w
  3155  033C  3901               	andlw	1
  3156  033D  0472               	iorwf	??_I2C_Idle,w
  3157  033E  1D03               	btfss	3,2
  3158  033F  2B41               	goto	u691
  3159  0340  2B42               	goto	u690
  3160  0341                     u691:
  3161  0341  2B36               	goto	l1359
  3162  0342                     u690:
  3163  0342                     l39:
  3164  0342  0008               	return
  3165  0343                     __end_of_I2C_Idle:
  3166                           
  3167                           	psect	text19
  3168  04FE                     __ptext19:	
  3169 ;; *************** function _I2C_Init *****************
  3170 ;; Defined at:
  3171 ;;		line 9 in file "I2C.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 2
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_MPU6050_Init
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _I2C_Init
  3201  04FE                     _I2C_Init:
  3202  04FE                     l989:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _I2C_Init: [wreg+status,2]
  3205                           
  3206                           
  3207                           ;I2C.c: 13:     TRISCbits.TRISC3 = 1;
  3208  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3209  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0500  1587               	bsf	7,3	;volatile
  3211                           
  3212                           ;I2C.c: 14:     TRISCbits.TRISC4 = 1;
  3213  0501  1607               	bsf	7,4	;volatile
  3214  0502                     l991:
  3215                           
  3216                           ;I2C.c: 16:     SSPCON = 0x28;
  3217  0502  3028               	movlw	40
  3218  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0505  0094               	movwf	20	;volatile
  3221  0506                     l993:
  3222                           
  3223                           ;I2C.c: 17:     SSPCON2 = 0x00;
  3224  0506  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0507  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0508  0191               	clrf	17	;volatile
  3227  0509                     l995:
  3228                           
  3229                           ;I2C.c: 18:     SSPSTATbits.SMP = 1;
  3230  0509  1794               	bsf	20,7	;volatile
  3231  050A                     l997:
  3232                           
  3233                           ;I2C.c: 20:     SSPADD = ((20000000/4)/400000) - 1;
  3234  050A  300B               	movlw	11
  3235  050B  0093               	movwf	19	;volatile
  3236  050C                     l21:
  3237  050C  0008               	return
  3238  050D                     __end_of_I2C_Init:
  3239                           
  3240                           	psect	text20
  3241  04D3                     __ptext20:	
  3242 ;; *************** function _ISR *****************
  3243 ;; Defined at:
  3244 ;;		line 169 in file "main.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          2       0       0       0       0
  3261 ;;      Totals:         2       0       0       0       0
  3262 ;;Total ram usage:        2 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 1
  3265 ;; This function calls:
  3266 ;;		_Step
  3267 ;; This function is called by:
  3268 ;;		Interrupt level 1
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _ISR
  3274  04D3                     _ISR:
  3275  04D3                     i1l1715:
  3276                           
  3277                           ;main.c: 171:     if(PIR1bits.TMR2IF)
  3278  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3279  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3280  04D5  1C8C               	btfss	12,1	;volatile
  3281  04D6  2CD8               	goto	u120_21
  3282  04D7  2CD9               	goto	u120_20
  3283  04D8                     u120_21:
  3284  04D8  2CE4               	goto	i1l206
  3285  04D9                     u120_20:
  3286  04D9                     i1l1717:
  3287                           
  3288                           ;main.c: 172:     {;main.c: 173:         T2CONbits.TMR2ON = 0;
  3289  04D9  1112               	bcf	18,2	;volatile
  3290  04DA                     i1l1719:
  3291                           
  3292                           ;main.c: 174:         Step();
  3293  04DA  120A  118A  2270  120A  118A  	fcall	_Step
  3294  04DF                     i1l1721:
  3295                           
  3296                           ;main.c: 175:         TMR2 = 0;
  3297  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3298  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  3299  04E1  0191               	clrf	17	;volatile
  3300  04E2                     i1l1723:
  3301                           
  3302                           ;main.c: 176:         T2CONbits.TMR2ON = 1;
  3303  04E2  1512               	bsf	18,2	;volatile
  3304  04E3                     i1l1725:
  3305                           
  3306                           ;main.c: 177:         PIR1bits.TMR2IF = 0;
  3307  04E3  108C               	bcf	12,1	;volatile
  3308  04E4                     i1l206:
  3309  04E4  0871               	movf	??_ISR+1,w
  3310  04E5  008A               	movwf	10
  3311  04E6  0E70               	swapf	??_ISR,w
  3312  04E7  0083               	movwf	3
  3313  04E8  0EFE               	swapf	btemp,f
  3314  04E9  0E7E               	swapf	btemp,w
  3315  04EA  0009               	retfie
  3316  04EB                     __end_of_ISR:
  3317                           
  3318                           	psect	intentry
  3319  0004                     __pintentry:	
  3320                           ;incstack = 0
  3321                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3322                           
  3323  0004                     interrupt_function:
  3324  007E                     saved_w	set	btemp
  3325  0004  00FE               	movwf	btemp
  3326  0005  0E03               	swapf	3,w
  3327  0006  00F0               	movwf	??_ISR
  3328  0007  080A               	movf	10,w
  3329  0008  00F1               	movwf	??_ISR+1
  3330  0009  120A  118A  2CD3   	ljmp	_ISR
  3331                           
  3332                           	psect	text21
  3333  0270                     __ptext21:	
  3334 ;; *************** function _Step *****************
  3335 ;; Defined at:
  3336 ;;		line 89 in file "main.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0
  3353 ;;      Totals:         0       0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_ISR
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _Step
  3365  0270                     _Step:
  3366  0270                     i1l1637:	
  3367                           ;incstack = 0
  3368                           ; Regs used in _Step: [wreg+status,2+status,0]
  3369                           
  3370                           
  3371                           ;main.c: 91:     if (Dir_M1 != 0)
  3372  0270  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0271  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0272  086E               	movf	_Dir_M1,w
  3375  0273  1903               	btfsc	3,2
  3376  0274  2A76               	goto	u113_21
  3377  0275  2A77               	goto	u113_20
  3378  0276                     u113_21:
  3379  0276  2A96               	goto	i1l1647
  3380  0277                     u113_20:
  3381  0277                     i1l1639:
  3382                           
  3383                           ;main.c: 92:     {;main.c: 93:         Count1_timer0++;
  3384  0277  3001               	movlw	1
  3385  0278  07FA               	addwf	_Count1_timer0,f	;volatile
  3386  0279  1803               	skipnc
  3387  027A  0AFB               	incf	_Count1_timer0+1,f	;volatile
  3388  027B  3000               	movlw	0
  3389  027C  07FB               	addwf	_Count1_timer0+1,f	;volatile
  3390                           
  3391                           ;main.c: 94:         if (Count1_timer0 <= Count_TOP1) PORTDbits.RD6 = 1;
  3392  027D  087B               	movf	_Count1_timer0+1,w	;volatile
  3393  027E  026A               	subwf	_Count_TOP1+1,w
  3394  027F  1D03               	skipz
  3395  0280  2A83               	goto	u114_25
  3396  0281  087A               	movf	_Count1_timer0,w	;volatile
  3397  0282  0269               	subwf	_Count_TOP1,w
  3398  0283                     u114_25:
  3399  0283  1C03               	skipc
  3400  0284  2A86               	goto	u114_21
  3401  0285  2A87               	goto	u114_20
  3402  0286                     u114_21:
  3403  0286  2A89               	goto	i1l185
  3404  0287                     u114_20:
  3405  0287                     i1l1641:
  3406  0287  1708               	bsf	8,6	;volatile
  3407  0288  2A8A               	goto	i1l1643
  3408  0289                     i1l185:	
  3409                           ;main.c: 95:         else PORTDbits.RD6 = 0;
  3410                           
  3411  0289  1308               	bcf	8,6	;volatile
  3412  028A                     i1l1643:
  3413                           
  3414                           ;main.c: 96:         if (Count1_timer0 >= Count_BOT1)
  3415  028A  0868               	movf	_Count_BOT1+1,w
  3416  028B  027B               	subwf	_Count1_timer0+1,w	;volatile
  3417  028C  1D03               	skipz
  3418  028D  2A90               	goto	u115_25
  3419  028E  0867               	movf	_Count_BOT1,w
  3420  028F  027A               	subwf	_Count1_timer0,w	;volatile
  3421  0290                     u115_25:
  3422  0290  1C03               	skipc
  3423  0291  2A93               	goto	u115_21
  3424  0292  2A94               	goto	u115_20
  3425  0293                     u115_21:
  3426  0293  2A96               	goto	i1l1647
  3427  0294                     u115_20:
  3428  0294                     i1l1645:
  3429                           
  3430                           ;main.c: 97:         {;main.c: 98:             Count1_timer0 = 0;
  3431  0294  01FA               	clrf	_Count1_timer0	;volatile
  3432  0295  01FB               	clrf	_Count1_timer0+1	;volatile
  3433  0296                     i1l1647:
  3434                           
  3435                           ;main.c: 101:     if (Dir_M2 != 0)
  3436  0296  086D               	movf	_Dir_M2,w
  3437  0297  1903               	btfsc	3,2
  3438  0298  2A9A               	goto	u116_21
  3439  0299  2A9B               	goto	u116_20
  3440  029A                     u116_21:
  3441  029A  2ABA               	goto	i1l192
  3442  029B                     u116_20:
  3443  029B                     i1l1649:
  3444                           
  3445                           ;main.c: 102:     {;main.c: 103:         Count2_timer0++;
  3446  029B  3001               	movlw	1
  3447  029C  07EB               	addwf	_Count2_timer0,f	;volatile
  3448  029D  1803               	skipnc
  3449  029E  0AEC               	incf	_Count2_timer0+1,f	;volatile
  3450  029F  3000               	movlw	0
  3451  02A0  07EC               	addwf	_Count2_timer0+1,f	;volatile
  3452                           
  3453                           ;main.c: 104:         if (Count2_timer0 <= Count_TOP2) PORTDbits.RD7 = 1;
  3454  02A1  086C               	movf	_Count2_timer0+1,w	;volatile
  3455  02A2  0266               	subwf	_Count_TOP2+1,w
  3456  02A3  1D03               	skipz
  3457  02A4  2AA7               	goto	u117_25
  3458  02A5  086B               	movf	_Count2_timer0,w	;volatile
  3459  02A6  0265               	subwf	_Count_TOP2,w
  3460  02A7                     u117_25:
  3461  02A7  1C03               	skipc
  3462  02A8  2AAA               	goto	u117_21
  3463  02A9  2AAB               	goto	u117_20
  3464  02AA                     u117_21:
  3465  02AA  2AAD               	goto	i1l189
  3466  02AB                     u117_20:
  3467  02AB                     i1l1651:
  3468  02AB  1788               	bsf	8,7	;volatile
  3469  02AC  2AAE               	goto	i1l1653
  3470  02AD                     i1l189:	
  3471                           ;main.c: 105:         else PORTDbits.RD7 = 0;
  3472                           
  3473  02AD  1388               	bcf	8,7	;volatile
  3474  02AE                     i1l1653:
  3475                           
  3476                           ;main.c: 106:         if (Count2_timer0 >= Count_BOT2)
  3477  02AE  0864               	movf	_Count_BOT2+1,w
  3478  02AF  026C               	subwf	_Count2_timer0+1,w	;volatile
  3479  02B0  1D03               	skipz
  3480  02B1  2AB4               	goto	u118_25
  3481  02B2  0863               	movf	_Count_BOT2,w
  3482  02B3  026B               	subwf	_Count2_timer0,w	;volatile
  3483  02B4                     u118_25:
  3484  02B4  1C03               	skipc
  3485  02B5  2AB7               	goto	u118_21
  3486  02B6  2AB8               	goto	u118_20
  3487  02B7                     u118_21:
  3488  02B7  2ABA               	goto	i1l192
  3489  02B8                     u118_20:
  3490  02B8                     i1l1655:
  3491                           
  3492                           ;main.c: 107:         {;main.c: 108:             Count2_timer0 = 0;
  3493  02B8  01EB               	clrf	_Count2_timer0	;volatile
  3494  02B9  01EC               	clrf	_Count2_timer0+1	;volatile
  3495  02BA                     i1l192:
  3496  02BA  0008               	return
  3497  02BB                     __end_of_Step:
  3498  007E                     btemp	set	126	;btemp
  3499  007E                     wtemp0	set	126
  3500                           
  3501                           	psect	config
  3502                           
  3503                           ;Config register CONFIG @ 0x2007
  3504                           ;	Oscillator Selection bits
  3505                           ;	FOSC = HS, HS oscillator
  3506                           ;	Watchdog Timer Enable bit
  3507                           ;	WDTE = OFF, WDT disabled
  3508                           ;	Power-up Timer Enable bit
  3509                           ;	PWRTE = OFF, PWRT disabled
  3510                           ;	Brown-out Reset Enable bit
  3511                           ;	BOREN = OFF, BOR disabled
  3512                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3513                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3514                           ;	Data EEPROM Memory Code Protection bit
  3515                           ;	CPD = OFF, Data EEPROM code protection off
  3516                           ;	Flash Program Memory Write Enable bits
  3517                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3518                           ;	In-Circuit Debugger Mode bit
  3519                           ;	DEBUG = 0x1, unprogrammed default
  3520                           ;	Flash Program Memory Code Protection bit
  3521                           ;	CP = OFF, Code protection off
  3522  2007                     	org	8199
  3523  2007  3F3A               	dw	16186

Data Sizes:
    Strings     14
    Constant    10
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     63      80
    BANK1            80      0      54
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Readvalue@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Transmit_Text@str	PTR unsigned char  size(1) Largest target is 50
		 -> RX_Buffer(BANK1[50]), MPU6050_Readvalue@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _Speed_M2->___awdiv
    _Speed_M1->___awdiv
    _MPU6050_Readvalue->_MPU6050_Read
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _UART_Transmit_Text->_UART_Transmit
    _MPU6050_Read->_I2C_Read
    _I2C_Read->_I2C_Idle
    _MPU6050_Init->_MPU6050_Write
    _MPU6050_Write->_I2C_Write
    _I2C_Write->_I2C_Idle
    _I2C_Stop->_I2C_Idle
    _I2C_Start->_I2C_Idle

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MPU6050_Readvalue
    _Speed_M2->___awdiv
    _Speed_M1->___awdiv
    _MPU6050_Readvalue->_sprintf
    _sprintf->___lwmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4974
                       _MPU6050_Init
                  _MPU6050_Readvalue
                           _Speed_M1
                           _Speed_M2
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Speed_M2                                             4     2      2    1261
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _Speed_M1                                             4     2      2    1261
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Readvalue                                   44    44      0    2006
                                             19 BANK0     44    44      0
                       _MPU6050_Read
                 _UART_Transmit_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1548
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit_Text                                   3     3      0     178
                                              3 COMMON     3     3      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read                                         7     5      2     154
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             3     3      0      67
                                              5 COMMON     3     3      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0     446
                                              0 BANK0      3     3      0
                           _I2C_Init
                      _MPU6050_Write
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write                                        2     1      1     446
                                              6 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              5 COMMON     1     1      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_Idle                                             3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                               _Step
 ---------------------------------------------------------------------------------
 (6) _Step                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Init
     _MPU6050_Write
       _I2C_Start
         _I2C_Idle
       _I2C_Stop
         _I2C_Idle
       _I2C_Write
         _I2C_Idle
   _MPU6050_Readvalue
     _MPU6050_Read
       _I2C_Read
         _I2C_Idle
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _UART_Transmit_Text
       _UART_Transmit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Speed_M1
     ___awdiv
   _Speed_M2
     ___awdiv
   _UART_Init

 _ISR (ROOT)
   _Step

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      92       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      36       7       67.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      92      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 24 22:33:35 2022

                          pc 0002           __size_of_I2C_Start 000D                  _SSPSTATbits 0094  
         __size_of_I2C_Write 001A                           l21 050C                           l42 0522  
                         l60 0442                           l45 0526                           l54 0515  
                         l70 04C5                           l39 0342                           l63 044F  
                         l72 04C9                           l57 0519                           l74 04D2  
                         l67 045E                 ___awdiv@sign 0021                           fsr 0004  
                        l111 03C4                          l114 0384                          l108 04B8  
                        l117 0434                          l240 0528                          l243 0532  
                        l181 01D2                          l237 04FD                          l174 0224  
                        l249 049A                          l530 0178                          l373 010F  
                        l649 02FE                          l659 0400                          l991 0502  
                        l993 0506                          l995 0509                          l997 050A  
                        l989 04FE                          _PR2 0092                          u700 0526  
                        _ISR 04D3                          u701 0525                          u710 0519  
                        u711 0518                          u720 0446                          u800 02D5  
                        u721 0445                          u801 02D4                          u650 030D  
                        u730 0453                          u651 030C                          u731 0452  
                        u660 0319                          u740 045C                          u820 02E6  
                        u661 0318                          u741 045B                          u821 02E5  
                        u670 0327                          u750 04C9                          u671 0326  
                        u751 04C8                          u815 02D6                          u680 0336  
                        u760 04CF                          u840 02FA                          u681 0335  
                        u761 04CE                          u841 02F9                          u825 02E2  
                        u690 0342                          u770 052E                          u691 0341  
                        u771 052D                          u835 02EE                          u780 02C3  
                        u781 02C2                          u795 02C7                          u980 049A  
                        u981 0499                          fsr0 0004                          indf 0000  
                       ?_ISR 0070                         l1201 04EB                         l2001 0247  
                       l1211 04FA                         l1203 04EF                         l2011 024E  
                       l2003 0248                         l1205 04F1                         l2021 0261  
                       l2013 024F                         l2005 0249                         l1207 04F4  
                       l2015 0250                         l2007 024A                         l1401 04CF  
                       l1209 04F7                         l2017 0251                         l2009 024D  
                       l1403 0528                         l1411 02C3                         l2043 0053  
                       l2019 0256                         l1405 052E                         l1421 02E6  
                       l1413 02C6                         l1351 02FF                         l1423 02EC  
                       l1415 02CD                         l1407 02BB                         l1353 030D  
                       l1361 051A                         l1425 02ED                         l1417 02D1  
                       l1409 02BD                         l1355 0319                         l1363 051F  
                       l1371 043B                         l1531 048F                         l1427 02F4  
                       l1419 02D5                         l1357 0327                         l1349 02FF  
                       l1365 050D                         l1381 044C                         l1373 043E  
                       l1525 047E                         l1429 02FA                         l1359 0336  
                       l1367 0512                         l1455 049C                         l1383 0453  
                       l1375 043F                         l1527 0480                         l1393 04BA  
                       l1385 0457                         l1377 0446                         l1369 0436  
                       l1529 048B                         l1395 04BF                         l1387 045C  
                       l1379 044B                         l1811 0040                         l1803 0029  
                       l1397 04C2                         l1389 045D                         l1821 006A  
                       l1805 002E                         l1901 016A                         l1399 04C4  
                       l1911 0351                         l1823 006E                         l1815 0041  
                       l1807 0034                         l1903 016F                         l1921 0378  
                       l1913 0356                         l1841 00A5                         l1833 0079  
                       l1825 0072                         l1817 005E                         l1809 003B  
                       l1905 0174                         l1915 0362                         l1851 00EC  
                       l1843 00AC                         l1827 0077                         l1819 0066  
                       l1931 0433                         l1923 0401                         l1917 036A  
                       l1909 0343                         l1781 03D7                         l1853 00F0  
                       l1845 00B0                         l1837 0095                         l1925 0402  
                       l1941 01FB                         l1933 01D3                         l1919 0371  
                       l1791 03F6                         l1783 03DB                         l1775 03C5  
                       l1847 00B5                         l1839 009F                         l1855 00F9  
                       l1927 041F                         l1871 011C                         l1943 0208  
                       l1935 01D9                         l1951 0179                         l1785 03DF  
                       l1777 03CD                         l1793 03FC                         l1849 00E5  
                       l1857 010B                         l1929 042D                         l1881 012D  
                       l1873 011E                         l1865 0110                         l1945 020D  
                       l1937 01DC                         l1961 01AE                         l1953 017F  
                       l1787 03E9                         l1779 03D0                         l1891 0145  
                       l1883 0133                         l1875 0122                         l1867 0113  
                       l1947 0211                         l1939 01E7                         l1963 01B3  
                       l1955 0182                         l1971 022F                         l1797 0388  
                       l1789 03EF                         l1893 0156                         l1885 0136  
                       l1877 0127                         l1869 0117                         l1949 021D  
                       l1965 01B7                         l1957 018D                         l1981 0238  
                       l1973 0232                         l1799 03BE                         l1895 015C  
                       l1887 013D                         l1879 012B                         l1967 01CB  
                       l1959 01A1                         l1991 0242                         l1983 0239  
                       l1975 0233                         l1897 015D                         l1889 0141  
                       l1993 0243                         l1985 023B                         l1977 0234  
                       l1969 0225                         l1899 0164                         l1995 0244  
                       l1987 023E                         l1979 0237                         l1997 0245  
                       l1989 023F                         l1999 0246                         STR_1 046F  
                       _CREN 00C4                         u1300 0034                         u1301 0033  
                       u1310 006E                         u1311 006D                         u1240 03CD  
                       u1320 0094                         u1241 03CC                         u1321 0093  
                       u1330 009F                         u1410 0145                         u1331 009E  
                       u1411 0144                         u1260 03DF                         u1340 00A5  
                       u1500 01AE                         u1261 03DE                         u1341 00A4  
                       u1325 0090                         u1405 0137                         u1501 01AD  
                       u1270 03E9                         u1350 00F9                         u1430 0156  
                       u1271 03E8                         u1255 03D1                         u1351 00F8  
                       u1431 0155                         u1360 010B                         u1361 010A  
                       u1425 0146                         u1505 01AA                         u1290 03FC  
                       u1450 016A                         u1370 0117                         u1291 03FB  
                       u1275 03E5                         u1451 0169                         u1435 0152  
                       u1371 0116                         u1460 016F                         u1380 0122  
                       u1517 034B                         u1285 03F0                         u1461 016E  
                       u1445 015E                         u1381 0121                         u1390 0133  
                       u1470 01D9                         u1391 0132                         u1471 01D8  
                       u1480 0208                         u1481 0207                         u1490 017F  
                       u1491 017E           MPU6050_Read@retval 0023                         u1485 0204  
                       _RCIE 0465                         _RCIF 0065                         _TMR2 0011  
                       _SPEN 00C7                         _TRMT 04C1                         _TXEN 04C5  
                       _Step 0270       __size_of_MPU6050_Write 001E                         _main 0225  
           __end_of_I2C_Idle 0343             __end_of_I2C_Init 050D             __end_of_I2C_Read 045F  
                       btemp 007E             __end_of_I2C_Stop 051A                         start 000C  
 __end_of_UART_Transmit_Text 049B                        ??_ISR 0070                        ?_Step 0070  
                      ?_main 0070              __end_of___awdiv 0179              ___awdiv@divisor 0072  
            __end_of___lwdiv 02FF                        i1l206 04E4                        i1l192 02BA  
                      i1l185 0289              __end_of___lwmod 0401                        i1l189 02AD  
            ___awdiv@counter 0020                        _RCREG 001A                        _SPBRG 0099  
                      _TXREG 0019                        _Step1 005F                        _Step2 00A0  
         __size_of_UART_Init 0013                ?_MPU6050_Init 0070                ?_MPU6050_Read 0078  
            __end_of_dpowers 046F            __end_of_I2C_Start 0527            __end_of_I2C_Write 04D3  
                      pclath 000A                   _Count_BOT1 0067                   _Count_BOT2 0063  
                 _Count_TOP1 0069                   _Count_TOP2 0065                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0110              __initialization 000F  
               __end_of_Step 02BB                 __end_of_main 0270                       ??_Step 0070  
              _MPU6050_Write 049B                       ??_main 007A            MPU6050_Write@data 0076  
           __end_of_Speed_M1 0225             __end_of_Speed_M2 01D3               ??_MPU6050_Init 0020  
             ??_MPU6050_Read 0020             ___awdiv@dividend 0074                       u120_20 04D9  
                     u120_21 04D8                       u113_20 0277                       i1l1641 0287  
                     u113_21 0276                       i1l1721 04DF                       i1l1651 02AB  
                     i1l1643 028A                       i1l1723 04E2                       i1l1715 04D3  
                     i1l1653 02AE                       i1l1645 0294                       i1l1637 0270  
                     i1l1725 04E3                       i1l1717 04D9                       i1l1655 02B8  
                     i1l1639 0277                       i1l1647 0296                       i1l1719 04DA  
                     u114_20 0287                       i1l1649 029B                       u114_21 0286  
                     u114_25 0283                       u115_20 0294                       u115_21 0293  
                     u115_25 0290                       u116_20 029B                       u116_21 029A  
                     u117_20 02AB                       u117_21 02AA                       u117_25 02A7  
                     u118_20 02B8                       u118_21 02B7                       u118_25 02B4  
        MPU6050_Readvalue@Ax 005D                       _SSPADD 0093                       _SSPCON 0014  
                     _SSPBUF 0013                       _Dir_M1 006E                       _Dir_M2 006D  
          __end_of_UART_Init 04FE                    ??___awdiv 0076                    ??___lwdiv 0076  
                  ??___lwmod 0024               ?_MPU6050_Write 0076             ___awdiv@quotient 0022  
                  ?_I2C_Idle 0070                    ?_I2C_Init 0070                    ?_I2C_Read 0070  
                  ?_I2C_Stop 0070              I2C_Write@Tvalue 0075                       saved_w 007E  
                  ??_sprintf 0029      __end_of__initialization 0022              MPU6050_Read@add 0022  
      __end_of_UART_Transmit 0533               __pcstackCOMMON 0070                   ??_I2C_Idle 0072  
                 ??_I2C_Init 0072                   ??_I2C_Read 0075                   ??_I2C_Stop 0075  
                 __pbssBANK0 005F                   __pbssBANK1 00A0               I2C_Read@Rvalue 0076  
                 __pmaintext 0225                    ?_Speed_M1 0024                    ?_Speed_M2 0024  
       __end_of_MPU6050_Init 0385         __end_of_MPU6050_Read 03C5              ??_MPU6050_Write 0077  
                 __pintentry 0004            _MPU6050_Readvalue 0401           _UART_Transmit_Text 047D  
         ?_MPU6050_Readvalue 0070                      _SSPCON2 0091                   __stringtab 045F  
        ?_UART_Transmit_Text 0070          ??_MPU6050_Readvalue 0033                    _I2C_Start 051A  
                  _I2C_Write 04B9                   ??_Speed_M1 0077                   ??_Speed_M2 0077  
                    ___awdiv 0110                      ___lwdiv 02BB                      ___lwmod 03C5  
       ??_UART_Transmit_Text 0073                      __ptext1 04EB                      __ptext2 0179  
                    __ptext3 01D3                      __ptext4 0110                      __ptext5 0401  
                    __ptext6 0026                      __ptext7 03C5                      __ptext8 02BB  
                    __ptext9 047D    __end_of_MPU6050_Readvalue 0435                 __size_of_ISR 0018  
                    _dpowers 0465                    _T2CONbits 0012                      _sprintf 0026  
                    clrloop0 0534         end_of_initialization 0022                   ?_I2C_Start 0070  
                 ?_I2C_Write 0070               UART_Transmit@c 0072                    _UART_Init 04EB  
                  _PORTBbits 0006                    _PORTDbits 0008                    _TRISBbits 0086  
                  _TRISCbits 0087                    _TRISDbits 0088            __size_of_I2C_Idle 0044  
          __size_of_I2C_Init 000F            __size_of_I2C_Read 002A            __size_of_I2C_Stop 000D  
      __size_of_MPU6050_Init 0042        __size_of_MPU6050_Read 0040                    _RX_Buffer 00A4  
                 ?_UART_Init 0070   __size_of_MPU6050_Readvalue 0034          start_initialization 000F  
                __end_of_ISR 04EB                 _MPU6050_Init 0343                 _MPU6050_Read 0385  
           MPU6050_Write@add 0077                  ??_I2C_Start 0075                  ??_I2C_Write 0075  
                  Speed_M1@x 0024                    Speed_M2@x 0024            __size_of_Speed_M1 0052  
          __size_of_Speed_M2 005A                  __pbssCOMMON 007A                    ___latbits 0002  
     __size_of_UART_Transmit 000C                __pcstackBANK0 0020                  sprintf@flag 002D  
                sprintf@prec 002E                  I2C_Read@ACK 0077             ___lwdiv@dividend 0074  
                   ?___awdiv 0072                     ?___lwdiv 0072                     ?___lwmod 0020  
      __end_of_MPU6050_Write 04B9                  ??_UART_Init 0072                    __pstrings 045F  
                   _I2C_Idle 02FF                     _I2C_Init 04FE                     _I2C_Read 0435  
                   _I2C_Stop 050D             ___lwdiv@quotient 0077                     ?_sprintf 0026  
          interrupt_function 0004                    clear_ram0 0533                     _PIE1bits 008C  
              _UART_Transmit 0527                     _PIR1bits 000C          UART_Transmit_Text@i 0074  
__size_of_UART_Transmit_Text 001E                  __stringbase 0464               ?_UART_Transmit 0070  
                   _Speed_M1 01D3                     _Speed_M2 0179             __size_of___awdiv 0069  
           __size_of___lwdiv 0044             __size_of___lwmod 003C           __end_of__stringtab 0465  
                 sprintf@val 002F              ___lwdiv@divisor 0072              ___lwdiv@counter 0079  
                   __ptext10 0527                     __ptext11 0385                     __ptext20 04D3  
                   __ptext12 0435                     __ptext21 0270                     __ptext13 0343  
                   __ptext14 049B                     __ptext15 04B9                     __ptext16 050D  
                   __ptext17 051A                     __ptext18 02FF                     __ptext19 04FE  
           __size_of_sprintf 00EA                __size_of_Step 004B                __size_of_main 004B  
                   _rx_index 006F                _Count1_timer0 007A                _Count2_timer0 006B  
                 _INTCONbits 000B                     intlevel1 0000                    sprintf@ap 002C  
                  sprintf@sp 0031             ___lwmod@dividend 0022              ??_UART_Transmit 0072  
                  stringcode 045F        UART_Transmit_Text@str 0075                     sprintf@c 0032  
                   sprintf@f 0026              ___lwmod@divisor 0020              ___lwmod@counter 0025  
                   stringdir 045F                     stringtab 045F                  _SSPCON2bits 0091  
    MPU6050_Readvalue@buffer 0035                   _SSPCONbits 0014  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 22 08:15:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 02/02/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	strings
   170  0003                     __pstrings:
   171  0003                     stringtab:
   172  0003                     __stringtab:
   173  0003                     stringcode:	
   174                           ;	String table - string pointers are 1 byte each
   175                           
   176  0003                     stringdir:
   177  0003  3000               	movlw	high stringdir
   178  0004  008A               	movwf	10
   179  0005  0804               	movf	4,w
   180  0006  0A84               	incf	4,f
   181  0007  0782               	addwf	2,f
   182  0008                     __stringbase:
   183  0008  3400               	retlw	0
   184  0009                     __end_of__stringtab:
   185  0009                     _Number:
   186  0009  34C0               	retlw	192
   187  000A  34F9               	retlw	249
   188  000B  34A4               	retlw	164
   189  000C  34B0               	retlw	176
   190  000D  3499               	retlw	153
   191  000E  3492               	retlw	146
   192  000F  3482               	retlw	130
   193  0010  34F8               	retlw	248
   194  0011  3480               	retlw	128
   195  0012  3490               	retlw	144
   196  0013                     __end_of_Number:
   197  0001                     _TMR0	set	1
   198  0007                     _PORTCbits	set	7
   199  0006                     _PORTB	set	6
   200  0087                     _TRISCbits	set	135
   201  0085                     _TRISAbits	set	133
   202  0086                     _TRISB	set	134
   203  0081                     _OPTION_REGbits	set	129
   204                           
   205                           	psect	cinit
   206  07FC                     start_initialization:	
   207                           ; #config settings
   208                           
   209  07FC                     __initialization:
   210  07FC                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213  07FC                     __end_of__initialization:
   214  07FC  0183               	clrf	3
   215  07FD  120A  118A  2F8C   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMMON
   218  0070                     __pcstackCOMMON:
   219  0070                     ?_main:
   220  0070                     ?___awdiv:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?___awmod:	
   224                           ; 2 bytes @ 0x0
   225                           
   226  0070                     ___awdiv@divisor:	
   227                           ; 2 bytes @ 0x0
   228                           
   229  0070                     ___awmod@divisor:	
   230                           ; 2 bytes @ 0x0
   231                           
   232                           
   233                           ; 2 bytes @ 0x0
   234  0070                     	ds	2
   235  0072                     ___awdiv@dividend:
   236  0072                     ___awmod@dividend:	
   237                           ; 2 bytes @ 0x2
   238                           
   239                           
   240                           ; 2 bytes @ 0x2
   241  0072                     	ds	2
   242  0074                     ??___awdiv:
   243  0074                     ??___awmod:	
   244                           ; 1 bytes @ 0x4
   245                           
   246                           
   247                           ; 1 bytes @ 0x4
   248  0074                     	ds	1
   249  0075                     ___awdiv@counter:
   250  0075                     ___awmod@counter:	
   251                           ; 1 bytes @ 0x5
   252                           
   253                           
   254                           ; 1 bytes @ 0x5
   255  0075                     	ds	1
   256  0076                     ___awdiv@sign:
   257  0076                     ___awmod@sign:	
   258                           ; 1 bytes @ 0x6
   259                           
   260                           
   261                           ; 1 bytes @ 0x6
   262  0076                     	ds	1
   263  0077                     ___awdiv@quotient:
   264                           
   265                           ; 2 bytes @ 0x7
   266  0077                     	ds	2
   267  0079                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x9
   270  0079                     	ds	2
   271  007B                     main@i:
   272                           
   273                           ; 1 bytes @ 0xB
   274  007B                     	ds	1
   275                           
   276                           	psect	maintext
   277  078C                     __pmaintext:	
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 28 in file "newmain.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  i               1   11[COMMON] unsigned char 
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         1       0       0       0       0
   299 ;;      Temps:          2       0       0       0       0
   300 ;;      Totals:         3       0       0       0       0
   301 ;;Total ram usage:        3 bytes
   302 ;; Hardware stack levels required when called: 1
   303 ;; This function calls:
   304 ;;		___awdiv
   305 ;;		___awmod
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  078C                     _main:
   314  078C                     l819:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   317                           
   318                           
   319                           ;newmain.c: 30:     unsigned char i;;newmain.c: 32:     OPTION_REGbits.T0CS = 1;
   320  078C  1683               	bsf	3,5	;RP0=1, select bank1
   321  078D  1303               	bcf	3,6	;RP1=0, select bank1
   322  078E  1681               	bsf	1,5	;volatile
   323                           
   324                           ;newmain.c: 33:     OPTION_REGbits.T0SE = 0;
   325  078F  1201               	bcf	1,4	;volatile
   326                           
   327                           ;newmain.c: 34:     OPTION_REGbits.PSA = 1;
   328  0790  1581               	bsf	1,3	;volatile
   329  0791                     l821:
   330                           
   331                           ;newmain.c: 36:     TRISB = 0;
   332  0791  0186               	clrf	6	;volatile
   333                           
   334                           ;newmain.c: 37:     PORTB = 0;
   335  0792  1283               	bcf	3,5	;RP0=0, select bank0
   336  0793  1303               	bcf	3,6	;RP1=0, select bank0
   337  0794  0186               	clrf	6	;volatile
   338  0795                     l823:
   339                           
   340                           ;newmain.c: 39:     TRISAbits.TRISA4 = 1;
   341  0795  1683               	bsf	3,5	;RP0=1, select bank1
   342  0796  1303               	bcf	3,6	;RP1=0, select bank1
   343  0797  1605               	bsf	5,4	;volatile
   344  0798                     l825:
   345                           
   346                           ;newmain.c: 41:     TRISCbits.TRISC0 = 0;
   347  0798  1007               	bcf	7,0	;volatile
   348  0799                     l827:
   349                           
   350                           ;newmain.c: 42:     TRISCbits.TRISC1 = 0;
   351  0799  1087               	bcf	7,1	;volatile
   352  079A                     l829:
   353                           
   354                           ;newmain.c: 44:     PORTCbits.RC0 = 0;
   355  079A  1283               	bcf	3,5	;RP0=0, select bank0
   356  079B  1303               	bcf	3,6	;RP1=0, select bank0
   357  079C  1007               	bcf	7,0	;volatile
   358  079D                     l831:
   359                           
   360                           ;newmain.c: 45:     PORTCbits.RC1 = 0;
   361  079D  1087               	bcf	7,1	;volatile
   362  079E                     l833:
   363                           
   364                           ;newmain.c: 48:     {;newmain.c: 49:         i = TMR0;
   365  079E  0801               	movf	1,w	;volatile
   366  079F  00F9               	movwf	??_main
   367  07A0  0879               	movf	??_main,w
   368  07A1  00FB               	movwf	main@i
   369  07A2                     l835:
   370                           
   371                           ;newmain.c: 50:         if(i>=100)
   372  07A2  3064               	movlw	100
   373  07A3  027B               	subwf	main@i,w
   374  07A4  1C03               	skipc
   375  07A5  2FA7               	goto	u401
   376  07A6  2FA8               	goto	u400
   377  07A7                     u401:
   378  07A7  2FAA               	goto	l839
   379  07A8                     u400:
   380  07A8                     l837:
   381                           
   382                           ;newmain.c: 51:         {;newmain.c: 52:             TMR0 = 0;
   383  07A8  0181               	clrf	1	;volatile
   384                           
   385                           ;newmain.c: 53:             i=0;
   386  07A9  01FB               	clrf	main@i
   387  07AA                     l839:
   388                           
   389                           ;newmain.c: 55:         PORTB = Number[i/10];
   390  07AA  300A               	movlw	10
   391  07AB  00F0               	movwf	___awdiv@divisor
   392  07AC  3000               	movlw	0
   393  07AD  00F1               	movwf	___awdiv@divisor+1
   394  07AE  087B               	movf	main@i,w
   395  07AF  00F9               	movwf	??_main
   396  07B0  01FA               	clrf	??_main+1
   397  07B1  0879               	movf	??_main,w
   398  07B2  00F2               	movwf	___awdiv@dividend
   399  07B3  087A               	movf	??_main+1,w
   400  07B4  00F3               	movwf	___awdiv@dividend+1
   401  07B5  120A  118A  2725  120A  118A  	fcall	___awdiv
   402  07BA  0870               	movf	?___awdiv,w
   403  07BB  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   404  07BC  0084               	movwf	4
   405  07BD  120A  118A  2003  120A  118A  	fcall	stringdir
   406  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   407  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   408  07C4  0086               	movwf	6	;volatile
   409  07C5                     l841:
   410                           
   411                           ;newmain.c: 56:         PORTCbits.RC0 = 0;
   412  07C5  1007               	bcf	7,0	;volatile
   413  07C6                     l843:
   414                           
   415                           ;newmain.c: 57:         _delay((unsigned long)((1)*(20000000/4000.0)));
   416  07C6  3007               	movlw	7
   417  07C7  00FA               	movwf	??_main+1
   418  07C8  307D               	movlw	125
   419  07C9  00F9               	movwf	??_main
   420  07CA                     u417:
   421  07CA  0BF9               	decfsz	??_main,f
   422  07CB  2FCA               	goto	u417
   423  07CC  0BFA               	decfsz	??_main+1,f
   424  07CD  2FCA               	goto	u417
   425  07CE                     l845:
   426                           
   427                           ;newmain.c: 58:         PORTCbits.RC0 = 1;
   428  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   429  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   430  07D0  1407               	bsf	7,0	;volatile
   431  07D1                     l847:
   432                           
   433                           ;newmain.c: 60:         PORTB = Number[i%10];
   434  07D1  300A               	movlw	10
   435  07D2  00F0               	movwf	___awmod@divisor
   436  07D3  3000               	movlw	0
   437  07D4  00F1               	movwf	___awmod@divisor+1
   438  07D5  087B               	movf	main@i,w
   439  07D6  00F9               	movwf	??_main
   440  07D7  01FA               	clrf	??_main+1
   441  07D8  0879               	movf	??_main,w
   442  07D9  00F2               	movwf	___awmod@dividend
   443  07DA  087A               	movf	??_main+1,w
   444  07DB  00F3               	movwf	___awmod@dividend+1
   445  07DC  120A  118A  26CC  120A  118A  	fcall	___awmod
   446  07E1  0870               	movf	?___awmod,w
   447  07E2  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   448  07E3  0084               	movwf	4
   449  07E4  120A  118A  2003  120A  118A  	fcall	stringdir
   450  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   451  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   452  07EB  0086               	movwf	6	;volatile
   453  07EC                     l849:
   454                           
   455                           ;newmain.c: 61:         PORTCbits.RC1 = 0;
   456  07EC  1087               	bcf	7,1	;volatile
   457  07ED                     l851:
   458                           
   459                           ;newmain.c: 62:         _delay((unsigned long)((1)*(20000000/4000.0)));
   460  07ED  3007               	movlw	7
   461  07EE  00FA               	movwf	??_main+1
   462  07EF  307D               	movlw	125
   463  07F0  00F9               	movwf	??_main
   464  07F1                     u427:
   465  07F1  0BF9               	decfsz	??_main,f
   466  07F2  2FF1               	goto	u427
   467  07F3  0BFA               	decfsz	??_main+1,f
   468  07F4  2FF1               	goto	u427
   469  07F5                     l853:
   470                           
   471                           ;newmain.c: 63:         PORTCbits.RC1 = 1;
   472  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   473  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   474  07F7  1487               	bsf	7,1	;volatile
   475  07F8  2F9E               	goto	l833
   476  07F9  120A  118A  2800   	ljmp	start
   477  07FC                     __end_of_main:
   478                           
   479                           	psect	text1
   480  06CC                     __ptext1:	
   481 ;; *************** function ___awmod *****************
   482 ;; Defined at:
   483 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awmod.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  divisor         2    0[COMMON] int 
   486 ;;  dividend        2    2[COMMON] int 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  sign            1    6[COMMON] unsigned char 
   489 ;;  counter         1    5[COMMON] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  2    0[COMMON] int 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         4       0       0       0       0
   500 ;;      Locals:         2       0       0       0       0
   501 ;;      Temps:          1       0       0       0       0
   502 ;;      Totals:         7       0       0       0       0
   503 ;;Total ram usage:        7 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function ___awmod
   514  06CC                     ___awmod:
   515  06CC                     l781:	
   516                           ;incstack = 0
   517                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   518                           
   519  06CC  01F6               	clrf	___awmod@sign
   520  06CD                     l783:
   521  06CD  1FF3               	btfss	___awmod@dividend+1,7
   522  06CE  2ED0               	goto	u311
   523  06CF  2ED1               	goto	u310
   524  06D0                     u311:
   525  06D0  2ED8               	goto	l789
   526  06D1                     u310:
   527  06D1                     l785:
   528  06D1  09F2               	comf	___awmod@dividend,f
   529  06D2  09F3               	comf	___awmod@dividend+1,f
   530  06D3  0AF2               	incf	___awmod@dividend,f
   531  06D4  1903               	skipnz
   532  06D5  0AF3               	incf	___awmod@dividend+1,f
   533  06D6                     l787:
   534  06D6  01F6               	clrf	___awmod@sign
   535  06D7  0AF6               	incf	___awmod@sign,f
   536  06D8                     l789:
   537  06D8  1FF1               	btfss	___awmod@divisor+1,7
   538  06D9  2EDB               	goto	u321
   539  06DA  2EDC               	goto	u320
   540  06DB                     u321:
   541  06DB  2EE1               	goto	l793
   542  06DC                     u320:
   543  06DC                     l791:
   544  06DC  09F0               	comf	___awmod@divisor,f
   545  06DD  09F1               	comf	___awmod@divisor+1,f
   546  06DE  0AF0               	incf	___awmod@divisor,f
   547  06DF  1903               	skipnz
   548  06E0  0AF1               	incf	___awmod@divisor+1,f
   549  06E1                     l793:
   550  06E1  0870               	movf	___awmod@divisor,w
   551  06E2  0471               	iorwf	___awmod@divisor+1,w
   552  06E3  1903               	btfsc	3,2
   553  06E4  2EE6               	goto	u331
   554  06E5  2EE7               	goto	u330
   555  06E6                     u331:
   556  06E6  2F16               	goto	l811
   557  06E7                     u330:
   558  06E7                     l795:
   559  06E7  01F5               	clrf	___awmod@counter
   560  06E8  0AF5               	incf	___awmod@counter,f
   561  06E9  2EF5               	goto	l801
   562  06EA                     l797:
   563  06EA  3001               	movlw	1
   564  06EB                     u345:
   565  06EB  1003               	clrc
   566  06EC  0DF0               	rlf	___awmod@divisor,f
   567  06ED  0DF1               	rlf	___awmod@divisor+1,f
   568  06EE  3EFF               	addlw	-1
   569  06EF  1D03               	skipz
   570  06F0  2EEB               	goto	u345
   571  06F1                     l799:
   572  06F1  3001               	movlw	1
   573  06F2  00F4               	movwf	??___awmod
   574  06F3  0874               	movf	??___awmod,w
   575  06F4  07F5               	addwf	___awmod@counter,f
   576  06F5                     l801:
   577  06F5  1FF1               	btfss	___awmod@divisor+1,7
   578  06F6  2EF8               	goto	u351
   579  06F7  2EF9               	goto	u350
   580  06F8                     u351:
   581  06F8  2EEA               	goto	l797
   582  06F9                     u350:
   583  06F9                     l803:
   584  06F9  0871               	movf	___awmod@divisor+1,w
   585  06FA  0273               	subwf	___awmod@dividend+1,w
   586  06FB  1D03               	skipz
   587  06FC  2EFF               	goto	u365
   588  06FD  0870               	movf	___awmod@divisor,w
   589  06FE  0272               	subwf	___awmod@dividend,w
   590  06FF                     u365:
   591  06FF  1C03               	skipc
   592  0700  2F02               	goto	u361
   593  0701  2F03               	goto	u360
   594  0702                     u361:
   595  0702  2F09               	goto	l807
   596  0703                     u360:
   597  0703                     l805:
   598  0703  0870               	movf	___awmod@divisor,w
   599  0704  02F2               	subwf	___awmod@dividend,f
   600  0705  0871               	movf	___awmod@divisor+1,w
   601  0706  1C03               	skipc
   602  0707  03F3               	decf	___awmod@dividend+1,f
   603  0708  02F3               	subwf	___awmod@dividend+1,f
   604  0709                     l807:
   605  0709  3001               	movlw	1
   606  070A                     u375:
   607  070A  1003               	clrc
   608  070B  0CF1               	rrf	___awmod@divisor+1,f
   609  070C  0CF0               	rrf	___awmod@divisor,f
   610  070D  3EFF               	addlw	-1
   611  070E  1D03               	skipz
   612  070F  2F0A               	goto	u375
   613  0710                     l809:
   614  0710  3001               	movlw	1
   615  0711  02F5               	subwf	___awmod@counter,f
   616  0712  1D03               	btfss	3,2
   617  0713  2F15               	goto	u381
   618  0714  2F16               	goto	u380
   619  0715                     u381:
   620  0715  2EF9               	goto	l803
   621  0716                     u380:
   622  0716                     l811:
   623  0716  0876               	movf	___awmod@sign,w
   624  0717  1903               	btfsc	3,2
   625  0718  2F1A               	goto	u391
   626  0719  2F1B               	goto	u390
   627  071A                     u391:
   628  071A  2F20               	goto	l815
   629  071B                     u390:
   630  071B                     l813:
   631  071B  09F2               	comf	___awmod@dividend,f
   632  071C  09F3               	comf	___awmod@dividend+1,f
   633  071D  0AF2               	incf	___awmod@dividend,f
   634  071E  1903               	skipnz
   635  071F  0AF3               	incf	___awmod@dividend+1,f
   636  0720                     l815:
   637  0720  0873               	movf	___awmod@dividend+1,w
   638  0721  00F1               	movwf	?___awmod+1
   639  0722  0872               	movf	___awmod@dividend,w
   640  0723  00F0               	movwf	?___awmod
   641  0724                     l279:
   642  0724  0008               	return
   643  0725                     __end_of___awmod:
   644                           
   645                           	psect	text2
   646  0725                     __ptext2:	
   647 ;; *************** function ___awdiv *****************
   648 ;; Defined at:
   649 ;;		line 5 in file "D:\File Install MBLAB IDE\XC8\pic\sources\c90\common\awdiv.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  divisor         2    0[COMMON] int 
   652 ;;  dividend        2    2[COMMON] int 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  quotient        2    7[COMMON] int 
   655 ;;  sign            1    6[COMMON] unsigned char 
   656 ;;  counter         1    5[COMMON] unsigned char 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  2    0[COMMON] int 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         4       0       0       0       0
   667 ;;      Locals:         4       0       0       0       0
   668 ;;      Temps:          1       0       0       0       0
   669 ;;      Totals:         9       0       0       0       0
   670 ;;Total ram usage:        9 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function ___awdiv
   681  0725                     ___awdiv:
   682  0725                     l737:	
   683                           ;incstack = 0
   684                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   685                           
   686  0725  01F6               	clrf	___awdiv@sign
   687  0726                     l739:
   688  0726  1FF1               	btfss	___awdiv@divisor+1,7
   689  0727  2F29               	goto	u211
   690  0728  2F2A               	goto	u210
   691  0729                     u211:
   692  0729  2F31               	goto	l745
   693  072A                     u210:
   694  072A                     l741:
   695  072A  09F0               	comf	___awdiv@divisor,f
   696  072B  09F1               	comf	___awdiv@divisor+1,f
   697  072C  0AF0               	incf	___awdiv@divisor,f
   698  072D  1903               	skipnz
   699  072E  0AF1               	incf	___awdiv@divisor+1,f
   700  072F                     l743:
   701  072F  01F6               	clrf	___awdiv@sign
   702  0730  0AF6               	incf	___awdiv@sign,f
   703  0731                     l745:
   704  0731  1FF3               	btfss	___awdiv@dividend+1,7
   705  0732  2F34               	goto	u221
   706  0733  2F35               	goto	u220
   707  0734                     u221:
   708  0734  2F3E               	goto	l751
   709  0735                     u220:
   710  0735                     l747:
   711  0735  09F2               	comf	___awdiv@dividend,f
   712  0736  09F3               	comf	___awdiv@dividend+1,f
   713  0737  0AF2               	incf	___awdiv@dividend,f
   714  0738  1903               	skipnz
   715  0739  0AF3               	incf	___awdiv@dividend+1,f
   716  073A                     l749:
   717  073A  3001               	movlw	1
   718  073B  00F4               	movwf	??___awdiv
   719  073C  0874               	movf	??___awdiv,w
   720  073D  06F6               	xorwf	___awdiv@sign,f
   721  073E                     l751:
   722  073E  01F7               	clrf	___awdiv@quotient
   723  073F  01F8               	clrf	___awdiv@quotient+1
   724  0740                     l753:
   725  0740  0870               	movf	___awdiv@divisor,w
   726  0741  0471               	iorwf	___awdiv@divisor+1,w
   727  0742  1903               	btfsc	3,2
   728  0743  2F45               	goto	u231
   729  0744  2F46               	goto	u230
   730  0745                     u231:
   731  0745  2F7D               	goto	l773
   732  0746                     u230:
   733  0746                     l755:
   734  0746  01F5               	clrf	___awdiv@counter
   735  0747  0AF5               	incf	___awdiv@counter,f
   736  0748  2F54               	goto	l761
   737  0749                     l757:
   738  0749  3001               	movlw	1
   739  074A                     u245:
   740  074A  1003               	clrc
   741  074B  0DF0               	rlf	___awdiv@divisor,f
   742  074C  0DF1               	rlf	___awdiv@divisor+1,f
   743  074D  3EFF               	addlw	-1
   744  074E  1D03               	skipz
   745  074F  2F4A               	goto	u245
   746  0750                     l759:
   747  0750  3001               	movlw	1
   748  0751  00F4               	movwf	??___awdiv
   749  0752  0874               	movf	??___awdiv,w
   750  0753  07F5               	addwf	___awdiv@counter,f
   751  0754                     l761:
   752  0754  1FF1               	btfss	___awdiv@divisor+1,7
   753  0755  2F57               	goto	u251
   754  0756  2F58               	goto	u250
   755  0757                     u251:
   756  0757  2F49               	goto	l757
   757  0758                     u250:
   758  0758                     l763:
   759  0758  3001               	movlw	1
   760  0759                     u265:
   761  0759  1003               	clrc
   762  075A  0DF7               	rlf	___awdiv@quotient,f
   763  075B  0DF8               	rlf	___awdiv@quotient+1,f
   764  075C  3EFF               	addlw	-1
   765  075D  1D03               	skipz
   766  075E  2F59               	goto	u265
   767  075F  0871               	movf	___awdiv@divisor+1,w
   768  0760  0273               	subwf	___awdiv@dividend+1,w
   769  0761  1D03               	skipz
   770  0762  2F65               	goto	u275
   771  0763  0870               	movf	___awdiv@divisor,w
   772  0764  0272               	subwf	___awdiv@dividend,w
   773  0765                     u275:
   774  0765  1C03               	skipc
   775  0766  2F68               	goto	u271
   776  0767  2F69               	goto	u270
   777  0768                     u271:
   778  0768  2F70               	goto	l769
   779  0769                     u270:
   780  0769                     l765:
   781  0769  0870               	movf	___awdiv@divisor,w
   782  076A  02F2               	subwf	___awdiv@dividend,f
   783  076B  0871               	movf	___awdiv@divisor+1,w
   784  076C  1C03               	skipc
   785  076D  03F3               	decf	___awdiv@dividend+1,f
   786  076E  02F3               	subwf	___awdiv@dividend+1,f
   787  076F                     l767:
   788  076F  1477               	bsf	___awdiv@quotient,0
   789  0770                     l769:
   790  0770  3001               	movlw	1
   791  0771                     u285:
   792  0771  1003               	clrc
   793  0772  0CF1               	rrf	___awdiv@divisor+1,f
   794  0773  0CF0               	rrf	___awdiv@divisor,f
   795  0774  3EFF               	addlw	-1
   796  0775  1D03               	skipz
   797  0776  2F71               	goto	u285
   798  0777                     l771:
   799  0777  3001               	movlw	1
   800  0778  02F5               	subwf	___awdiv@counter,f
   801  0779  1D03               	btfss	3,2
   802  077A  2F7C               	goto	u291
   803  077B  2F7D               	goto	u290
   804  077C                     u291:
   805  077C  2F58               	goto	l763
   806  077D                     u290:
   807  077D                     l773:
   808  077D  0876               	movf	___awdiv@sign,w
   809  077E  1903               	btfsc	3,2
   810  077F  2F81               	goto	u301
   811  0780  2F82               	goto	u300
   812  0781                     u301:
   813  0781  2F87               	goto	l777
   814  0782                     u300:
   815  0782                     l775:
   816  0782  09F7               	comf	___awdiv@quotient,f
   817  0783  09F8               	comf	___awdiv@quotient+1,f
   818  0784  0AF7               	incf	___awdiv@quotient,f
   819  0785  1903               	skipnz
   820  0786  0AF8               	incf	___awdiv@quotient+1,f
   821  0787                     l777:
   822  0787  0878               	movf	___awdiv@quotient+1,w
   823  0788  00F1               	movwf	?___awdiv+1
   824  0789  0877               	movf	___awdiv@quotient,w
   825  078A  00F0               	movwf	?___awdiv
   826  078B                     l266:
   827  078B  0008               	return
   828  078C                     __end_of___awdiv:
   829  007E                     btemp	set	126	;btemp
   830  007E                     wtemp0	set	126
   831                           
   832                           	psect	config
   833                           
   834                           ;Config register CONFIG @ 0x2007
   835                           ;	Oscillator Selection bits
   836                           ;	FOSC = HS, HS oscillator
   837                           ;	Watchdog Timer Enable bit
   838                           ;	WDTE = OFF, WDT disabled
   839                           ;	Power-up Timer Enable bit
   840                           ;	PWRTE = ON, PWRT enabled
   841                           ;	Brown-out Reset Enable bit
   842                           ;	BOREN = OFF, BOR disabled
   843                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   844                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   845                           ;	Data EEPROM Memory Code Protection bit
   846                           ;	CPD = OFF, Data EEPROM code protection off
   847                           ;	Flash Program Memory Write Enable bits
   848                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   849                           ;	In-Circuit Debugger Mode bit
   850                           ;	DEBUG = 0x1, unprogrammed default
   851                           ;	Flash Program Memory Code Protection bit
   852                           ;	CP = OFF, Code protection off
   853  2007                     	org	8199
   854  2007  3F32               	dw	16178

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     968
                                              9 COMMON     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 22 08:15:48 2022

                      pc 0002             ___awdiv@sign 0076                       fsr 0004  
                    l266 078B                      l279 0724                      l801 06F5  
                    l803 06F9                      l811 0716                      l741 072A  
                    l813 071B                      l805 0703                      l821 0791  
                    l751 073E                      l743 072F                      l815 0720  
                    l807 0709                      l831 079D                      l823 0795  
                    l761 0754                      l753 0740                      l745 0731  
                    l737 0725                      l809 0710                      l841 07C5  
                    l833 079E                      l825 0798                      l771 0777  
                    l763 0758                      l755 0746                      l747 0735  
                    l739 0726                      l851 07ED                      l843 07C6  
                    l835 07A2                      l827 0799                      l819 078C  
                    l765 0769                      l757 0749                      l773 077D  
                    l749 073A                      l781 06CC                      l853 07F5  
                    l845 07CE                      l837 07A8                      l829 079A  
                    l775 0782                      l767 076F                      l759 0750  
                    l791 06DC                      l783 06CD                      l847 07D1  
                    l839 07AA                      l777 0787                      l769 0770  
                    l793 06E1                      l785 06D1                      l849 07EC  
                    l795 06E7                      l787 06D6                      l797 06EA  
                    l789 06D8                      l799 06F1                      u210 072A  
                    u211 0729                      u300 0782                      u220 0735  
                    u301 0781                      u221 0734                      u230 0746  
                    u310 06D1                      u231 0745                      u311 06D0  
                    u320 06DC                      u400 07A8                      u321 06DB  
                    u401 07A7                      u250 0758                      u330 06E7  
                    u251 0757                      u331 06E6                      u245 074A  
                    u270 0769                      u350 06F9                      u271 0768  
                    u351 06F8                      u360 0703                      u265 0759  
                    u361 0702                      u345 06EB                      u417 07CA  
                    u290 077D                      u291 077C                      u275 0765  
                    u427 07F1                      u380 0716                      u285 0771  
                    u381 0715                      u365 06FF                      u390 071B  
                    u391 071A                      u375 070A                      fsr0 0004  
           ___awmod@sign 0076                     _TMR0 0001                     _main 078C  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 078C          __end_of___awmod 0725          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTB 0006                    _TRISB 0086  
                  main@i 007B                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0079         ___awdiv@dividend 0072                   _Number 0009  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 07FC  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 078C  
             __stringtab 0003                  ___awdiv 0725                  ___awmod 06CC  
                __ptext1 06CC                  __ptext2 0725         ___awmod@dividend 0072  
   end_of_initialization 07FC                _PORTCbits 0007                _TRISAbits 0085  
              _TRISCbits 0087           __end_of_Number 0013      start_initialization 07FC  
              ___latbits 0002                 ?___awdiv 0070                 ?___awmod 0070  
              __pstrings 0003              __stringbase 0008         __size_of___awdiv 0067  
       __size_of___awmod 0059       __end_of__stringtab 0009            __size_of_main 0070  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
